{"version":3,"file":"socket-engine.js","sources":["../../../../../../../modules/common/engine/src/file-loader.ts","../../../../../../../modules/common/engine/src/engine.ts","../../../../../../../modules/common/engine/private_api.ts","../../../../../../../modules/common/engine/public_api.ts","../../../../../../../modules/common/engine/index.ts","../../../../../../modules/socket-engine/src/main.ts","../../../../../../modules/socket-engine/public_api.ts","../../../../../../modules/socket-engine/index.ts","../../../../../../modules/socket-engine/socket-engine.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport * as fs from 'fs';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException | null, data: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(data.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport { Compiler, CompilerFactory, NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { INITIAL_CONFIG, platformDynamicServer, renderModuleFactory } from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport { FileLoader } from './file-loader';\nimport { RenderOptions } from './interfaces';\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory?: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n    const factory = await this.getFactory(moduleOrFactory);\n\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  async getFactory(moduleOrFactory: Type<{}> | NgModuleFactory<{}>): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return moduleOrFactory;\n    } else {\n      // we're in JIT mode\n      const moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return moduleFactory;\n      }\n\n      // Compile the module and cache it\n      const factory = await this.getCompiler().compileModuleAsync(moduleOrFactory);\n      this.factoryCacheMap.set(moduleOrFactory, factory);\n\n      return factory;\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine,\n  RenderOptions as ɵRenderOptions } from './src/index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { ɵCommonEngine as CommonEngine,\n  ɵRenderOptions as RenderOptions } from '@nguniversal/common/engine';\nimport * as net from 'net';\n\nexport interface SocketEngineServer {\n  close: () => void;\n}\n\nexport interface SocketEngineRenderOptions extends RenderOptions {\n  id: number;\n}\n\nexport interface SocketEngineResponse {\n  id: number;\n  html: string|null;\n  error?: Error;\n}\n\nexport function startSocketEngine(\n  moduleOrFactory: Type<{}> | NgModuleFactory<{}>,\n  providers: StaticProvider[] = [],\n  host = 'localhost',\n  port = 9090\n): Promise<SocketEngineServer> {\n  return new Promise((resolve, _reject) => {\n    const engine = new CommonEngine(moduleOrFactory, providers);\n\n    const server = net.createServer(socket => {\n      socket.on('data', async buff => {\n        const message = buff.toString();\n        const renderOptions = JSON.parse(message) as SocketEngineRenderOptions;\n        try {\n          const html = await engine.render(renderOptions);\n          socket.write(JSON.stringify({html, id: renderOptions.id} as SocketEngineResponse));\n        } catch (error) {\n          // send the error down to the client then rethrow it\n          socket.write(JSON.stringify({\n            html: null,\n            id: renderOptions.id,\n            error: error.toString(),\n          } as SocketEngineResponse));\n        }\n      });\n    });\n\n    server.listen(port, host);\n    resolve({close: () => server.close()});\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { startSocketEngine, SocketEngineResponse, SocketEngineRenderOptions } from './src/main';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile","fs.readFileSync","net.createServer"],"mappings":"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"}