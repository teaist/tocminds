{"version":3,"file":"file_utils.js","sourceRoot":"","sources":["../../../../../../libs/cli/src/cmds/common/file_utils.ts"],"names":[],"mappings":";;AAAA;;;;;;GAMG;AACH,yBAAyB;AACzB,6BAA6B;AAE7B,MAAa,SAAS;IACpB,MAAM,CAAC,QAAQ,CAAC,YAAoB;QAClC,OAAO,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,YAAoB;QACxC,OAAO,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,YAAoB,EAAE,QAAyB;QAC9D,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QAChD,EAAE,CAAC,aAAa,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,YAAoB;QACnC,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;YACtE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC3B,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC3C;QACD,OAAO,OAAO,CAAC,MAAM,EAAE;YACrB,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAG,CAAC,CAAC;SAC9B;IACH,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,CAAS;QACrB,MAAM,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;YACjB,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YAC7B,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACxC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjB;IACH,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,YAAoB;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,YAAY,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,KAAe,EAAE,OAAe,EAAE,YAAY,GAAG,EAAE;QAC9D,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;QACxE,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAY,EAAE,KAAa,EAAE,EAAE;YAC/C,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC9B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5C,CAAC;CACF;AAtDD,8BAsDC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport class FileUtils {\n  static readFile(absolutePath: string): string {\n    return fs.readFileSync(absolutePath, 'utf8');\n  }\n\n  static readFileBuffer(absolutePath: string): Buffer {\n    return fs.readFileSync(absolutePath);\n  }\n\n  static writeFile(absolutePath: string, contents: string | Buffer) {\n    FileUtils.ensureDir(path.dirname(absolutePath));\n    fs.writeFileSync(absolutePath, contents);\n  }\n\n  static ensureDir(absolutePath: string): void {\n    const parents: string[] = [];\n    while (!FileUtils.isRoot(absolutePath) && !fs.existsSync(absolutePath)) {\n      parents.push(absolutePath);\n      absolutePath = path.dirname(absolutePath);\n    }\n    while (parents.length) {\n      fs.mkdirSync(parents.pop()!);\n    }\n  }\n\n  static remove(p: string): void {\n    const stat = fs.statSync(p);\n    if (stat.isFile()) {\n      fs.unlinkSync(p);\n    } else if (stat.isDirectory()) {\n      fs.readdirSync(p).forEach(child => {\n        const absChild = path.resolve(p, child);\n        FileUtils.remove(absChild);\n      });\n      fs.rmdirSync(p);\n    }\n  }\n\n  static isRoot(absolutePath: string): boolean {\n    return path.dirname(absolutePath) === absolutePath;\n  }\n\n  static dedup(files: string[], pattern: RegExp, replaceValue = ''): string[] {\n    const filesSet = files.map(file => file.replace(pattern, replaceValue));\n    const dedup = [];\n    const indexes = [];\n    filesSet.forEach((file: string, index: number) => {\n      if (dedup.indexOf(file) === -1) {\n        dedup.push(file);\n        indexes.push(index);\n      }\n    });\n    return indexes.map(index => files[index]);\n  }\n}\n"]}