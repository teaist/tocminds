{"version":3,"file":"xliff2_translation_serializer.js","sourceRoot":"","sources":["../../../../../../../libs/cli/src/cmds/extract/translation_files/xliff2_translation_serializer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ɵParsedMessage } from '@angular/localize';\r\nimport { ParsedMessageLegacy } from '../../../cmds/common/util';\r\nimport { TranslationSerializer } from './translation_serializer';\r\nimport { XmlFile } from './xml_file';\r\n\r\nexport class Xliff2TranslationSerializer implements TranslationSerializer {\r\n  renderFile(\r\n    messages: (ɵParsedMessage | ParsedMessageLegacy)[],\r\n    locale: string,\r\n    isTarget = false\r\n  ): string {\r\n    const xml = new XmlFile();\r\n    xml.startTag('xliff', {\r\n      version: '2.0',\r\n      xmlns: 'urn:oasis:names:tc:xliff:document:2.0',\r\n      srcLang: locale,\r\n      trgLang: locale\r\n    });\r\n    xml.startTag('file');\r\n    messages.forEach(message => {\r\n      xml.startTag('unit', {\r\n        id:\r\n          (message as ɵParsedMessage).id ||\r\n          (message as ParsedMessageLegacy).messageId\r\n      });\r\n      if (message.meaning || message.description) {\r\n        xml.startTag('notes');\r\n        if (message.description) {\r\n          this.renderNote(xml, 'description', message.description);\r\n        }\r\n        if (message.meaning) {\r\n          this.renderNote(xml, 'meaning', message.meaning);\r\n        }\r\n        xml.endTag('notes');\r\n      }\r\n      xml.startTag('segment');\r\n      if (!isTarget) {\r\n        this.generateMessageTag(xml, 'source', message);\r\n      }\r\n      this.generateMessageTag(xml, 'target', message);\r\n      xml.endTag('segment');\r\n      xml.endTag('unit');\r\n    });\r\n    xml.endTag('file');\r\n    xml.endTag('xliff');\r\n    return xml.toString();\r\n  }\r\n\r\n  private generateMessageTag(\r\n    xml: XmlFile,\r\n    tagName: string,\r\n    message: ɵParsedMessage | ParsedMessageLegacy\r\n  ) {\r\n    xml.startTag(tagName, {}, { preserveWhitespace: true });\r\n    this.renderMessage(xml, message);\r\n    xml.endTag(tagName, { preserveWhitespace: false });\r\n  }\r\n\r\n  private renderMessage(\r\n    xml: XmlFile,\r\n    message: ɵParsedMessage | ParsedMessageLegacy\r\n  ): void {\r\n    xml.text(message.messageParts[0]);\r\n    for (let i = 1; i < message.messageParts.length; i++) {\r\n      const placeholderName = message.placeholderNames[i - 1];\r\n      if (placeholderName.startsWith('START_')) {\r\n        xml.startTag('pc', {\r\n          id: `${i}`,\r\n          equivStart: placeholderName,\r\n          equivEnd: placeholderName.replace(/^START/, 'CLOSE')\r\n        });\r\n      } else if (placeholderName.startsWith('CLOSE_')) {\r\n        xml.endTag('pc');\r\n      } else {\r\n        xml.startTag(\r\n          'ph',\r\n          { id: `${i}`, equiv: placeholderName },\r\n          { selfClosing: true }\r\n        );\r\n      }\r\n      xml.text(message.messageParts[i]);\r\n    }\r\n  }\r\n\r\n  private renderNote(xml: XmlFile, name: string, value: string) {\r\n    xml.startTag('note', { category: name }, { preserveWhitespace: true });\r\n    xml.text(value);\r\n    xml.endTag('note', { preserveWhitespace: false });\r\n  }\r\n}\r\n"]}