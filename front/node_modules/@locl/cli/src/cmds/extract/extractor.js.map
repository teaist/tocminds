{"version":3,"file":"extractor.js","sourceRoot":"","sources":["../../../../../../libs/cli/src/cmds/extract/extractor.ts"],"names":[],"mappings":";;AAQA,sCAA4C;AAE5C,gFAA+E;AAC/E,0EAAyE;AAGzE;;;GAGG;AACH,MAAa,SAAS;IAGpB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,aAAQ,GAAqB,EAAE,CAAC;IAEe,CAAC;IAEhD,eAAe,CAAC,UAAkB;QAChC,IAAI,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YACpC,2EAA2E;YAC3E,oBAAa,CAAC,UAAU,EAAE;gBACxB,OAAO,EAAE;oBACP,+CAAuB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;oBACxD,yCAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;iBACtD;gBACD,IAAI,EAAE,KAAK;gBACX,GAAG,EAAE,KAAK;aACX,CAAC,CAAC;SACJ;IACH,CAAC;CACF;AAlBD,8BAkBC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ɵParsedMessage } from '@angular/localize';\r\nimport { transformSync } from '@babel/core';\r\n\r\nimport { makeEs2015ExtractPlugin } from './source_files/es2015_extract_plugin';\r\nimport { makeEs5ExtractPlugin } from './source_files/es5_extract_plugin';\r\nimport { Diagnostics } from '../common/diagnostics';\r\n\r\n/**\r\n * A class that extracts parsed messages from file contents, by parsing the contents as JavaScript\r\n * and looking for occurrences of `$localize` in the source code.\r\n */\r\nexport class Extractor {\r\n  messages: ɵParsedMessage[] = [];\r\n\r\n  constructor(private diagnostics: Diagnostics) {}\r\n\r\n  extractMessages(sourceCode: string): void {\r\n    if (sourceCode.includes('$localize')) {\r\n      // Only bother to parse the file if it contains a reference to `$localize`.\r\n      transformSync(sourceCode, {\r\n        plugins: [\r\n          makeEs2015ExtractPlugin(this.messages, this.diagnostics),\r\n          makeEs5ExtractPlugin(this.messages, this.diagnostics)\r\n        ],\r\n        code: false,\r\n        ast: false\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}