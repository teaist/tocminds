{"version":3,"file":"locl-cli.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@locl/cli/lib/cli.module.ts","ng://@locl/cli/cmds/common/diagnostics.ts","ng://@locl/cli/cmds/common/file_utils.ts","ng://@locl/cli/cmds/extract/translation_files/json_translation_serializer.ts","ng://@locl/cli/cmds/extract/translation_files/xml_file.ts","ng://@locl/cli/cmds/extract/translation_files/xliff1_translation_serializer.ts","ng://@locl/cli/cmds/extract/translation_files/xliff2_translation_serializer.ts","ng://@locl/cli/cmds/extract/translation_files/xmb_translation_serializer.ts","ng://@locl/cli/cmds/extract/translation_files/xtb_translation_serializer.ts","ng://@locl/cli/cmds/common/util.ts","ng://@locl/cli/cmds/extract/source_file_utils.ts","ng://@locl/cli/cmds/extract/source_files/es2015_extract_plugin.ts","ng://@locl/cli/cmds/extract/source_files/es5_extract_plugin.ts","ng://@locl/cli/cmds/extract/extractor.ts","ng://@locl/cli/cmds/extract.ts","ng://@locl/cli/main.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\n\n// not used, only there to make ng-packagr happy\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class CliModule {}\n","import * as chalk from 'chalk';\n\n/**\n * This class is used to collect and then report warnings and errors that occur during the execution\n * of the tools.\n */\nexport class Diagnostics {\n  readonly messages = [];\n\n  get hasErrors() {\n    return this.messages.some(m => m.type === 'error');\n  }\n\n  log(message: string) {\n    this.messages.push({ type: '', message });\n  }\n\n  warn(message: string) {\n    this.messages.push({ type: 'warning', message });\n  }\n\n  error(message: string) {\n    this.messages.push({ type: 'error', message });\n  }\n\n  formatDiagnostics(message: string): string {\n    const errors = this.messages!.filter(d => d.type === 'error').map(\n      d => ' - ' + d.message\n    );\n    const warnings = this.messages!.filter(d => d.type === 'warning').map(\n      d => ' - ' + d.message\n    );\n    if (errors.length) {\n      message += '\\nERRORS:\\n' + errors.join('\\n');\n    }\n    if (warnings.length) {\n      message += '\\nWARNINGS:\\n' + warnings.join('\\n');\n    }\n    return message;\n  }\n\n  logMessages() {\n    while (this.messages.length) {\n      const m = this.messages.shift();\n      switch (m.type) {\n        case 'warning':\n          console.warn(chalk.yellow(`Warning: ${m.message}`));\n          break;\n        case 'error':\n          console.error(chalk.red(`Error: ${m.message}`));\n          break;\n        default:\n          console.log(chalk.blue(`${m.message}`));\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport class FileUtils {\n  static readFile(absolutePath: string): string {\n    return fs.readFileSync(absolutePath, 'utf8');\n  }\n\n  static readFileBuffer(absolutePath: string): Buffer {\n    return fs.readFileSync(absolutePath);\n  }\n\n  static writeFile(absolutePath: string, contents: string | Buffer) {\n    FileUtils.ensureDir(path.dirname(absolutePath));\n    fs.writeFileSync(absolutePath, contents);\n  }\n\n  static ensureDir(absolutePath: string): void {\n    const parents: string[] = [];\n    while (!FileUtils.isRoot(absolutePath) && !fs.existsSync(absolutePath)) {\n      parents.push(absolutePath);\n      absolutePath = path.dirname(absolutePath);\n    }\n    while (parents.length) {\n      fs.mkdirSync(parents.pop()!);\n    }\n  }\n\n  static remove(p: string): void {\n    const stat = fs.statSync(p);\n    if (stat.isFile()) {\n      fs.unlinkSync(p);\n    } else if (stat.isDirectory()) {\n      fs.readdirSync(p).forEach(child => {\n        const absChild = path.resolve(p, child);\n        FileUtils.remove(absChild);\n      });\n      fs.rmdirSync(p);\n    }\n  }\n\n  static isRoot(absolutePath: string): boolean {\n    return path.dirname(absolutePath) === absolutePath;\n  }\n\n  static dedup(files: string[], pattern: RegExp, replaceValue = ''): string[] {\n    const filesSet = files.map(file => file.replace(pattern, replaceValue));\n    const dedup = [];\n    const indexes = [];\n    filesSet.forEach((file: string, index: number) => {\n      if (dedup.indexOf(file) === -1) {\n        dedup.push(file);\n        indexes.push(index);\n      }\n    });\n    return indexes.map(index => files[index]);\n  }\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ɵParsedMessage } from '@angular/localize';\r\nimport { ParsedMessageLegacy } from '../../../cmds/common/util';\r\nimport { TranslationSerializer } from './translation_serializer';\r\n\r\ninterface SimpleJsonTranslationFile {\r\n  locale: string;\r\n  translations: Record<string, string>;\r\n}\r\n\r\nexport class JsonTranslationSerializer implements TranslationSerializer {\r\n  renderFile(\r\n    messages: (ɵParsedMessage | ParsedMessageLegacy)[],\r\n    locale: string\r\n  ): string {\r\n    const fileObj: SimpleJsonTranslationFile = {\r\n      locale,\r\n      translations: {}\r\n    };\r\n    messages.forEach(message => {\r\n      fileObj.translations[\r\n        (message as ɵParsedMessage).id ||\r\n          (message as ParsedMessageLegacy).messageId\r\n      ] =\r\n        (message as ɵParsedMessage).text ||\r\n        (message as ParsedMessageLegacy).messageString;\r\n    });\r\n    return JSON.stringify(fileObj, null, 2);\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface Options {\n  selfClosing?: boolean;\n  preserveWhitespace?: boolean;\n}\n\nexport class XmlFile {\n  private output = '';\n  private indent = '';\n  private elements: string[] = [];\n  private preservingWhitespace = false;\n  toString() {\n    return this.output;\n  }\n\n  startTag(\n    name: string,\n    attributes: Record<string, string> = {},\n    { selfClosing = false, preserveWhitespace }: Options = {}\n  ): this {\n    if (!this.preservingWhitespace) {\n      this.output += this.indent;\n    }\n\n    this.output += `<${name}`;\n\n    Object.keys(attributes).forEach(attrName => {\n      if (attributes[attrName]) {\n        this.output += ` ${attrName}=\"${escapeXml(attributes[attrName])}\"`;\n      }\n    });\n\n    if (selfClosing) {\n      this.output += '/>';\n    } else {\n      this.output += '>';\n      this.elements.push(name);\n      this.incIndent();\n    }\n\n    if (preserveWhitespace !== undefined) {\n      this.preservingWhitespace = preserveWhitespace;\n    }\n    if (!this.preservingWhitespace) {\n      this.output += `\\n`;\n    }\n    return this;\n  }\n\n  endTag(name: string, { preserveWhitespace }: Options = {}): this {\n    const expectedTag = this.elements.pop();\n    if (expectedTag !== name) {\n      throw new Error(\n        `Unexpected closing tag: \"${name}\", expected: \"${expectedTag}\"`\n      );\n    }\n\n    this.decIndent();\n\n    if (!this.preservingWhitespace) {\n      this.output += this.indent;\n    }\n    this.output += `</${name}>`;\n\n    if (preserveWhitespace !== undefined) {\n      this.preservingWhitespace = preserveWhitespace;\n    }\n    if (!this.preservingWhitespace) {\n      this.output += `\\n`;\n    }\n    return this;\n  }\n\n  text(str: string): this {\n    this.output += escapeXml(str);\n    return this;\n  }\n\n  startPreserveWhitespace() {\n    this.preservingWhitespace = true;\n  }\n  stopPreserveWhitespace() {\n    this.preservingWhitespace = false;\n  }\n\n  private incIndent() {\n    this.indent = this.indent + '  ';\n  }\n  private decIndent() {\n    this.indent = this.indent.slice(0, -2);\n  }\n}\n\nconst _ESCAPED_CHARS: [RegExp, string][] = [\n  [/&/g, '&amp;'],\n  [/\"/g, '&quot;'],\n  [/'/g, '&apos;'],\n  [/</g, '&lt;'],\n  [/>/g, '&gt;']\n];\n\nfunction escapeXml(text: string): string {\n  return _ESCAPED_CHARS.reduce(\n    (t: string, entry: [RegExp, string]) => t.replace(entry[0], entry[1]),\n    text\n  );\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ɵParsedMessage } from '@angular/localize';\r\nimport { ParsedMessageLegacy } from '../../../cmds/common/util';\r\nimport { TranslationSerializer } from './translation_serializer';\r\nimport { XmlFile } from './xml_file';\r\n\r\nexport class Xliff1TranslationSerializer implements TranslationSerializer {\r\n  renderFile(\r\n    messages: (ɵParsedMessage | ParsedMessageLegacy)[],\r\n    locale: string,\r\n    isTarget = false\r\n  ): string {\r\n    const xml = new XmlFile();\r\n    xml.startTag('xliff', {\r\n      version: '1.2',\r\n      xmlns: 'urn:oasis:names:tc:xliff:document:1.2'\r\n    });\r\n    const fileAttrs = {\r\n      ['source-language']: isTarget ? undefined : locale,\r\n      ['target-language']: locale,\r\n      datatype: 'plaintext'\r\n    };\r\n    xml.startTag('file', fileAttrs);\r\n    xml.startTag('body');\r\n    messages.forEach(message => {\r\n      xml.startTag('trans-unit', {\r\n        id:\r\n          (message as ɵParsedMessage).id ||\r\n          (message as ParsedMessageLegacy).messageId,\r\n        datatype: 'html'\r\n      });\r\n      if (!isTarget) {\r\n        this.generateMessageTag(xml, 'source', message);\r\n      }\r\n      this.generateMessageTag(xml, 'target', message);\r\n      if (message.description) {\r\n        this.renderNote(xml, 'description', message.description);\r\n      }\r\n      if (message.meaning) {\r\n        this.renderNote(xml, 'meaning', message.meaning);\r\n      }\r\n      xml.endTag('trans-unit');\r\n    });\r\n    xml.endTag('body');\r\n    xml.endTag('file');\r\n    xml.endTag('xliff');\r\n    return xml.toString();\r\n  }\r\n\r\n  private generateMessageTag(\r\n    xml: XmlFile,\r\n    tagName: string,\r\n    message: ɵParsedMessage | ParsedMessageLegacy\r\n  ) {\r\n    xml.startTag(tagName, {}, { preserveWhitespace: true });\r\n    this.renderMessage(xml, message);\r\n    xml.endTag(tagName, { preserveWhitespace: false });\r\n  }\r\n\r\n  private renderMessage(\r\n    xml: XmlFile,\r\n    message: ɵParsedMessage | ParsedMessageLegacy\r\n  ): void {\r\n    xml.text(message.messageParts[0]);\r\n    for (let i = 1; i < message.messageParts.length; i++) {\r\n      xml.startTag(\r\n        'x',\r\n        { id: message.placeholderNames[i - 1] },\r\n        { selfClosing: true }\r\n      );\r\n      xml.text(message.messageParts[i]);\r\n    }\r\n  }\r\n\r\n  private renderNote(xml: XmlFile, name: string, value: string) {\r\n    xml.startTag(\r\n      'note',\r\n      { priority: '1', from: name },\r\n      { preserveWhitespace: true }\r\n    );\r\n    xml.text(value);\r\n    xml.endTag('note', { preserveWhitespace: false });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ɵParsedMessage } from '@angular/localize';\r\nimport { ParsedMessageLegacy } from '../../../cmds/common/util';\r\nimport { TranslationSerializer } from './translation_serializer';\r\nimport { XmlFile } from './xml_file';\r\n\r\nexport class Xliff2TranslationSerializer implements TranslationSerializer {\r\n  renderFile(\r\n    messages: (ɵParsedMessage | ParsedMessageLegacy)[],\r\n    locale: string,\r\n    isTarget = false\r\n  ): string {\r\n    const xml = new XmlFile();\r\n    xml.startTag('xliff', {\r\n      version: '2.0',\r\n      xmlns: 'urn:oasis:names:tc:xliff:document:2.0',\r\n      srcLang: locale,\r\n      trgLang: locale\r\n    });\r\n    xml.startTag('file');\r\n    messages.forEach(message => {\r\n      xml.startTag('unit', {\r\n        id:\r\n          (message as ɵParsedMessage).id ||\r\n          (message as ParsedMessageLegacy).messageId\r\n      });\r\n      if (message.meaning || message.description) {\r\n        xml.startTag('notes');\r\n        if (message.description) {\r\n          this.renderNote(xml, 'description', message.description);\r\n        }\r\n        if (message.meaning) {\r\n          this.renderNote(xml, 'meaning', message.meaning);\r\n        }\r\n        xml.endTag('notes');\r\n      }\r\n      xml.startTag('segment');\r\n      if (!isTarget) {\r\n        this.generateMessageTag(xml, 'source', message);\r\n      }\r\n      this.generateMessageTag(xml, 'target', message);\r\n      xml.endTag('segment');\r\n      xml.endTag('unit');\r\n    });\r\n    xml.endTag('file');\r\n    xml.endTag('xliff');\r\n    return xml.toString();\r\n  }\r\n\r\n  private generateMessageTag(\r\n    xml: XmlFile,\r\n    tagName: string,\r\n    message: ɵParsedMessage | ParsedMessageLegacy\r\n  ) {\r\n    xml.startTag(tagName, {}, { preserveWhitespace: true });\r\n    this.renderMessage(xml, message);\r\n    xml.endTag(tagName, { preserveWhitespace: false });\r\n  }\r\n\r\n  private renderMessage(\r\n    xml: XmlFile,\r\n    message: ɵParsedMessage | ParsedMessageLegacy\r\n  ): void {\r\n    xml.text(message.messageParts[0]);\r\n    for (let i = 1; i < message.messageParts.length; i++) {\r\n      const placeholderName = message.placeholderNames[i - 1];\r\n      if (placeholderName.startsWith('START_')) {\r\n        xml.startTag('pc', {\r\n          id: `${i}`,\r\n          equivStart: placeholderName,\r\n          equivEnd: placeholderName.replace(/^START/, 'CLOSE')\r\n        });\r\n      } else if (placeholderName.startsWith('CLOSE_')) {\r\n        xml.endTag('pc');\r\n      } else {\r\n        xml.startTag(\r\n          'ph',\r\n          { id: `${i}`, equiv: placeholderName },\r\n          { selfClosing: true }\r\n        );\r\n      }\r\n      xml.text(message.messageParts[i]);\r\n    }\r\n  }\r\n\r\n  private renderNote(xml: XmlFile, name: string, value: string) {\r\n    xml.startTag('note', { category: name }, { preserveWhitespace: true });\r\n    xml.text(value);\r\n    xml.endTag('note', { preserveWhitespace: false });\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ɵParsedMessage } from '@angular/localize';\nimport { ParsedMessageLegacy } from '../../../cmds/common/util';\nimport { TranslationSerializer } from './translation_serializer';\nimport { XmlFile } from './xml_file';\n\nconst DOCTYPE = `<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>`;\n\nexport class XmbTranslationSerializer implements TranslationSerializer {\n  renderFile(messages: (ɵParsedMessage | ParsedMessageLegacy)[]): string {\n    const xml = new XmlFile();\n    xml.startTag('messagebundle');\n    messages.forEach(message => {\n      xml.startTag(\n        'msg',\n        {\n          id:\n            (message as ɵParsedMessage).id ||\n            (message as ParsedMessageLegacy).messageId,\n          desc: message.description,\n          meaning: message.meaning\n        },\n        { preserveWhitespace: true }\n      );\n      this.renderMessage(xml, message);\n      xml.endTag('msg', { preserveWhitespace: false });\n    });\n    xml.endTag('messagebundle');\n    return xml.toString();\n  }\n\n  private renderMessage(\n    xml: XmlFile,\n    message: ɵParsedMessage | ParsedMessageLegacy\n  ): void {\n    xml.text(message.messageParts[0]);\n    for (let i = 1; i < message.messageParts.length; i++) {\n      xml.startTag(\n        'ph',\n        { name: message.placeholderNames[i - 1] },\n        { selfClosing: true }\n      );\n      xml.text(message.messageParts[i]);\n    }\n  }\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ɵParsedMessage } from '@angular/localize';\r\nimport { ParsedMessageLegacy } from '../../../cmds/common/util';\r\nimport { TranslationSerializer } from './translation_serializer';\r\nimport { XmlFile } from './xml_file';\r\n\r\nconst DOCTYPE = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE translationbundle [\r\n<!ELEMENT translationbundle (translation)*>\r\n<!ATTLIST translationbundle lang CDATA #REQUIRED>\r\n\r\n<!ELEMENT translation (#PCDATA|ph)*>\r\n<!ATTLIST translation id CDATA #REQUIRED>\r\n<!ATTLIST translation desc CDATA #IMPLIED>\r\n<!ATTLIST translation meaning CDATA #IMPLIED>\r\n<!ATTLIST translation xml:space (default|preserve) \"default\">\r\n\r\n<!ELEMENT ph (#PCDATA|ex)*>\r\n<!ATTLIST ph name CDATA #REQUIRED>\r\n\r\n<!ELEMENT ex (#PCDATA)>\r\n]>\r\n`;\r\n\r\nexport class XtbTranslationSerializer implements TranslationSerializer {\r\n  renderFile(\r\n    messages: (ɵParsedMessage | ParsedMessageLegacy)[],\r\n    locale: string\r\n  ): string {\r\n    const xml = new XmlFile();\r\n    xml.startTag('translationbundle', { lang: locale });\r\n    messages.forEach(message => {\r\n      xml.startTag(\r\n        'translation',\r\n        {\r\n          id:\r\n            (message as ɵParsedMessage).id ||\r\n            (message as ParsedMessageLegacy).messageId,\r\n          desc: message.description,\r\n          meaning: message.meaning\r\n        },\r\n        { preserveWhitespace: true }\r\n      );\r\n      this.renderMessage(xml, message);\r\n      xml.endTag('translation', { preserveWhitespace: false });\r\n    });\r\n    xml.endTag('translationbundle');\r\n    return DOCTYPE + xml.toString();\r\n  }\r\n\r\n  private renderMessage(\r\n    xml: XmlFile,\r\n    message: ɵParsedMessage | ParsedMessageLegacy\r\n  ): void {\r\n    xml.text(message.messageParts[0]);\r\n    for (let i = 1; i < message.messageParts.length; i++) {\r\n      xml.startTag(\r\n        'ph',\r\n        { name: message.placeholderNames[i - 1] },\r\n        { selfClosing: true }\r\n      );\r\n      xml.text(message.messageParts[i]);\r\n    }\r\n  }\r\n}\r\n","import { JsonTranslationSerializer } from '../extract/translation_files/json_translation_serializer';\r\nimport { TranslationSerializer } from '../extract/translation_files/translation_serializer';\r\nimport { Xliff1TranslationSerializer } from '../extract/translation_files/xliff1_translation_serializer';\r\nimport { Xliff2TranslationSerializer } from '../extract/translation_files/xliff2_translation_serializer';\r\nimport { XmbTranslationSerializer } from '../extract/translation_files/xmb_translation_serializer';\r\nimport { ɵMessageId, ɵParsedMessage } from '@angular/localize';\r\nimport { ParsedTranslation } from '../convert/translations';\r\nimport { XtbTranslationSerializer } from '../extract/translation_files/xtb_translation_serializer';\r\n\r\nexport type TranslationFormat =\r\n  | 'json'\r\n  | 'xmb'\r\n  | 'xliff1'\r\n  | 'xliff2'\r\n  | 'xlf'\r\n  | 'xlf2'\r\n  | 'xtb';\r\n\r\nexport function getTranslationSerializer(\r\n  format: TranslationFormat\r\n): TranslationSerializer {\r\n  switch (format) {\r\n    case 'json':\r\n      return new JsonTranslationSerializer();\r\n    case 'xliff1':\r\n    case 'xlf':\r\n      return new Xliff1TranslationSerializer();\r\n    case 'xliff2':\r\n    case 'xlf2':\r\n      return new Xliff2TranslationSerializer();\r\n    case 'xmb':\r\n      return new XmbTranslationSerializer();\r\n    case 'xtb':\r\n      return new XtbTranslationSerializer();\r\n  }\r\n}\r\n\r\nexport function getExtension(format: TranslationFormat): string {\r\n  switch (format) {\r\n    case 'json':\r\n    case 'xmb':\r\n    case 'xtb':\r\n      return format;\r\n    default:\r\n      return 'xlf';\r\n  }\r\n}\r\n\r\n/**\r\n * The character used to mark the start and end of a \"block\" in a `$localize` tagged string.\r\n * A block can indicate metadata about the message or specify a name of a placeholder for a\r\n * substitution expressions.\r\n *\r\n * For example:\r\n *\r\n * ```ts\r\n * $localize`Hello, ${title}:title:!`;\r\n * $localize`:meaning|description@@id:source message text`;\r\n * ```\r\n */\r\nexport const BLOCK_MARKER = ':';\r\n\r\n/**\r\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\r\n *\r\n * @param cooked The cooked string (where escaped chars have been processed)\r\n * @param raw The raw string (where escape sequences are still in place)\r\n *\r\n * @returns the index of the end of block marker\r\n * @throws an error if the block is unterminated\r\n */\r\nexport function findEndOfBlock(cooked: string, raw: string): number {\r\n  /************************************************************************************************\r\n   * This function is repeated in `src/localize/src/localize.ts` and the two should be kept in sync.\r\n   * (See that file for more explanation of why.)\r\n   ************************************************************************************************/\r\n  for (\r\n    let cookedIndex = 1, rawIndex = 1;\r\n    cookedIndex < cooked.length;\r\n    cookedIndex++, rawIndex++\r\n  ) {\r\n    if (raw[rawIndex] === '\\\\') {\r\n      rawIndex++;\r\n    } else if (cooked[cookedIndex] === BLOCK_MARKER) {\r\n      return cookedIndex;\r\n    }\r\n  }\r\n  throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\r\n}\r\n\r\n/**\r\n * Split a message part (`cooked` + `raw`) into an optional delimited \"block\" off the front and the\r\n * rest of the text of the message part.\r\n *\r\n * Blocks appear at the start of message parts. They are delimited by a colon `:` character at the\r\n * start and end of the block.\r\n *\r\n * If the block is in the first message part then it will be metadata about the whole message:\r\n * meaning, description, id.  Otherwise it will be metadata about the immediately preceding\r\n * substitution: placeholder name.\r\n *\r\n * Since blocks are optional, it is possible that the content of a message block actually starts\r\n * with a block marker. In this case the marker must be escaped `\\:`.\r\n *\r\n * @param cooked The cooked version of the message part to parse.\r\n * @param raw The raw version of the message part to parse.\r\n * @returns An object containing the `text` of the message part and the text of the `block`, if it\r\n * exists.\r\n * @throws an error if the `block` is unterminated\r\n */\r\nexport function splitBlock(\r\n  cooked: string,\r\n  raw: string\r\n): { text: string; block?: string } {\r\n  if (raw.charAt(0) !== BLOCK_MARKER) {\r\n    return { text: cooked };\r\n  } else {\r\n    const endOfBlock = findEndOfBlock(cooked, raw);\r\n    return {\r\n      block: cooked.substring(1, endOfBlock),\r\n      text: cooked.substring(endOfBlock + 1)\r\n    };\r\n  }\r\n}\r\n\r\nfunction computePlaceholderName(index: number) {\r\n  return index === 1 ? 'PH' : `PH_${index - 1}`;\r\n}\r\n\r\nexport function translationToMessage(\r\n  id: string,\r\n  translation: ParsedTranslation\r\n): ɵParsedMessage {\r\n  const messageParts = translation.messageParts;\r\n  const legacyIds = [];\r\n  const cleanedMessageParts: string[] = [messageParts[0]];\r\n  const substitutions: { [placeholderName: string]: any } = {};\r\n  const placeholderNames: string[] = [];\r\n  let text = messageParts[0];\r\n\r\n  for (let i = 1; i < messageParts.length; i++) {\r\n    const {\r\n      text: messagePart,\r\n      block: placeholderName = translation.placeholderNames[i - 1] ||\r\n        computePlaceholderName(i)\r\n    } = splitBlock(messageParts[i], messageParts.raw[i]);\r\n    text += `{$${placeholderName}}${messagePart}`;\r\n    if (translation.placeholderNames.length) {\r\n      substitutions[placeholderName] = translation.placeholderNames[i - 1];\r\n    }\r\n    placeholderNames.push(placeholderName);\r\n    cleanedMessageParts.push(messagePart);\r\n  }\r\n\r\n  return {\r\n    id,\r\n    legacyIds,\r\n    substitutions,\r\n    text,\r\n    meaning: translation.meaning || '',\r\n    description: translation.description || '',\r\n    messageParts: cleanedMessageParts,\r\n    placeholderNames\r\n  };\r\n}\r\n\r\nexport interface ParsedMessageLegacy {\r\n  /**\r\n   * The key used to look up the appropriate translation target.\r\n   */\r\n  messageId: ɵMessageId;\r\n  /**\r\n   * Legacy message ids, if provided.\r\n   *\r\n   * In legacy message formats the message id can only be computed directly from the original\r\n   * template source.\r\n   *\r\n   * Since this information is not available in `$localize` calls, the legacy message ids may be\r\n   * attached by the compiler to the `$localize` metablock so it can be used if needed at the point\r\n   * of translation if the translations are encoded using the legacy message id.\r\n   */\r\n  legacyIds: ɵMessageId[];\r\n  /**\r\n   * A mapping of placeholder names to substitution values.\r\n   */\r\n  substitutions: Record<string, any>;\r\n  /**\r\n   * A human readable rendering of the message\r\n   */\r\n  messageString: string;\r\n  /**\r\n   * The meaning of the `message`, used to distinguish identical `messageString`s.\r\n   */\r\n  meaning: string;\r\n  /**\r\n   * The description of the `message`, used to aid translation.\r\n   */\r\n  description: string;\r\n  /**\r\n   * The static parts of the message.\r\n   */\r\n  messageParts: string[];\r\n  /**\r\n   * The names of the placeholders that will be replaced with substitutions.\r\n   */\r\n  placeholderNames: string[];\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ɵParsedTranslation,\n  ɵisMissingTranslationError,\n  ɵmakeTemplateObject,\n  ɵtranslate\n} from '@angular/localize';\nimport { NodePath } from '@babel/traverse';\nimport * as t from '@babel/types';\nimport { ParsedTranslation } from '@angular/localize/src/utils';\nimport { Diagnostics } from '../common/diagnostics';\n\n/**\n * Is the given `expression` an identifier with the correct name\n * @param expression The expression to check.\n */\nexport function isNamedIdentifier(\n  expression: NodePath,\n  name: string\n): expression is NodePath {\n  return expression.isIdentifier() && expression.node.name === name;\n}\n\n/**\n * Is the given `identifier` declared globally.\n * @param identifier The identifier to check.\n */\nexport function isGlobalIdentifier(identifier: NodePath<t.Identifier>) {\n  return (\n    !identifier.scope || !identifier.scope.hasBinding(identifier.node.name)\n  );\n}\n\n/**\n * Build a translated expression to replace the call to `$localize`.\n * @param messageParts The static parts of the message.\n * @param substitutions The expressions to substitute into the message.\n */\nexport function buildLocalizeReplacement(\n  messageParts: TemplateStringsArray,\n  substitutions: readonly t.Expression[]\n): t.Expression {\n  let mappedString: t.Expression = t.stringLiteral(messageParts[0]);\n  for (let i = 1; i < messageParts.length; i++) {\n    mappedString = t.binaryExpression(\n      '+',\n      mappedString,\n      wrapInParensIfNecessary(substitutions[i - 1])\n    );\n    mappedString = t.binaryExpression(\n      '+',\n      mappedString,\n      t.stringLiteral(messageParts[i])\n    );\n  }\n  return mappedString;\n}\n\n/**\n * Extract the message parts from the given `call` (to `$localize`).\n *\n * The message parts will either by the first argument to the `call` or it will be wrapped in call\n * to a helper function like `__makeTemplateObject`.\n *\n * @param call The AST node of the call to process.\n */\nexport function unwrapMessagePartsFromLocalizeCall(\n  call: NodePath<t.CallExpression>\n): TemplateStringsArray {\n  let cooked = call.get('arguments')[0] as any;\n\n  if (cooked === undefined) {\n    throw new BabelParseError(\n      call.node,\n      '`$localize` called without any arguments.'\n    );\n  }\n  if (!cooked.isExpression()) {\n    throw new BabelParseError(\n      cooked.node,\n      'Unexpected argument to `$localize` (expected an array).'\n    );\n  }\n\n  // If there is no call to `__makeTemplateObject(...)`, then `raw` must be the same as `cooked`.\n  let raw = cooked;\n\n  // Check for cached call of the form `x || x = __makeTemplateObject(...)`\n  if (\n    cooked.isLogicalExpression() &&\n    cooked.node.operator === '||' &&\n    cooked.get('left').isIdentifier()\n  ) {\n    const right = cooked.get('right');\n    if (right.isAssignmentExpression()) {\n      cooked = right.get('right');\n      if (!cooked.isExpression()) {\n        throw new BabelParseError(\n          cooked.node,\n          'Unexpected \"makeTemplateObject()\" function (expected an expression).'\n        );\n      }\n    }\n  }\n\n  // Check for `__makeTemplateObject(cooked, raw)` or `__templateObject()` calls.\n  if (cooked.isCallExpression()) {\n    let cookedCall = cooked;\n    if (cookedCall.get('arguments').length === 0) {\n      // No arguments so perhaps it is a `__templateObject()` call.\n      // Unwrap this to get the `_taggedTemplateLiteral(cooked, raw)` call.\n      cookedCall = unwrapLazyLoadHelperCall(cookedCall);\n    }\n\n    cooked = cookedCall.get('arguments')[0];\n    if (!cooked.isExpression()) {\n      throw new BabelParseError(\n        cooked.node,\n        'Unexpected `cooked` argument to the \"makeTemplateObject()\" function (expected an expression).'\n      );\n    }\n    const arg2 = cookedCall.get('arguments')[1];\n    if (arg2 && !arg2.isExpression()) {\n      throw new BabelParseError(\n        arg2.node,\n        'Unexpected `raw` argument to the \"makeTemplateObject()\" function (expected an expression).'\n      );\n    }\n    // If there is no second argument then assume that raw and cooked are the same\n    raw = arg2 !== undefined ? arg2 : cooked;\n  }\n\n  const cookedStrings = unwrapStringLiteralArray(cooked.node);\n  const rawStrings = unwrapStringLiteralArray(raw.node);\n  return ɵmakeTemplateObject(cookedStrings, rawStrings);\n}\n\nexport function unwrapSubstitutionsFromLocalizeCall(\n  call: t.CallExpression\n): t.Expression[] {\n  const expressions = call.arguments.splice(1);\n  if (!isArrayOfExpressions(expressions)) {\n    const badExpression = expressions.find(\n      expression => !t.isExpression(expression)\n    )!;\n    throw new BabelParseError(\n      badExpression,\n      'Invalid substitutions for `$localize` (expected all substitution arguments to be expressions).'\n    );\n  }\n  return expressions;\n}\n\nexport function unwrapMessagePartsFromTemplateLiteral(\n  elements: t.TemplateElement[]\n): TemplateStringsArray {\n  const cooked = elements.map(q => {\n    if (q.value.cooked === undefined) {\n      throw new BabelParseError(\n        q,\n        `Unexpected undefined message part in \"${elements.map(\n          eq => eq.value.cooked\n        )}\"`\n      );\n    }\n    return q.value.cooked;\n  });\n  const raw = elements.map(q => q.value.raw);\n  return ɵmakeTemplateObject(cooked, raw);\n}\n\n/**\n * Wrap the given `expression` in parentheses if it is a binary expression.\n *\n * This ensures that this expression is evaluated correctly if it is embedded in another expression.\n *\n * @param expression The expression to potentially wrap.\n */\nexport function wrapInParensIfNecessary(\n  expression: t.Expression\n): t.Expression {\n  if (t.isBinaryExpression(expression)) {\n    return t.parenthesizedExpression(expression);\n  } else {\n    return expression;\n  }\n}\n\n/**\n * Extract the string values from an `array` of string literals.\n * @param array The array to unwrap.\n */\nexport function unwrapStringLiteralArray(array: t.Expression): string[] {\n  if (!isStringLiteralArray(array)) {\n    throw new BabelParseError(\n      array,\n      'Unexpected messageParts for `$localize` (expected an array of strings).'\n    );\n  }\n  return array.elements.map((str: t.StringLiteral) => str.value);\n}\n\n/**\n * This expression is believed to be a call to a \"lazy-load\" template object helper function.\n * This is expected to be of the form:\n *\n * ```ts\n *  function _templateObject() {\n *    var e = _taggedTemplateLiteral(['cooked string', 'raw string']);\n *    return _templateObject = function() { return e }, e\n *  }\n * ```\n *\n * We unwrap this to return the call to `_taggedTemplateLiteral()`.\n *\n * @param call the call expression to unwrap\n * @returns the  call expression\n */\nexport function unwrapLazyLoadHelperCall(\n  call: NodePath<t.CallExpression>\n): NodePath<t.CallExpression> {\n  const callee = call.get('callee') as any;\n  if (!callee.isIdentifier()) {\n    throw new BabelParseError(\n      callee.node,\n      'Unexpected lazy-load helper call (expected a call of the form `_templateObject()`).'\n    );\n  }\n  const lazyLoadBinding = call.scope.getBinding(callee.node.name);\n  if (!lazyLoadBinding) {\n    throw new BabelParseError(\n      callee.node,\n      'Missing declaration for lazy-load helper function'\n    );\n  }\n  const lazyLoadFn = lazyLoadBinding.path;\n  if (!lazyLoadFn.isFunctionDeclaration()) {\n    throw new BabelParseError(\n      (lazyLoadFn as any).node,\n      'Unexpected expression (expected a function declaration'\n    );\n  }\n  const returnedNode = getReturnedExpression(lazyLoadFn);\n\n  if (returnedNode.isCallExpression()) {\n    return returnedNode;\n  }\n\n  if (returnedNode.isIdentifier()) {\n    const identifierName = returnedNode.node.name;\n    const declaration = returnedNode.scope.getBinding(identifierName);\n    if (declaration === undefined) {\n      throw new BabelParseError(\n        returnedNode.node,\n        'Missing declaration for return value from helper.'\n      );\n    }\n    if (!declaration.path.isVariableDeclarator()) {\n      throw new BabelParseError(\n        (declaration as any).path.node,\n        'Unexpected helper return value declaration (expected a variable declaration).'\n      );\n    }\n    const initializer = declaration.path.get('init');\n    if (!initializer.isCallExpression()) {\n      throw new BabelParseError(\n        declaration.path.node,\n        'Unexpected return value from helper (expected a call expression).'\n      );\n    }\n\n    // Remove the lazy load helper if this is the only reference to it.\n    if (lazyLoadBinding.references === 1) {\n      lazyLoadFn.remove();\n    }\n\n    return initializer;\n  }\n  return call;\n}\n\nfunction getReturnedExpression(\n  fn: NodePath<t.FunctionDeclaration>\n): NodePath<t.Expression> {\n  const bodyStatements = (fn.get('body') as any).get('body');\n  for (const statement of bodyStatements) {\n    if (statement.isReturnStatement()) {\n      const argument = statement.get('argument');\n      if (argument.isSequenceExpression()) {\n        const expressions = argument.get('expressions');\n        return Array.isArray(expressions)\n          ? expressions[expressions.length - 1]\n          : expressions;\n      } else if (argument.isExpression()) {\n        return argument;\n      } else {\n        throw new BabelParseError(\n          statement.node,\n          'Invalid return argument in helper function (expected an expression).'\n        );\n      }\n    }\n  }\n  throw new BabelParseError(\n    fn.node,\n    'Missing return statement in helper function.'\n  );\n}\n\n/**\n * Is the given `node` an array of literal strings?\n *\n * @param node The node to test.\n */\nexport function isStringLiteralArray(\n  node: t.Node\n): node is t.Expression & { elements: t.StringLiteral[] } {\n  return (\n    t.isArrayExpression(node) &&\n    node.elements.every(element => t.isStringLiteral(element))\n  );\n}\n\n/**\n * Are all the given `nodes` expressions?\n * @param nodes The nodes to test.\n */\nexport function isArrayOfExpressions(nodes: t.Node[]): nodes is t.Expression[] {\n  return nodes.every(element => t.isExpression(element));\n}\n\n/** Options that affect how the `makeEsXXXTranslatePlugin()` functions work. */\nexport interface TranslatePluginOptions {\n  missingTranslation?: MissingTranslationStrategy;\n  localizeName?: string;\n}\n\n/**\n * How to handle missing translations.\n */\nexport type MissingTranslationStrategy = 'error' | 'warning' | 'ignore';\n\n/**\n * Translate the text of the given message, using the given translations.\n *\n * Logs as warning if the translation is not available\n */\nexport function translate(\n  diagnostics: Diagnostics,\n  translations: Record<string, ɵParsedTranslation>,\n  messageParts: TemplateStringsArray,\n  substitutions: readonly any[],\n  missingTranslation: MissingTranslationStrategy\n): [TemplateStringsArray, readonly any[]] {\n  try {\n    return ɵtranslate(translations, messageParts, substitutions);\n  } catch (e) {\n    if (ɵisMissingTranslationError(e)) {\n      if (missingTranslation === 'error') {\n        diagnostics.error(e.message);\n      } else if (missingTranslation === 'warning') {\n        diagnostics.warn(e.message);\n      }\n      // Return the parsed message because this will have the meta blocks stripped\n      return [\n        ɵmakeTemplateObject(\n          e.parsedMessage.messageParts,\n          e.parsedMessage.messageParts\n        ),\n        substitutions\n      ];\n    } else {\n      diagnostics.error(e.message);\n      return [messageParts, substitutions];\n    }\n  }\n}\n\nexport class BabelParseError extends Error {\n  private readonly type = 'BabelParseError';\n  constructor(public node: t.Node, message: string) {\n    super(message);\n  }\n}\n\nexport function isBabelParseError(e: any): e is BabelParseError {\n  return e.type === 'BabelParseError';\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ɵParsedMessage, ɵparseMessage } from '@angular/localize';\r\nimport { NodePath, PluginObj } from '@babel/core';\r\nimport { TaggedTemplateExpression } from '@babel/types';\r\nimport { ParsedMessageLegacy } from '../../../cmds/common/util';\r\n\r\nimport {\r\n  isGlobalIdentifier,\r\n  isNamedIdentifier,\r\n  unwrapMessagePartsFromTemplateLiteral\r\n} from '../source_file_utils';\r\nimport { Diagnostics } from '../../common/diagnostics';\r\n\r\nexport function makeEs2015ExtractPlugin(\r\n  messages: (ɵParsedMessage | ParsedMessageLegacy)[],\r\n  diagnostics: Diagnostics,\r\n  localizeName = '$localize'\r\n): PluginObj {\r\n  return {\r\n    visitor: {\r\n      TaggedTemplateExpression(path: NodePath<TaggedTemplateExpression>) {\r\n        const tag = path.get('tag');\r\n        if (isNamedIdentifier(tag, localizeName) && isGlobalIdentifier(tag)) {\r\n          const messageParts = unwrapMessagePartsFromTemplateLiteral(\r\n            path.node.quasi.quasis\r\n          );\r\n          const message: ɵParsedMessage | ParsedMessageLegacy = ɵparseMessage(\r\n            messageParts,\r\n            path.node.quasi.expressions\r\n          );\r\n          if (\r\n            !messages.find((msg: any) =>\r\n              message.id\r\n                ? msg.id === message.id\r\n                : msg.messageId ===\r\n                  ((<unknown>message) as ParsedMessageLegacy).messageId\r\n            )\r\n          ) {\r\n            messages.push(message);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ɵParsedMessage, ɵparseMessage } from '@angular/localize';\nimport { NodePath, PluginObj } from '@babel/core';\nimport { CallExpression } from '@babel/types';\nimport { ParsedMessageLegacy } from '../../../cmds/common/util';\n\nimport {\n  isGlobalIdentifier,\n  isNamedIdentifier,\n  unwrapMessagePartsFromLocalizeCall,\n  unwrapSubstitutionsFromLocalizeCall\n} from '../source_file_utils';\nimport { Diagnostics } from '../../common/diagnostics';\n\nexport function makeEs5ExtractPlugin(\n  messages: (ɵParsedMessage | ParsedMessageLegacy)[],\n  diagnostics: Diagnostics,\n  localizeName = '$localize'\n): PluginObj {\n  return {\n    visitor: {\n      CallExpression(callPath: NodePath<CallExpression>) {\n        const calleePath = callPath.get('callee');\n        if (\n          isNamedIdentifier(calleePath, localizeName) &&\n          isGlobalIdentifier(calleePath)\n        ) {\n          const messageParts = unwrapMessagePartsFromLocalizeCall(callPath);\n          const expressions = unwrapSubstitutionsFromLocalizeCall(\n            callPath.node\n          );\n          const message: ɵParsedMessage | ParsedMessageLegacy = ɵparseMessage(\n            messageParts,\n            expressions\n          );\n          if (\n            !messages.find((msg: any) =>\n              message.id\n                ? msg.id === message.id\n                : msg.messageId ===\n                  ((<unknown>message) as ParsedMessageLegacy).messageId\n            )\n          ) {\n            messages.push(message);\n          }\n        }\n      }\n    }\n  };\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ɵParsedMessage } from '@angular/localize';\r\nimport { transformSync } from '@babel/core';\r\n\r\nimport { makeEs2015ExtractPlugin } from './source_files/es2015_extract_plugin';\r\nimport { makeEs5ExtractPlugin } from './source_files/es5_extract_plugin';\r\nimport { Diagnostics } from '../common/diagnostics';\r\n\r\n/**\r\n * A class that extracts parsed messages from file contents, by parsing the contents as JavaScript\r\n * and looking for occurrences of `$localize` in the source code.\r\n */\r\nexport class Extractor {\r\n  messages: ɵParsedMessage[] = [];\r\n\r\n  constructor(private diagnostics: Diagnostics) {}\r\n\r\n  extractMessages(sourceCode: string): void {\r\n    if (sourceCode.includes('$localize')) {\r\n      // Only bother to parse the file if it contains a reference to `$localize`.\r\n      transformSync(sourceCode, {\r\n        plugins: [\r\n          makeEs2015ExtractPlugin(this.messages, this.diagnostics),\r\n          makeEs5ExtractPlugin(this.messages, this.diagnostics)\r\n        ],\r\n        code: false,\r\n        ast: false\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { readFileSync, statSync } from 'fs';\r\nimport { sync } from 'glob';\r\nimport { basename, extname, posix, resolve } from 'path';\r\nimport { Diagnostics } from './common/diagnostics';\r\nimport { FileUtils } from './common/file_utils';\r\nimport {\r\n  getExtension,\r\n  getTranslationSerializer,\r\n  TranslationFormat\r\n} from './common/util';\r\nimport { Extractor } from './extract/extractor';\r\n\r\nexport const command = 'extract';\r\nexport const describe = 'Extract translations from your ivy application';\r\nexport const builder = {\r\n  s: {\r\n    alias: 'source',\r\n    required: true,\r\n    describe:\r\n      'A glob pattern indicating what files to search for translations, e.g. `./dist/**/*.js`. This can be absolute or relative to the current working directory.'\r\n  },\r\n  f: {\r\n    alias: 'format',\r\n    required: true,\r\n    describe: 'The format of the translation files to generate.',\r\n    choices: ['json', 'xlf', 'xmb', 'xlf2'],\r\n    default: 'json'\r\n  },\r\n  o: {\r\n    alias: 'outputPath',\r\n    required: true,\r\n    describe:\r\n      'A path to where the translation file will be written. This can be absolute or relative to the current working directory.'\r\n  },\r\n  l: {\r\n    alias: ['locale', 'locales'],\r\n    required: false,\r\n    type: 'array',\r\n    describe:\r\n      'The locale for the extracted file, \"en\" by default. If you use multiple locales (e.g. \"en fr es\"), a new file will be generated for each locale'\r\n  }\r\n};\r\n\r\nexport const handler = function(options) {\r\n  const diagnostics = new Diagnostics();\r\n  extractTranslations({\r\n    sourceGlob: options['s'] as string,\r\n    format: options['f'] as TranslationFormat,\r\n    outputPath: options['o'] as string,\r\n    locales: options['l'] as string[],\r\n    diagnostics\r\n  });\r\n  diagnostics.logMessages();\r\n  process.exit(diagnostics.hasErrors ? 1 : 0);\r\n};\r\n\r\nexport interface ExtractTranslationsOptions {\r\n  sourceGlob: string;\r\n  format: TranslationFormat;\r\n  outputPath: string;\r\n  locales?: string[];\r\n  diagnostics: Diagnostics;\r\n}\r\n\r\nexport function extractTranslations({\r\n  sourceGlob: source,\r\n  format,\r\n  outputPath: output,\r\n  locales = ['en'],\r\n  diagnostics\r\n}: ExtractTranslationsOptions) {\r\n  console.log(`Extracting translations from \"${source}\"`);\r\n  let filesToProcess = sync(resolve(source), {\r\n    absolute: true,\r\n    nodir: true\r\n  });\r\n  filesToProcess = FileUtils.dedup(filesToProcess, /\\-es(5|2015)\\./, '.');\r\n  output = resolve(output);\r\n  const generatedFiles: string[] = [];\r\n  let isFile: boolean;\r\n  try {\r\n    const stat = statSync(output);\r\n    isFile = stat.isFile();\r\n  } catch (e) {\r\n    isFile = !!extname(output);\r\n  }\r\n  if (isFile) {\r\n    if (locales.length > 1) {\r\n      diagnostics.error(\r\n        `Multiple locales detected (\"${locales.join(\r\n          ','\r\n        )}\") but output \"${output}\" is not a directory`\r\n      );\r\n      return;\r\n    }\r\n    const res = makeTranslationsFile(\r\n      filesToProcess,\r\n      posix.normalize(output),\r\n      source,\r\n      format,\r\n      locales[0],\r\n      diagnostics\r\n    );\r\n    if (res) {\r\n      generatedFiles.push(res);\r\n    }\r\n  } else {\r\n    filesToProcess.forEach(file => {\r\n      locales.forEach(locale => {\r\n        const newFileName = posix.join(\r\n          output,\r\n          basename(file, '.js').replace(/-es(5|2015)/, '') +\r\n            '.' +\r\n            locale +\r\n            '.' +\r\n            getExtension(format)\r\n        );\r\n        const res = makeTranslationsFile(\r\n          [file],\r\n          newFileName,\r\n          source,\r\n          format,\r\n          locale,\r\n          diagnostics\r\n        );\r\n        if (res) {\r\n          generatedFiles.push(res);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  if (!generatedFiles.length) {\r\n    diagnostics.error(\r\n      `No messages found. You should build the angular app without a language target for this command to work.`\r\n    );\r\n    return;\r\n  }\r\n}\r\n\r\nfunction makeTranslationsFile(\r\n  filesToProcess: string[],\r\n  fileOutput: string,\r\n  source: string,\r\n  format: TranslationFormat,\r\n  locale: string,\r\n  diagnostics: Diagnostics\r\n): string | null {\r\n  const extractor = new Extractor(diagnostics);\r\n  filesToProcess.forEach(file => {\r\n    const contents = readFileSync(file, 'utf8');\r\n    extractor.extractMessages(contents);\r\n  });\r\n\r\n  const serializer = getTranslationSerializer(format);\r\n  if (extractor.messages.length > 0) {\r\n    const translationFile = serializer.renderFile(\r\n      extractor.messages,\r\n      locale,\r\n      false\r\n    );\r\n    FileUtils.writeFile(fileOutput, translationFile);\r\n    console.log(`  Generated file \"${fileOutput}\"`);\r\n    return fileOutput;\r\n  }\r\n  return null;\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as yargs from 'yargs';\nimport * as findUp from 'find-up';\nimport * as fs from 'fs';\nconst configPath = findUp.sync(['.loclrc', '.locl.json']);\nconst config = configPath\n  ? JSON.parse(fs.readFileSync(configPath, { encoding: 'utf8' }))\n  : {};\n\nconst args = process.argv.slice(2);\nyargs\n  .config(config)\n  .commandDir('cmds')\n  .demandCommand()\n  .help()\n  .version(false)\n  .parse(args);\n"],"names":["NgModule","chalk.yellow","chalk.red","chalk.blue","fs.readFileSync","path.dirname","fs.writeFileSync","fs.existsSync","fs.mkdirSync","fs.statSync","fs.unlinkSync","fs.readdirSync","path.resolve","fs.rmdirSync","DOCTYPE","t.stringLiteral","t.binaryExpression","ɵmakeTemplateObject","t.isExpression","t.isBinaryExpression","t.parenthesizedExpression","t.isArrayExpression","t.isStringLiteral","ɵtranslate","ɵisMissingTranslationError","ɵparseMessage","transformSync","sync","resolve","statSync","extname","posix","basename","readFileSync","findUp.sync","yargs\r\n    .config"],"mappings":"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"}