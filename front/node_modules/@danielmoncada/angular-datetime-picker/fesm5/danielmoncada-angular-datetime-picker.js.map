{"version":3,"file":"danielmoncada-angular-datetime-picker.js","sources":["ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time-picker-intl.service.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/adapter/date-time-adapter.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/adapter/date-time-format.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/calendar.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/timer.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time-picker.animations.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time-picker-container.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/dialog/dialog-config.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/dialog/dialog-ref.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/dialog/dialog-container.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/utils/object.utils.ts","ng://@danielmoncada/angular-datetime-picker/lib/utils/index.ts","ng://@danielmoncada/angular-datetime-picker/lib/dialog/dialog.service.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time-picker.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time-picker-trigger.directive.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time-picker-input.directive.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/calendar-body.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/calendar-month-view.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/calendar-year-view.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/calendar-multi-year-view.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/timer-box.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/numberedfixlen.pipe.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time-inline.component.ts","ng://@danielmoncada/angular-datetime-picker/lib/dialog/dialog.module.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/date-time.module.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/adapter/native-date-time-adapter.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/adapter/native-date-time-format.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/adapter/native-date-time.module.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/adapter/moment-adapter/moment-date-time-adapter.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/adapter/moment-adapter/moment-date-time-format.class.ts","ng://@danielmoncada/angular-datetime-picker/lib/date-time/adapter/moment-adapter/moment-date-time.module.ts","ng://@danielmoncada/angular-datetime-picker/public_api.ts","ng://@danielmoncada/angular-datetime-picker/danielmoncada-angular-datetime-picker.ts"],"sourcesContent":["/**\n * date-time-picker-intl.service\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class OwlDateTimeIntl {\n\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the up second button (used by screen readers).  */\n    upSecondLabel = 'Add a second';\n\n    /** A label for the down second button (used by screen readers).  */\n    downSecondLabel = 'Minus a second';\n\n    /** A label for the up minute button (used by screen readers).  */\n    upMinuteLabel = 'Add a minute';\n\n    /** A label for the down minute button (used by screen readers).  */\n    downMinuteLabel = 'Minus a minute';\n\n    /** A label for the up hour button (used by screen readers).  */\n    upHourLabel = 'Add a hour';\n\n    /** A label for the down hour button (used by screen readers).  */\n    downHourLabel = 'Minus a hour';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel = 'Previous 21 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel = 'Next 21 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel = 'Change to month view';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel = 'Choose month and year';\n\n    /** A label for the cancel button */\n    cancelBtnLabel = 'Cancel';\n\n    /** A label for the set button */\n    setBtnLabel = 'Set';\n\n    /** A label for the range 'from' in picker info */\n    rangeFromLabel = 'From';\n\n    /** A label for the range 'to' in picker info */\n    rangeToLabel = 'To';\n\n    /** A label for the hour12 button (AM) */\n    hour12AMLabel = 'AM';\n\n    /** A label for the hour12 button (PM) */\n    hour12PMLabel = 'PM';\n}\n","/**\n * date-time-adapter.class\n */\nimport { Observable, Subject } from 'rxjs';\nimport { inject, InjectionToken, LOCALE_ID } from '@angular/core';\n\n/** InjectionToken for date time picker that can be used to override default locale code. */\nexport const OWL_DATE_TIME_LOCALE = new InjectionToken<string>(\n    'OWL_DATE_TIME_LOCALE',\n    {\n        providedIn: 'root',\n        factory: OWL_DATE_TIME_LOCALE_FACTORY\n    }\n);\n\n/** @docs-private */\nexport function OWL_DATE_TIME_LOCALE_FACTORY(): string {\n    return inject(LOCALE_ID);\n}\n\n/** Provider for OWL_DATE_TIME_LOCALE injection token. */\nexport const OWL_DATE_TIME_LOCALE_PROVIDER = {\n    provide: OWL_DATE_TIME_LOCALE,\n    useExisting: LOCALE_ID\n};\n\nexport abstract class DateTimeAdapter<T> {\n    /** The locale to use for all dates. */\n    protected locale: any;\n\n    /** A stream that emits when the locale changes. */\n    protected _localeChanges = new Subject<string>();\n    get localeChanges(): Observable<string> {\n        return this._localeChanges;\n    }\n\n    /** total milliseconds in a day. */\n    protected readonly millisecondsInDay = 86400000;\n\n    /** total milliseconds in a minute. */\n    protected readonly milliseondsInMinute = 60000;\n\n    /**\n     * Get the year of the given date\n     */\n    abstract getYear(date: T): number;\n\n    /**\n     * Get the month of the given date\n     * 0 -- January\n     * 11 -- December\n     * */\n    abstract getMonth(date: T): number;\n\n    /**\n     * Get the day of the week of the given date\n     * 0 -- Sunday\n     * 6 -- Saturday\n     * */\n    abstract getDay(date: T): number;\n\n    /**\n     * Get the day num of the given date\n     */\n    abstract getDate(date: T): number;\n\n    /**\n     * Get the hours of the given date\n     */\n    abstract getHours(date: T): number;\n\n    /**\n     * Get the minutes of the given date\n     */\n    abstract getMinutes(date: T): number;\n\n    /**\n     * Get the seconds of the given date\n     */\n    abstract getSeconds(date: T): number;\n\n    /**\n     * Get the milliseconds timestamp of the given date\n     */\n    abstract getTime(date: T): number;\n\n    /**\n     * Gets the number of days in the month of the given date.\n     */\n    abstract getNumDaysInMonth(date: T): number;\n\n    /**\n     * Get the number of calendar days between the given dates.\n     * If dateLeft is before dateRight, it would return positive value\n     * If dateLeft is after dateRight, it would return negative value\n     */\n    abstract differenceInCalendarDays(dateLeft: T, dateRight: T): number;\n\n    /**\n     * Gets the name for the year of the given date.\n     */\n    abstract getYearName(date: T): string;\n\n    /**\n     * Get a list of month names\n     */\n    abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n    /**\n     * Get a list of week names\n     */\n    abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n    /**\n     * Gets a list of names for the dates of the month.\n     */\n    abstract getDateNames(): string[];\n\n    /**\n     * Return a Date object as a string, using the ISO standard\n     */\n    abstract toIso8601(date: T): string;\n\n    /**\n     * Check if the give dates are equal\n     */\n    abstract isEqual(dateLeft: T, dateRight: T): boolean;\n\n    /**\n     * Check if the give dates are the same day\n     */\n    abstract isSameDay(dateLeft: T, dateRight: T): boolean;\n\n    /**\n     * Checks whether the given date is valid.\n     */\n    abstract isValid(date: T): boolean;\n\n    /**\n     * Gets date instance that is not valid.\n     */\n    abstract invalid(): T;\n\n    /**\n     * Checks whether the given object is considered a date instance by this DateTimeAdapter.\n     */\n    abstract isDateInstance(obj: any): boolean;\n\n    /**\n     * Add the specified number of years to the given date\n     */\n    abstract addCalendarYears(date: T, amount: number): T;\n\n    /**\n     * Add the specified number of months to the given date\n     */\n    abstract addCalendarMonths(date: T, amount: number): T;\n\n    /**\n     * Add the specified number of days to the given date\n     */\n    abstract addCalendarDays(date: T, amount: number): T;\n\n    /**\n     * Set the hours to the given date.\n     */\n    abstract setHours(date: T, amount: number): T;\n\n    /**\n     * Set the minutes to the given date.\n     */\n    abstract setMinutes(date: T, amount: number): T;\n\n    /**\n     * Set the seconds to the given date.\n     */\n    abstract setSeconds(date: T, amount: number): T;\n\n    /**\n     * Creates a date with the given year, month, date, hour, minute and second. Does not allow over/under-flow of the\n     * month and date.\n     */\n    abstract createDate(year: number, month: number, date: number): T;\n    abstract createDate(\n        year: number,\n        month: number,\n        date: number,\n        hours: number,\n        minutes: number,\n        seconds: number\n    ): T;\n\n    /**\n     * Clone the given date\n     */\n    abstract clone(date: T): T;\n\n    /**\n     * Get a new moment\n     * */\n    abstract now(): T;\n\n    /**\n     * Formats a date as a string according to the given format.\n     */\n    abstract format(date: T, displayFormat: any): string;\n\n    /**\n     * Parse a user-provided value to a Date Object\n     */\n    abstract parse(value: any, parseFormat: any): T | null;\n\n    /**\n     * Compare two given dates\n     * 1 if the first date is after the second,\n     * -1 if the first date is before the second\n     * 0 if dates are equal.\n     * */\n    compare(first: T, second: T): number {\n        if (!this.isValid(first) || !this.isValid(second)) {\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\n        }\n\n        const dateFirst = this.clone(first);\n        const dateSecond = this.clone(second);\n\n        const diff = this.getTime(dateFirst) - this.getTime(dateSecond);\n\n        if (diff < 0) {\n            return -1;\n        } else if (diff > 0) {\n            return 1;\n        } else {\n            // Return 0 if diff is 0; return NaN if diff is NaN\n            return diff;\n        }\n    }\n\n    /**\n     * Check if two given dates are in the same year\n     * 1 if the first date's year is after the second,\n     * -1 if the first date's year is before the second\n     * 0 if two given dates are in the same year\n     * */\n    compareYear(first: T, second: T): number {\n        if (!this.isValid(first) || !this.isValid(second)) {\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\n        }\n\n        const yearLeft = this.getYear(first);\n        const yearRight = this.getYear(second);\n\n        const diff = yearLeft - yearRight;\n\n        if (diff < 0) {\n            return -1;\n        } else if (diff > 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     */\n    deserialize(value: any): T | null {\n        if (\n            value == null ||\n            (this.isDateInstance(value) && this.isValid(value))\n        ) {\n            return value;\n        }\n        return this.invalid();\n    }\n\n    /**\n     * Sets the locale used for all dates.\n     */\n    setLocale(locale: string) {\n        this.locale = locale;\n        this._localeChanges.next(locale);\n    }\n\n     /**\n     * Get the locale used for all dates.\n     * */\n    getLocale() {\n        return this.locale;\n    }\n\n    /**\n     * Clamp the given date between min and max dates.\n     */\n    clampDate(date: T, min?: T | null, max?: T | null): T {\n        if (min && this.compare(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compare(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n","/**\n * date-time-format.class\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface OwlDateTimeFormats {\n    parseInput: any;\n    fullPickerInput: any;\n    datePickerInput: any;\n    timePickerInput: any;\n    monthYearLabel: any;\n    dateA11yLabel: any;\n    monthYearA11yLabel: any;\n}\n\n/** InjectionToken for date time picker that can be used to override default format. */\nexport const OWL_DATE_TIME_FORMATS = new InjectionToken<OwlDateTimeFormats>('OWL_DATE_TIME_FORMATS');\n","/**\n * calendar.component\n */\n\nimport {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport {\n    OWL_DATE_TIME_FORMATS,\n    OwlDateTimeFormats\n} from './adapter/date-time-format.class';\nimport { SelectMode } from './date-time.class';\nimport { take } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'owl-date-time-calendar',\n    exportAs: 'owlDateTimeCalendar',\n    templateUrl: './calendar.component.html',\n    styleUrls: ['./calendar.component.scss'],\n    host: {\n        '[class.owl-dt-calendar]': 'owlDTCalendarClass'\n    },\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlCalendarComponent<T>\n    implements OnInit, AfterContentInit, AfterViewChecked, OnDestroy {\n    @Input()\n    get minDate(): T | null {\n        return this._minDate;\n    }\n\n    set minDate(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        value = this.getValidDate(value);\n\n        this._minDate = value\n            ? this.dateTimeAdapter.createDate(\n                  this.dateTimeAdapter.getYear(value),\n                  this.dateTimeAdapter.getMonth(value),\n                  this.dateTimeAdapter.getDate(value)\n              )\n            : null;\n    }\n    @Input()\n    get maxDate(): T | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        value = this.getValidDate(value);\n\n        this._maxDate = value\n            ? this.dateTimeAdapter.createDate(\n                  this.dateTimeAdapter.getYear(value),\n                  this.dateTimeAdapter.getMonth(value),\n                  this.dateTimeAdapter.getDate(value)\n              )\n            : null;\n    }\n    @Input()\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n\n    set pickerMoment(value: T) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment =\n            this.getValidDate(value) || this.dateTimeAdapter.now();\n    }\n    @Input()\n    get selected(): T | null {\n        return this._selected;\n    }\n\n    set selected(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._selected = this.getValidDate(value);\n    }\n    @Input()\n    get selecteds(): T[] {\n        return this._selecteds;\n    }\n\n    set selecteds(values: T[]) {\n        this._selecteds = values.map(v => {\n            v = this.dateTimeAdapter.deserialize(v);\n            return this.getValidDate(v);\n        });\n    }\n\n    get periodButtonText(): string {\n        return this.isMonthView\n            ? this.dateTimeAdapter.format(\n                  this.pickerMoment,\n                  this.dateTimeFormats.monthYearLabel\n              )\n            : this.dateTimeAdapter.getYearName(this.pickerMoment);\n    }\n\n    get periodButtonLabel(): string {\n        return this.isMonthView\n            ? this.pickerIntl.switchToMultiYearViewLabel\n            : this.pickerIntl.switchToMonthViewLabel;\n    }\n\n    get prevButtonLabel(): string {\n        if (this._currentView === 'month') {\n            return this.pickerIntl.prevMonthLabel;\n        } else if (this._currentView === 'year') {\n            return this.pickerIntl.prevYearLabel;\n        } else {\n            return null;\n        }\n    }\n\n    get nextButtonLabel(): string {\n        if (this._currentView === 'month') {\n            return this.pickerIntl.nextMonthLabel;\n        } else if (this._currentView === 'year') {\n            return this.pickerIntl.nextYearLabel;\n        } else {\n            return null;\n        }\n    }\n    get currentView(): 'month' | 'year' | 'multi-years' {\n        return this._currentView;\n    }\n\n    set currentView(view: 'month' | 'year' | 'multi-years') {\n        this._currentView = view;\n        this.moveFocusOnNextTick = true;\n    }\n\n    get isInSingleMode(): boolean {\n        return this.selectMode === 'single';\n    }\n\n    get isInRangeMode(): boolean {\n        return (\n            this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom' ||\n            this.selectMode === 'rangeTo'\n        );\n    }\n\n    get showControlArrows(): boolean {\n        return this._currentView !== 'multi-years';\n    }\n\n    get isMonthView() {\n        return this._currentView === 'month';\n    }\n\n    /**\n     * Bind class 'owl-dt-calendar' to host\n     * */\n    get owlDTCalendarClass(): boolean {\n        return true;\n    }\n\n    constructor(\n        private elmRef: ElementRef,\n        private pickerIntl: OwlDateTimeIntl,\n        private ngZone: NgZone,\n        private cdRef: ChangeDetectorRef,\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\n        @Optional()\n        @Inject(OWL_DATE_TIME_FORMATS)\n        private dateTimeFormats: OwlDateTimeFormats\n    ) {\n        this.intlChangesSub = this.pickerIntl.changes.subscribe(() => {\n            this.cdRef.markForCheck();\n        });\n    }\n    /**\n     * Date filter for the month and year view\n     * */\n    @Input()\n    dateFilter: (date: T) => boolean;\n\n    /**\n     * Set the first day of week\n     */\n    @Input()\n    firstDayOfWeek: number;\n\n    /** The minimum selectable date. */\n    private _minDate: T | null;\n\n    /** The maximum selectable date. */\n    private _maxDate: T | null;\n\n    /** The current picker moment */\n    private _pickerMoment: T;\n\n    @Input()\n    selectMode: SelectMode;\n\n    /** The currently selected moment. */\n    private _selected: T | null;\n\n    private _selecteds: T[] = [];\n\n    /**\n     * The view that the calendar should start in.\n     */\n    @Input()\n    startView: 'month' | 'year' | 'multi-years' = 'month';\n\n    /**\n     * Whether to hide dates in other months at the start or end of the current month.\n     * */\n    @Input()\n    hideOtherMonths: boolean;\n\n    /** Emits when the currently picker moment changes. */\n    @Output()\n    pickerMomentChange = new EventEmitter<T>();\n\n    /** Emits when the currently selected date changes. */\n    @Output()\n    selectedChange = new EventEmitter<T>();\n\n    /** Emits when any date is selected. */\n    @Output()\n    userSelection = new EventEmitter<void>();\n\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * */\n    @Output()\n    readonly yearSelected = new EventEmitter<T>();\n\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     * */\n    @Output()\n    readonly monthSelected = new EventEmitter<T>();\n\n    private _currentView: 'month' | 'year' | 'multi-years';\n\n    private intlChangesSub = Subscription.EMPTY;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n\n    /** \n     * Date filter for the month and year view\n     */\n    public dateFilterForViews = (date: T) => {\n        return (\n            !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate ||\n                this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\n            (!this.maxDate ||\n                this.dateTimeAdapter.compare(date, this.maxDate) <= 0)\n        );\n    }\n\n    public ngOnInit() {}\n\n    public ngAfterContentInit(): void {\n        this._currentView = this.startView;\n    }\n\n    public ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.intlChangesSub.unsubscribe();\n    }\n\n    /**\n     * Toggle between month view and year view\n     */\n    public toggleViews(): void {\n        this.currentView =\n            this._currentView === 'month' ? 'multi-years' : 'month';\n    }\n\n    /**\n     * Handles user clicks on the previous button.\n     * */\n    public previousClicked(): void {\n        this.pickerMoment = this.isMonthView\n            ? this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1)\n            : this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1);\n\n        this.pickerMomentChange.emit(this.pickerMoment);\n    }\n\n    /**\n     * Handles user clicks on the next button.\n     * */\n    public nextClicked(): void {\n        this.pickerMoment = this.isMonthView\n            ? this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1)\n            : this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1);\n\n        this.pickerMomentChange.emit(this.pickerMoment);\n    }\n\n    public dateSelected(date: T): void {\n        if (!this.dateFilterForViews(date)) {\n            return;\n        }\n\n        this.selectedChange.emit(date);\n\n        /*if ((this.isInSingleMode && !this.dateTimeAdapter.isSameDay(date, this.selected)) ||\n            this.isInRangeMode) {\n            this.selectedChange.emit(date);\n        }*/\n    }\n\n    /**\n     * Change the pickerMoment value and switch to a specific view\n     */\n    public goToDateInView(\n        date: T,\n        view: 'month' | 'year' | 'multi-years'\n    ): void {\n        this.handlePickerMomentChange(date);\n        this.currentView = view;\n        return;\n    }\n\n    /**\n     * Change the pickerMoment value\n     */\n    public handlePickerMomentChange(date: T): void {\n        this.pickerMoment = this.dateTimeAdapter.clampDate(\n            date,\n            this.minDate,\n            this.maxDate\n        );\n        this.pickerMomentChange.emit(this.pickerMoment);\n        return;\n    }\n\n    public userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /**\n     * Whether the previous period button is enabled.\n     */\n    public prevButtonEnabled(): boolean {\n        return (\n            !this.minDate || !this.isSameView(this.pickerMoment, this.minDate)\n        );\n    }\n\n    /**\n     * Whether the next period button is enabled.\n     */\n    public nextButtonEnabled(): boolean {\n        return (\n            !this.maxDate || !this.isSameView(this.pickerMoment, this.maxDate)\n        );\n    }\n\n    /**\n     * Focus to the host element\n     * */\n    public focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                    this.elmRef.nativeElement\n                        .querySelector('.owl-dt-calendar-cell-active')\n                        .focus();\n                });\n        });\n    }\n\n    public selectYearInMultiYearView(normalizedYear: T): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    public selectMonthInYearView(normalizedMonth: T): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     */\n    private isSameView(date1: T, date2: T): boolean {\n        if (this._currentView === 'month') {\n            return !!(\n                date1 &&\n                date2 &&\n                this.dateTimeAdapter.getYear(date1) ===\n                    this.dateTimeAdapter.getYear(date2) &&\n                this.dateTimeAdapter.getMonth(date1) ===\n                    this.dateTimeAdapter.getMonth(date2)\n            );\n        } else if (this._currentView === 'year') {\n            return !!(\n                date1 &&\n                date2 &&\n                this.dateTimeAdapter.getYear(date1) ===\n                    this.dateTimeAdapter.getYear(date2)\n            );\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Get a valid date object\n     */\n    private getValidDate(obj: any): T | null {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n}\n","/**\n * timer.component\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    exportAs: 'owlDateTimeTimer',\n    selector: 'owl-date-time-timer',\n    templateUrl: './timer.component.html',\n    styleUrls: ['./timer.component.scss'],\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class.owl-dt-timer]': 'owlDTTimerClass',\n        '[attr.tabindex]': 'owlDTTimeTabIndex'\n    }\n})\nexport class OwlTimerComponent<T> implements OnInit {\n    /** The current picker moment */\n    private _pickerMoment: T;\n    @Input()\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n\n    set pickerMoment(value: T) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment =\n            this.getValidDate(value) || this.dateTimeAdapter.now();\n    }\n\n    /** The minimum selectable date time. */\n    private _minDateTime: T | null;\n    @Input()\n    get minDateTime(): T | null {\n        return this._minDateTime;\n    }\n\n    set minDateTime(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._minDateTime = this.getValidDate(value);\n    }\n\n    /** The maximum selectable date time. */\n    private _maxDateTime: T | null;\n    @Input()\n    get maxDateTime(): T | null {\n        return this._maxDateTime;\n    }\n\n    set maxDateTime(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._maxDateTime = this.getValidDate(value);\n    }\n\n    private isPM = false; // a flag indicates the current timer moment is in PM or AM\n\n    /**\n     * Whether to show the second's timer\n     */\n    @Input()\n    showSecondsTimer: boolean;\n\n    /**\n     * Whether the timer is in hour12 format\n     */\n    @Input()\n    hour12Timer: boolean;\n\n    /**\n     * Hours to change per step\n     */\n    @Input()\n    stepHour = 1;\n\n    /**\n     * Minutes to change per step\n     */\n    @Input()\n    stepMinute = 1;\n\n    /**\n     * Seconds to change per step\n     */\n    @Input()\n    stepSecond = 1;\n\n    get hourValue(): number {\n        return this.dateTimeAdapter.getHours(this.pickerMoment);\n    }\n\n    /**\n     * The value would be displayed in hourBox.\n     * We need this because the value displayed in hourBox it not\n     * the same as the hourValue when the timer is in hour12Timer mode.\n     * */\n    get hourBoxValue(): number {\n        let hours = this.hourValue;\n\n        if (!this.hour12Timer) {\n            return hours;\n        } else {\n            if (hours === 0) {\n                hours = 12;\n                this.isPM = false;\n            } else if (hours > 0 && hours < 12) {\n                this.isPM = false;\n            } else if (hours === 12) {\n                this.isPM = true;\n            } else if (hours > 12 && hours < 24) {\n                hours = hours - 12;\n                this.isPM = true;\n            }\n\n            return hours;\n        }\n    }\n\n    get minuteValue(): number {\n        return this.dateTimeAdapter.getMinutes(this.pickerMoment);\n    }\n\n    get secondValue(): number {\n        return this.dateTimeAdapter.getSeconds(this.pickerMoment);\n    }\n\n    get upHourButtonLabel(): string {\n        return this.pickerIntl.upHourLabel;\n    }\n\n    get downHourButtonLabel(): string {\n        return this.pickerIntl.downHourLabel;\n    }\n\n    get upMinuteButtonLabel(): string {\n        return this.pickerIntl.upMinuteLabel;\n    }\n\n    get downMinuteButtonLabel(): string {\n        return this.pickerIntl.downMinuteLabel;\n    }\n\n    get upSecondButtonLabel(): string {\n        return this.pickerIntl.upSecondLabel;\n    }\n\n    get downSecondButtonLabel(): string {\n        return this.pickerIntl.downSecondLabel;\n    }\n\n    get hour12ButtonLabel(): string {\n        return this.isPM\n            ? this.pickerIntl.hour12PMLabel\n            : this.pickerIntl.hour12AMLabel;\n    }\n\n    @Output()\n    selectedChange = new EventEmitter<T>();\n\n    get owlDTTimerClass(): boolean {\n        return true;\n    }\n\n    get owlDTTimeTabIndex(): number {\n        return -1;\n    }\n\n    constructor(\n        private ngZone: NgZone,\n        private elmRef: ElementRef,\n        private pickerIntl: OwlDateTimeIntl,\n        private cdRef: ChangeDetectorRef,\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>\n    ) {}\n\n    public ngOnInit() {}\n\n    /**\n     * Focus to the host element\n     * */\n    public focus() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                    this.elmRef.nativeElement.focus();\n                });\n        });\n    }\n\n    /**\n     * Set the hour value via typing into timer box input\n     * We need this to handle the hour value when the timer is in hour12 mode\n     * */\n    public setHourValueViaInput(hours: number): void {\n        if (this.hour12Timer && this.isPM && hours >= 1 && hours <= 11) {\n            hours = hours + 12;\n        } else if (this.hour12Timer && !this.isPM && hours === 12) {\n            hours = 0;\n        }\n\n        this.setHourValue(hours);\n    }\n\n    public setHourValue(hours: number): void {\n        const m = this.dateTimeAdapter.setHours(this.pickerMoment, hours);\n        this.selectedChange.emit(m);\n        this.cdRef.markForCheck();\n    }\n\n    public setMinuteValue(minutes: number): void {\n        const m = this.dateTimeAdapter.setMinutes(this.pickerMoment, minutes);\n        this.selectedChange.emit(m);\n        this.cdRef.markForCheck();\n    }\n\n    public setSecondValue(seconds: number): void {\n        const m = this.dateTimeAdapter.setSeconds(this.pickerMoment, seconds);\n        this.selectedChange.emit(m);\n        this.cdRef.markForCheck();\n    }\n\n    public setMeridiem(event: any): void {\n        this.isPM = !this.isPM;\n\n        let hours = this.hourValue;\n        if (this.isPM) {\n            hours = hours + 12;\n        } else {\n            hours = hours - 12;\n        }\n\n        if (hours >= 0 && hours <= 23) {\n            this.setHourValue(hours);\n        }\n\n        this.cdRef.markForCheck();\n        event.preventDefault();\n    }\n\n    /**\n     * Check if the up hour button is enabled\n     */\n    public upHourEnabled(): boolean {\n        return (\n            !this.maxDateTime ||\n            this.compareHours(this.stepHour, this.maxDateTime) < 1\n        );\n    }\n\n    /**\n     * Check if the down hour button is enabled\n     */\n    public downHourEnabled(): boolean {\n        return (\n            !this.minDateTime ||\n            this.compareHours(-this.stepHour, this.minDateTime) > -1\n        );\n    }\n\n    /**\n     * Check if the up minute button is enabled\n     */\n    public upMinuteEnabled(): boolean {\n        return (\n            !this.maxDateTime ||\n            this.compareMinutes(this.stepMinute, this.maxDateTime) < 1\n        );\n    }\n\n    /**\n     * Check if the down minute button is enabled\n     */\n    public downMinuteEnabled(): boolean {\n        return (\n            !this.minDateTime ||\n            this.compareMinutes(-this.stepMinute, this.minDateTime) > -1\n        );\n    }\n\n    /**\n     * Check if the up second button is enabled\n     */\n    public upSecondEnabled(): boolean {\n        return (\n            !this.maxDateTime ||\n            this.compareSeconds(this.stepSecond, this.maxDateTime) < 1\n        );\n    }\n\n    /**\n     * Check if the down second button is enabled\n     */\n    public downSecondEnabled(): boolean {\n        return (\n            !this.minDateTime ||\n            this.compareSeconds(-this.stepSecond, this.minDateTime) > -1\n        );\n    }\n\n    /**\n     * PickerMoment's hour value +/- certain amount and compare it to the give date\n     * 1 is after the comparedDate\n     * -1 is before the comparedDate\n     * 0 is equal the comparedDate\n     * */\n    private compareHours(amount: number, comparedDate: T): number {\n        const hours = this.dateTimeAdapter.getHours(this.pickerMoment) + amount;\n        const result = this.dateTimeAdapter.setHours(this.pickerMoment, hours);\n        return this.dateTimeAdapter.compare(result, comparedDate);\n    }\n\n    /**\n     * PickerMoment's minute value +/- certain amount and compare it to the give date\n     * 1 is after the comparedDate\n     * -1 is before the comparedDate\n     * 0 is equal the comparedDate\n     * */\n    private compareMinutes(amount: number, comparedDate: T): number {\n        const minutes =\n            this.dateTimeAdapter.getMinutes(this.pickerMoment) + amount;\n        const result = this.dateTimeAdapter.setMinutes(\n            this.pickerMoment,\n            minutes\n        );\n        return this.dateTimeAdapter.compare(result, comparedDate);\n    }\n\n    /**\n     * PickerMoment's second value +/- certain amount and compare it to the give date\n     * 1 is after the comparedDate\n     * -1 is before the comparedDate\n     * 0 is equal the comparedDate\n     * */\n    private compareSeconds(amount: number, comparedDate: T): number {\n        const seconds =\n            this.dateTimeAdapter.getSeconds(this.pickerMoment) + amount;\n        const result = this.dateTimeAdapter.setSeconds(\n            this.pickerMoment,\n            seconds\n        );\n        return this.dateTimeAdapter.compare(result, comparedDate);\n    }\n\n    /**\n     * Get a valid date object\n     */\n    private getValidDate(obj: any): T | null {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n}\n","/**\n * date-time-picker.animations\n */\nimport {\n    animate, animateChild,\n    AnimationTriggerMetadata,\n    group,\n    query,\n    state,\n    style,\n    transition,\n    trigger\n} from '@angular/animations';\n\nexport const owlDateTimePickerAnimations: {\n    readonly transformPicker: AnimationTriggerMetadata;\n    readonly fadeInPicker: AnimationTriggerMetadata;\n} = {\n\n    transformPicker: trigger('transformPicker', [\n        state('void', style({opacity: 0, transform: 'scale(1, 0)'})),\n        state('enter', style({opacity: 1, transform: 'scale(1, 1)'})),\n        transition('void => enter', group([\n            query('@fadeInPicker', animateChild(), { optional: true }),\n            animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('enter => void', animate('100ms linear', style({opacity: 0})))\n    ]),\n\n    fadeInPicker: trigger('fadeInPicker', [\n        state('enter', style({opacity: 1})),\n        state('void', style({opacity: 0})),\n        transition('void => enter', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n    ])\n};\n","/**\n * date-time-picker-container.component\n */\n\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    OnInit,\n    Optional,\n    ViewChild\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { OwlCalendarComponent } from './calendar.component';\nimport { OwlTimerComponent } from './timer.component';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OwlDateTime, PickerType } from './date-time.class';\nimport { Observable, Subject } from 'rxjs';\nimport { owlDateTimePickerAnimations } from './date-time-picker.animations';\nimport {\n    DOWN_ARROW,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW\n} from '@angular/cdk/keycodes';\n\n@Component({\n    exportAs: 'owlDateTimeContainer',\n    selector: 'owl-date-time-container',\n    templateUrl: './date-time-picker-container.component.html',\n    styleUrls: ['./date-time-picker-container.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    animations: [\n        owlDateTimePickerAnimations.transformPicker,\n        owlDateTimePickerAnimations.fadeInPicker\n    ],\n    host: {\n        '(@transformPicker.done)': 'handleContainerAnimationDone($event)',\n        '[class.owl-dt-container]': 'owlDTContainerClass',\n        '[class.owl-dt-popup-container]': 'owlDTPopupContainerClass',\n        '[class.owl-dt-dialog-container]': 'owlDTDialogContainerClass',\n        '[class.owl-dt-inline-container]': 'owlDTInlineContainerClass',\n        '[class.owl-dt-container-disabled]': 'owlDTContainerDisabledClass',\n        '[attr.id]': 'owlDTContainerId',\n        '[@transformPicker]': 'owlDTContainerAnimation',\n    }\n})\nexport class OwlDateTimeContainerComponent<T>\n    implements OnInit, AfterContentInit, AfterViewInit {\n    @ViewChild(OwlCalendarComponent)\n    calendar: OwlCalendarComponent<T>;\n    @ViewChild(OwlTimerComponent)\n    timer: OwlTimerComponent<T>;\n\n    public picker: OwlDateTime<T>;\n    public activeSelectedIndex = 0; // The current active SelectedIndex in range select mode (0: 'from', 1: 'to')\n\n    // retain start and end time\n    private retainStartTime: T;\n    private retainEndTime: T;\n    \n    /**\n     * Stream emits when try to hide picker\n     * */\n    private hidePicker$ = new Subject<any>();\n\n    get hidePickerStream(): Observable<any> {\n        return this.hidePicker$.asObservable();\n    }\n\n    /**\n     * Stream emits when try to confirm the selected value\n     * */\n    private confirmSelected$ = new Subject<any>();\n\n    get confirmSelectedStream(): Observable<any> {\n        return this.confirmSelected$.asObservable();\n    }\n\n    private pickerOpened$ = new Subject<any>();\n\n    get pickerOpenedStream(): Observable<any> {\n        return this.pickerOpened$.asObservable();\n    }\n\n    /**\n     * The current picker moment. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    private _clamPickerMoment: T;\n\n    get pickerMoment() {\n        return this._clamPickerMoment;\n    }\n\n    set pickerMoment(value: T) {\n        if (value) {\n            this._clamPickerMoment = this.dateTimeAdapter.clampDate(\n                value,\n                this.picker.minDateTime,\n                this.picker.maxDateTime\n            );\n        }\n        this.cdRef.markForCheck();\n    }\n\n    get pickerType(): PickerType {\n        return this.picker.pickerType;\n    }\n\n    get cancelLabel(): string {\n        return this.pickerIntl.cancelBtnLabel;\n    }\n\n    get setLabel(): string {\n        return this.pickerIntl.setBtnLabel;\n    }\n\n    /**\n     * The range 'from' label\n     * */\n    get fromLabel(): string {\n        return this.pickerIntl.rangeFromLabel;\n    }\n\n    /**\n     * The range 'to' label\n     * */\n    get toLabel(): string {\n        return this.pickerIntl.rangeToLabel;\n    }\n\n    /**\n     * The range 'from' formatted value\n     * */\n    get fromFormattedValue(): string {\n        const value = this.picker.selecteds[0];\n        return value\n            ? this.dateTimeAdapter.format(value, this.picker.formatString)\n            : '';\n    }\n\n    /**\n     * The range 'to' formatted value\n     * */\n    get toFormattedValue(): string {\n        const value = this.picker.selecteds[1];\n        return value\n            ? this.dateTimeAdapter.format(value, this.picker.formatString)\n            : '';\n    }\n\n    /**\n     * Cases in which the control buttons show in the picker\n     * 1) picker mode is 'dialog'\n     * 2) picker type is NOT 'calendar' and the picker mode is NOT 'inline'\n     * */\n    get showControlButtons(): boolean {\n        return (\n            this.picker.pickerMode === 'dialog' ||\n            (this.picker.pickerType !== 'calendar' &&\n                this.picker.pickerMode !== 'inline')\n        );\n    }\n\n    get containerElm(): HTMLElement {\n        return this.elmRef.nativeElement;\n    }\n\n    get owlDTContainerClass(): boolean {\n        return true;\n    }\n\n    get owlDTPopupContainerClass(): boolean {\n        return this.picker.pickerMode === 'popup';\n    }\n\n    get owlDTDialogContainerClass(): boolean {\n        return this.picker.pickerMode === 'dialog';\n    }\n\n    get owlDTInlineContainerClass(): boolean {\n        return this.picker.pickerMode === 'inline';\n    }\n\n    get owlDTContainerDisabledClass(): boolean {\n        return this.picker.disabled;\n    }\n\n    get owlDTContainerId(): string {\n        return this.picker.id;\n    }\n\n    get owlDTContainerAnimation(): any {\n        return this.picker.pickerMode === 'inline' ? '' : 'enter';\n    }\n\n    constructor( private cdRef: ChangeDetectorRef,\n                  private elmRef: ElementRef,\n                  private pickerIntl: OwlDateTimeIntl,\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T> ) {\n    }\n\n    public ngOnInit() {\n        if (this.picker.selectMode === 'range') {\n            if (this.picker.selecteds[0]) {\n                this.retainStartTime = this.dateTimeAdapter.clone(this.picker.selecteds[0]);\n            }\n            if (this.picker.selecteds[1]) {\n                this.retainEndTime = this.dateTimeAdapter.clone(this.picker.selecteds[1]);\n            }\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.initPicker();\n    }\n\n    public ngAfterViewInit(): void {\n        this.focusPicker();\n    }\n\n    public handleContainerAnimationDone(event: AnimationEvent): void {\n        const toState = event.toState;\n        if (toState === 'enter') {\n            this.pickerOpened$.next();\n        }\n    }\n\n    public dateSelected(date: T): void {\n        let result;\n\n        if (this.picker.isInSingleMode) {\n            result = this.dateSelectedInSingleMode(date);\n            if (result) {\n                this.pickerMoment = result;\n                this.picker.select(result);\n            } else {\n                // we close the picker when result is null and pickerType is calendar.\n                if (this.pickerType === 'calendar') {\n                    this.hidePicker$.next(null);\n                }\n            }\n            return;\n        }\n\n        if (this.picker.isInRangeMode) {\n            result = this.dateSelectedInRangeMode(date);\n            if (result) {\n                this.pickerMoment = result[this.activeSelectedIndex];\n                this.picker.select(result);\n            }\n        }\n    }\n\n    public timeSelected(time: T): void {\n        this.pickerMoment = this.dateTimeAdapter.clone(time);\n\n        if (!this.picker.dateTimeChecker(this.pickerMoment)) {\n            return;\n        }\n\n        if (this.picker.isInSingleMode) {\n            this.picker.select(this.pickerMoment);\n            return;\n        }\n\n        if (this.picker.isInRangeMode) {\n            const selecteds = [...this.picker.selecteds];\n\n            // check if the 'from' is after 'to' or 'to'is before 'from'\n            // In this case, we set both the 'from' and 'to' the same value\n            if (\n                (this.activeSelectedIndex === 0 &&\n                    selecteds[1] &&\n                    this.dateTimeAdapter.compare(\n                        this.pickerMoment,\n                        selecteds[1]\n                    ) === 1) ||\n                (this.activeSelectedIndex === 1 &&\n                    selecteds[0] &&\n                    this.dateTimeAdapter.compare(\n                        this.pickerMoment,\n                        selecteds[0]\n                    ) === -1)\n            ) {\n                selecteds[0] = this.pickerMoment;\n                selecteds[1] = this.pickerMoment;\n            } else {\n                selecteds[this.activeSelectedIndex] = this.pickerMoment;\n            }\n\n            if (selecteds[0]) {\n                this.retainStartTime = this.dateTimeAdapter.clone(selecteds[0]);\n            }\n            if (selecteds[1]) {\n                this.retainEndTime = this.dateTimeAdapter.clone(selecteds[1]);\n            }\n            this.picker.select(selecteds);\n        }\n    }\n\n    /**\n     * Handle click on cancel button\n     */\n    public onCancelClicked(event: any): void {\n        this.hidePicker$.next(null);\n        event.preventDefault();\n        return;\n    }\n\n    /**\n     * Handle click on set button\n     */\n    public onSetClicked(event: any): void {\n        if (!this.picker.dateTimeChecker(this.pickerMoment)) {\n            this.hidePicker$.next(null);\n            event.preventDefault();\n            return;\n        }\n\n        this.confirmSelected$.next(event);\n        event.preventDefault();\n        return;\n    }\n\n    /**\n     * Handle click on inform radio group\n     */\n    public handleClickOnInfoGroup(event: any, index: number): void {\n        this.setActiveSelectedIndex(index);\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * Handle click on inform radio group\n     */\n    public handleKeydownOnInfoGroup(\n        event: any,\n        next: any,\n        index: number\n    ): void {\n        switch (event.keyCode) {\n            case DOWN_ARROW:\n            case RIGHT_ARROW:\n            case UP_ARROW:\n            case LEFT_ARROW:\n                next.focus();\n                this.setActiveSelectedIndex(index === 0 ? 1 : 0);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n\n            case SPACE:\n                this.setActiveSelectedIndex(index);\n                event.preventDefault();\n                event.stopPropagation();\n                break;\n\n            default:\n                return;\n        }\n    }\n\n    /**\n     * Set the value of activeSelectedIndex\n     */\n    private setActiveSelectedIndex(index: number): void {\n        if (\n            this.picker.selectMode === 'range' &&\n            this.activeSelectedIndex !== index\n        ) {\n            this.activeSelectedIndex = index;\n\n            const selected = this.picker.selecteds[this.activeSelectedIndex];\n            if (this.picker.selecteds && selected) {\n                this.pickerMoment = this.dateTimeAdapter.clone(selected);\n            }\n        }\n        return;\n    }\n\n    private initPicker(): void {\n        this.pickerMoment = this.picker.startAt || this.dateTimeAdapter.now();\n        this.activeSelectedIndex = this.picker.selectMode === 'rangeTo' ? 1 : 0;\n    }\n\n    /**\n     * Select calendar date in single mode,\n     * it returns null when date is not selected.\n     */\n    private dateSelectedInSingleMode(date: T): T | null {\n        if (this.dateTimeAdapter.isSameDay(date, this.picker.selected)) {\n            return null;\n        }\n\n        return this.updateAndCheckCalendarDate(date);\n    }\n\n    /**\n     * Select dates in range Mode\n     */\n    private dateSelectedInRangeMode(date: T): T[] | null {\n        let from = this.picker.selecteds[0];\n        let to = this.picker.selecteds[1];\n\n        const result = this.updateAndCheckCalendarDate(date);\n\n        if (!result) {\n            return null;\n        }\n\n        // if the given calendar day is after or equal to 'from',\n        // set ths given date as 'to'\n        // otherwise, set it as 'from' and set 'to' to null\n        if (this.picker.selectMode === 'range') {\n            if (\n                this.picker.selecteds &&\n                this.picker.selecteds.length &&\n                !to &&\n                from &&\n                this.dateTimeAdapter.differenceInCalendarDays(result, from) >= 0\n            ) {\n                if (this.picker.endAt && !this.retainEndTime) {\n                    to = this.dateTimeAdapter.createDate(\n                        this.dateTimeAdapter.getYear(result),\n                        this.dateTimeAdapter.getMonth(result),\n                        this.dateTimeAdapter.getDate(result),\n                        this.dateTimeAdapter.getHours(this.picker.endAt),\n                        this.dateTimeAdapter.getMinutes(this.picker.endAt),\n                        this.dateTimeAdapter.getSeconds(this.picker.endAt));\n                } else if (this.retainEndTime) {\n                    to = this.dateTimeAdapter.createDate(\n                        this.dateTimeAdapter.getYear(result),\n                        this.dateTimeAdapter.getMonth(result),\n                        this.dateTimeAdapter.getDate(result),\n                        this.dateTimeAdapter.getHours(this.retainEndTime),\n                        this.dateTimeAdapter.getMinutes(this.retainEndTime),\n                        this.dateTimeAdapter.getSeconds(this.retainEndTime));\n                } else {\n                    to = result;\n                }\n                this.activeSelectedIndex = 1;\n            } else {\n                if (this.picker.startAt && !this.retainStartTime) {\n                    from = this.dateTimeAdapter.createDate(\n                        this.dateTimeAdapter.getYear(result),\n                        this.dateTimeAdapter.getMonth(result),\n                        this.dateTimeAdapter.getDate(result),\n                        this.dateTimeAdapter.getHours(this.picker.startAt),\n                        this.dateTimeAdapter.getMinutes(this.picker.startAt),\n                        this.dateTimeAdapter.getSeconds(this.picker.startAt)\n                    );\n                } else if (this.retainStartTime) {\n                    from = this.dateTimeAdapter.createDate(\n                        this.dateTimeAdapter.getYear(result),\n                        this.dateTimeAdapter.getMonth(result),\n                        this.dateTimeAdapter.getDate(result),\n                        this.dateTimeAdapter.getHours(this.retainStartTime),\n                        this.dateTimeAdapter.getMinutes(this.retainStartTime),\n                        this.dateTimeAdapter.getSeconds(this.retainStartTime));\n                } else {\n                    from = result;\n                }\n                to = null;\n                this.activeSelectedIndex = 0;\n            }\n        } else if (this.picker.selectMode === 'rangeFrom') {\n            from = result;\n\n            // if the from value is after the to value, set the to value as null\n            if (to && this.dateTimeAdapter.compare(from, to) > 0) {\n                to = null;\n            }\n        } else if (this.picker.selectMode === 'rangeTo') {\n            to = result;\n\n            // if the from value is after the to value, set the from value as null\n            if (from && this.dateTimeAdapter.compare(from, to) > 0) {\n                from = null;\n            }\n        }\n\n        return [from, to];\n    }\n\n    /**\n     * Update the given calendar date's time and check if it is valid\n     * Because the calendar date has 00:00:00 as default time, if the picker type is 'both',\n     * we need to update the given calendar date's time before selecting it.\n     * if it is valid, return the updated dateTime\n     * if it is not valid, return null\n     */\n    private updateAndCheckCalendarDate(date: T): T {\n        let result;\n\n        // if the picker is 'both', update the calendar date's time value\n        if (this.picker.pickerType === 'both') {\n            result = this.dateTimeAdapter.createDate(\n                this.dateTimeAdapter.getYear(date),\n                this.dateTimeAdapter.getMonth(date),\n                this.dateTimeAdapter.getDate(date),\n                this.dateTimeAdapter.getHours(this.pickerMoment),\n                this.dateTimeAdapter.getMinutes(this.pickerMoment),\n                this.dateTimeAdapter.getSeconds(this.pickerMoment)\n            );\n            result = this.dateTimeAdapter.clampDate(\n                result,\n                this.picker.minDateTime,\n                this.picker.maxDateTime\n            );\n        } else {\n            result = this.dateTimeAdapter.clone(date);\n        }\n\n        // check the updated dateTime\n        return this.picker.dateTimeChecker(result) ? result : null;\n    }\n\n    /**\n     * Focus to the picker\n     * */\n    private focusPicker(): void {\n        if (this.picker.pickerMode === 'inline') {\n            return;\n        }\n\n        if (this.calendar) {\n            this.calendar.focusActiveCell();\n        } else if (this.timer) {\n            this.timer.focus();\n        }\n    }\n}\n","/**\n * date-time.class\n */\nimport { EventEmitter, Inject, Input, Optional, Directive } from '@angular/core';\nimport {\n    coerceBooleanProperty,\n    coerceNumberProperty\n} from '@angular/cdk/coercion';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport {\n    OWL_DATE_TIME_FORMATS,\n    OwlDateTimeFormats\n} from './adapter/date-time-format.class';\n\nlet nextUniqueId = 0;\n\nexport type PickerType = 'both' | 'calendar' | 'timer';\n\nexport type PickerMode = 'popup' | 'dialog' | 'inline';\n\nexport type SelectMode = 'single' | 'range' | 'rangeFrom' | 'rangeTo';\n\n@Directive()\nexport abstract class OwlDateTime<T> {\n    /**\n     * Whether to show the second's timer\n     */\n    private _showSecondsTimer = false;\n    @Input()\n    get showSecondsTimer(): boolean {\n        return this._showSecondsTimer;\n    }\n\n    set showSecondsTimer(val: boolean) {\n        this._showSecondsTimer = coerceBooleanProperty(val);\n    }\n\n    /**\n     * Whether the timer is in hour12 format\n     */\n    private _hour12Timer = false;\n    @Input()\n    get hour12Timer(): boolean {\n        return this._hour12Timer;\n    }\n\n    set hour12Timer(val: boolean) {\n        this._hour12Timer = coerceBooleanProperty(val);\n    }\n\n    /**\n     * The view that the calendar should start in.\n     */\n    @Input()\n    startView: 'month' | 'year' | 'multi-years' = 'month';\n\n    /**\n     * Hours to change per step\n     */\n    private _stepHour = 1;\n    @Input()\n    get stepHour(): number {\n        return this._stepHour;\n    }\n\n    set stepHour(val: number) {\n        this._stepHour = coerceNumberProperty(val, 1);\n    }\n\n    /**\n     * Minutes to change per step\n     */\n    private _stepMinute = 1;\n    @Input()\n    get stepMinute(): number {\n        return this._stepMinute;\n    }\n\n    set stepMinute(val: number) {\n        this._stepMinute = coerceNumberProperty(val, 1);\n    }\n\n    /**\n     * Seconds to change per step\n     */\n    private _stepSecond = 1;\n    @Input()\n    get stepSecond(): number {\n        return this._stepSecond;\n    }\n\n    set stepSecond(val: number) {\n        this._stepSecond = coerceNumberProperty(val, 1);\n    }\n\n    /**\n     * Set the first day of week\n     */\n    private _firstDayOfWeek: number;\n    @Input()\n    get firstDayOfWeek() {\n        return this._firstDayOfWeek;\n    }\n\n    set firstDayOfWeek(value: number) {\n        value = coerceNumberProperty(value);\n        if (value > 6 || value < 0) {\n            this._firstDayOfWeek = undefined;\n        } else {\n            this._firstDayOfWeek = value;\n        }\n    }\n\n    /**\n     * Whether to hide dates in other months at the start or end of the current month.\n     */\n    private _hideOtherMonths = false;\n    @Input()\n    get hideOtherMonths(): boolean {\n        return this._hideOtherMonths;\n    }\n\n    set hideOtherMonths(val: boolean) {\n        this._hideOtherMonths = coerceBooleanProperty(val);\n    }\n\n    private readonly _id: string;\n    get id(): string {\n        return this._id;\n    }\n\n    abstract get selected(): T | null;\n\n    abstract get selecteds(): T[] | null;\n\n    abstract get dateTimeFilter(): (date: T | null) => boolean;\n\n    abstract get maxDateTime(): T | null;\n\n    abstract get minDateTime(): T | null;\n\n    abstract get selectMode(): SelectMode;\n\n    abstract get startAt(): T | null;\n\n    abstract get endAt(): T | null;\n\n    abstract get opened(): boolean;\n\n    abstract get pickerMode(): PickerMode;\n\n    abstract get pickerType(): PickerType;\n\n    abstract get isInSingleMode(): boolean;\n\n    abstract get isInRangeMode(): boolean;\n\n    abstract select(date: T | T[]): void;\n\n    abstract yearSelected: EventEmitter<T>;\n\n    abstract monthSelected: EventEmitter<T>;\n\n    abstract selectYear(normalizedYear: T): void;\n\n    abstract selectMonth(normalizedMonth: T): void;\n\n    get formatString(): string {\n        return this.pickerType === 'both'\n            ? this.dateTimeFormats.fullPickerInput\n            : this.pickerType === 'calendar'\n                ? this.dateTimeFormats.datePickerInput\n                : this.dateTimeFormats.timePickerInput;\n    }\n\n    /**\n     * Date Time Checker to check if the give dateTime is selectable\n     */\n    public dateTimeChecker = (dateTime: T) => {\n        return (\n            !!dateTime &&\n            (!this.dateTimeFilter || this.dateTimeFilter(dateTime)) &&\n            (!this.minDateTime ||\n                this.dateTimeAdapter.compare(dateTime, this.minDateTime) >=\n                    0) &&\n            (!this.maxDateTime ||\n                this.dateTimeAdapter.compare(dateTime, this.maxDateTime) <= 0)\n        );\n    };\n\n    get disabled(): boolean {\n        return false;\n    }\n\n    protected constructor(\n        @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\n        @Optional()\n        @Inject(OWL_DATE_TIME_FORMATS)\n        protected dateTimeFormats: OwlDateTimeFormats\n    ) {\n        if (!this.dateTimeAdapter) {\n            throw Error(\n                `OwlDateTimePicker: No provider found for DateTimeAdapter. You must import one of the following ` +\n                    `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\n                    `custom implementation.`\n            );\n        }\n\n        if (!this.dateTimeFormats) {\n            throw Error(\n                `OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\n                    `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\n                    `custom implementation.`\n            );\n        }\n\n        this._id = `owl-dt-picker-${nextUniqueId++}`;\n    }\n\n    protected getValidDate(obj: any): T | null {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n}\n","/**\n * dialog-config.class\n */\nimport { ViewContainerRef } from '@angular/core';\nimport { NoopScrollStrategy, ScrollStrategy } from '@angular/cdk/overlay';\n\nlet uniqueId = 0;\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n    /** Override for the dialog's top position. */\n    top?: string;\n\n    /** Override for the dialog's bottom position. */\n    bottom?: string;\n\n    /** Override for the dialog's left position. */\n    left?: string;\n\n    /** Override for the dialog's right position. */\n    right?: string;\n}\n\nexport interface OwlDialogConfigInterface {\n    /**\n     * ID of the element that describes the dialog.\n     */\n    ariaDescribedBy?: string | null;\n\n    /**\n     * Whether to focus the dialog when the dialog is opened\n     */\n    autoFocus?: boolean;\n\n    /** Whether the dialog has a backdrop. */\n    hasBackdrop?: boolean;\n\n    /**\n     * Custom style for the backdrop\n     * */\n    backdropStyle?: any;\n\n    /** Data being injected into the child component. */\n    data?: any ;\n\n    /** Whether the user can use escape or clicking outside to close a modal. */\n    disableClose?: boolean;\n\n    /**\n     * ID for the modal. If omitted, a unique one will be generated.\n     */\n    id?: string;\n\n    /**\n     * The ARIA role of the dialog element.\n     */\n    role?: 'dialog' | 'alertdialog';\n\n    /**\n     * Custom class for the pane\n     * */\n    paneClass?: string | string[];\n\n    /**\n     * Mouse Event\n     * */\n    event?: MouseEvent;\n\n    /**\n     * Custom class for the backdrop\n     * */\n    backdropClass?: string | string[];\n\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * */\n    closeOnNavigation?: boolean;\n\n    /** Width of the dialog. */\n    width?: string ;\n\n    /** Height of the dialog. */\n    height?: string;\n\n    /**\n     * The min-width of the overlay panel.\n     * If a number is provided, pixel units are assumed.\n     * */\n    minWidth?: number | string;\n\n    /**\n     * The min-height of the overlay panel.\n     * If a number is provided, pixel units are assumed.\n     * */\n    minHeight?: number | string;\n\n    /**\n     * The max-width of the overlay panel.\n     * If a number is provided, pixel units are assumed.\n     * */\n    maxWidth?: number | string;\n\n    /**\n     * The max-height of the overlay panel.\n     * If a number is provided, pixel units are assumed.\n     * */\n    maxHeight?: number | string;\n\n    /** Position overrides. */\n    position?: DialogPosition;\n\n    /**\n     * The scroll strategy when the dialog is open\n     * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\n     * */\n    scrollStrategy?: ScrollStrategy;\n\n    viewContainerRef?: ViewContainerRef;\n}\n\nexport class OwlDialogConfig implements OwlDialogConfigInterface {\n    /**\n     * ID of the element that describes the dialog.\n     */\n    public ariaDescribedBy: string | null = null;\n\n    /**\n     * Whether to focus the dialog when the dialog is opened\n     */\n    public autoFocus = true;\n\n    /** Whether the dialog has a backdrop. */\n    public hasBackdrop = true;\n\n    /**\n     * Custom style for the backdrop\n     * */\n    public backdropStyle: any;\n\n    /** Data being injected into the child component. */\n    public data: any = null;\n\n    /** Whether the user can use escape or clicking outside to close a modal. */\n    public disableClose = false;\n\n    /**\n     * ID for the modal. If omitted, a unique one will be generated.\n     */\n    public id: string;\n\n    /**\n     * The ARIA role of the dialog element.\n     */\n    public role: 'dialog' | 'alertdialog' = 'dialog';\n\n    /**\n     * Custom class for the pane\n     * */\n    public paneClass: string | string[] = '';\n\n    /**\n     * Mouse Event\n     * */\n    public event: MouseEvent = null;\n\n    /**\n     * Custom class for the backdrop\n     * */\n    public backdropClass: string | string[] = '';\n\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * */\n    public closeOnNavigation = true;\n\n    /** Width of the dialog. */\n    public width = '';\n\n    /** Height of the dialog. */\n    public height = '';\n\n    /**\n     * The min-width of the overlay panel.\n     * If a number is provided, pixel units are assumed.\n     * */\n    public minWidth: number | string;\n\n    /**\n     * The min-height of the overlay panel.\n     * If a number is provided, pixel units are assumed.\n     * */\n    public minHeight: number | string;\n\n    /**\n     * The max-width of the overlay panel.\n     * If a number is provided, pixel units are assumed.\n     * */\n    public maxWidth: number | string = '85vw';\n\n    /**\n     * The max-height of the overlay panel.\n     * If a number is provided, pixel units are assumed.\n     * */\n    public maxHeight: number | string;\n\n    /** Position overrides. */\n    public position: DialogPosition;\n\n    /**\n     * The scroll strategy when the dialog is open\n     * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\n     * */\n    public scrollStrategy: ScrollStrategy = new NoopScrollStrategy();\n\n    public viewContainerRef: ViewContainerRef;\n\n    constructor() {\n        this.id = `owl-dialog-${uniqueId++}`;\n    }\n}\n","/**\n * dialog-ref.class\n */\nimport { AnimationEvent } from '@angular/animations';\nimport { Location } from '@angular/common';\nimport { GlobalPositionStrategy, OverlayRef } from '@angular/cdk/overlay';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { OwlDialogContainerComponent } from './dialog-container.component';\nimport { DialogPosition } from './dialog-config.class';\nimport { Observable, Subject, Subscription, SubscriptionLike as ISubscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nexport class OwlDialogRef<T> {\n\n    private result: any;\n\n    private _beforeClose$ = new Subject<any>();\n\n    private _afterOpen$ = new Subject<any>();\n\n    private _afterClosed$ = new Subject<any>();\n\n    /** Subscription to changes in the user's location. */\n    private locationChanged: ISubscription = Subscription.EMPTY;\n\n    /**\n     * The instance of component opened into modal\n     * */\n    public componentInstance: T;\n\n    /** Whether the user is allowed to close the dialog. */\n    public disableClose = this.container.config.disableClose;\n\n    constructor( private overlayRef: OverlayRef,\n                 private container: OwlDialogContainerComponent,\n                 public readonly id: string,\n                 location?: Location ) {\n\n        this.container.animationStateChanged\n            .pipe(\n                filter(( event: AnimationEvent ) => event.phaseName === 'done' && event.toState === 'enter'),\n                take(1)\n            )\n            .subscribe(() => {\n                this._afterOpen$.next();\n                this._afterOpen$.complete();\n            });\n\n        this.container.animationStateChanged\n            .pipe(\n                filter(( event: AnimationEvent ) => event.phaseName === 'done' && event.toState === 'exit'),\n                take(1)\n            )\n            .subscribe(() => {\n                this.overlayRef.dispose();\n                this.locationChanged.unsubscribe();\n                this._afterClosed$.next(this.result);\n                this._afterClosed$.complete();\n                this.componentInstance = null;\n            });\n\n        this.overlayRef.keydownEvents()\n            .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\n            .subscribe(() => this.close());\n\n        if (location) {\n            this.locationChanged = location.subscribe(() => {\n                if (this.container.config.closeOnNavigation) {\n                    this.close();\n                }\n            });\n        }\n    }\n\n    public close( dialogResult?: any ) {\n        this.result = dialogResult;\n\n        this.container.animationStateChanged\n            .pipe(\n                filter(( event: AnimationEvent ) => event.phaseName === 'start'),\n                take(1)\n            )\n            .subscribe(() => {\n                this._beforeClose$.next(dialogResult);\n                this._beforeClose$.complete();\n                this.overlayRef.detachBackdrop();\n            });\n\n        this.container.startExitAnimation();\n    }\n\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    public backdropClick(): Observable<any> {\n        return this.overlayRef.backdropClick();\n    }\n\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    public keydownEvents(): Observable<KeyboardEvent> {\n        return this.overlayRef.keydownEvents();\n    }\n\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    public updatePosition( position?: DialogPosition ): this {\n        const strategy = this.getPositionStrategy();\n\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        } else {\n            strategy.centerHorizontally();\n        }\n\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        } else {\n            strategy.centerVertically();\n        }\n\n        this.overlayRef.updatePosition();\n\n        return this;\n    }\n\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize( width: string = 'auto', height: string = 'auto' ): this {\n        this.getPositionStrategy().width(width).height(height);\n        this.overlayRef.updatePosition();\n        return this;\n    }\n\n    public isAnimating(): boolean {\n        return this.container.isAnimating;\n    }\n\n    public afterOpen(): Observable<any> {\n        return this._afterOpen$.asObservable();\n    }\n\n    public beforeClose(): Observable<any> {\n        return this._beforeClose$.asObservable();\n    }\n\n    public afterClosed(): Observable<any> {\n        return this._afterClosed$.asObservable();\n    }\n\n    /** Fetches the position strategy object from the overlay ref. */\n    private getPositionStrategy(): GlobalPositionStrategy {\n        return this.overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n    }\n}\n","/**\n * dialog-container.component\n */\n\nimport {\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter,\n    Inject,\n    OnInit,\n    Optional,\n    ViewChild\n} from '@angular/core';\nimport {\n    animate,\n    animateChild,\n    AnimationEvent,\n    keyframes,\n    style,\n    transition,\n    trigger\n} from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport {\n    BasePortalOutlet,\n    CdkPortalOutlet,\n    ComponentPortal,\n    TemplatePortal\n} from '@angular/cdk/portal';\nimport { OwlDialogConfigInterface } from './dialog-config.class';\n\nconst zoomFadeIn = {\n    opacity: 0,\n    transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})'\n};\nconst zoomFadeInFrom = {\n    opacity: 0,\n    transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})',\n    transformOrigin: '{{ ox }} {{ oy }}'\n};\n\n@Component({\n    selector: 'owl-dialog-container',\n    templateUrl: './dialog-container.component.html',\n    animations: [\n        trigger('slideModal', [\n            transition(\n                'void => enter',\n                [\n                    style(zoomFadeInFrom),\n                    animate('300ms cubic-bezier(0.35, 0, 0.25, 1)', style('*')),\n                    animate(\n                        '150ms',\n                        keyframes([\n                            style({ transform: 'scale(1)', offset: 0 }),\n                            style({ transform: 'scale(1.05)', offset: 0.3 }),\n                            style({ transform: 'scale(.95)', offset: 0.8 }),\n                            style({ transform: 'scale(1)', offset: 1.0 })\n                        ])\n                    ),\n                    animateChild()\n                ],\n                {\n                    params: {\n                        x: '0px',\n                        y: '0px',\n                        ox: '50%',\n                        oy: '50%',\n                        scale: 1\n                    }\n                }\n            ),\n            transition(\n                'enter => exit',\n                [animateChild(), animate(200, style(zoomFadeIn))],\n                { params: { x: '0px', y: '0px', ox: '50%', oy: '50%' } }\n            )\n        ])\n    ],\n    host: {\n        '(@slideModal.start)': 'onAnimationStart($event)',\n        '(@slideModal.done)': 'onAnimationDone($event)',\n        '[class.owl-dialog-container]': 'owlDialogContainerClass',\n        '[attr.tabindex]': 'owlDialogContainerTabIndex',\n        '[attr.id]': 'owlDialogContainerId',\n        '[attr.role]': 'owlDialogContainerRole',\n        '[attr.aria-labelledby]': 'owlDialogContainerAriaLabelledby',\n        '[attr.aria-describedby]': 'owlDialogContainerAriaDescribedby',\n        '[@slideModal]': 'owlDialogContainerAnimation'\n    }\n})\nexport class OwlDialogContainerComponent extends BasePortalOutlet\n    implements OnInit {\n    @ViewChild(CdkPortalOutlet, { static: true })\n    portalOutlet: CdkPortalOutlet | null = null;\n\n    /** The class that traps and manages focus within the dialog. */\n    private focusTrap: FocusTrap;\n\n    /** ID of the element that should be considered as the dialog's label. */\n    public ariaLabelledBy: string | null = null;\n\n    /** Emits when an animation state changes. */\n    public animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    public isAnimating = false;\n\n    private _config: OwlDialogConfigInterface;\n    get config(): OwlDialogConfigInterface {\n        return this._config;\n    }\n\n    private state: 'void' | 'enter' | 'exit' = 'enter';\n\n    // for animation purpose\n    private params: any = {\n        x: '0px',\n        y: '0px',\n        ox: '50%',\n        oy: '50%',\n        scale: 0\n    };\n\n    // A variable to hold the focused element before the dialog was open.\n    // This would help us to refocus back to element when the dialog was closed.\n    private elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n    get owlDialogContainerClass(): boolean {\n        return true;\n    }\n\n    get owlDialogContainerTabIndex(): number {\n        return -1;\n    }\n\n    get owlDialogContainerId(): string {\n        return this._config.id;\n    }\n\n    get owlDialogContainerRole(): string {\n        return this._config.role || null;\n    }\n\n    get owlDialogContainerAriaLabelledby(): string {\n        return this.ariaLabelledBy;\n    }\n\n    get owlDialogContainerAriaDescribedby(): string {\n        return this._config.ariaDescribedBy || null;\n    }\n\n    get owlDialogContainerAnimation(): any {\n        return { value: this.state, params: this.params };\n    }\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private elementRef: ElementRef,\n        private focusTrapFactory: FocusTrapFactory,\n        @Optional()\n        @Inject(DOCUMENT)\n        private document: any\n    ) {\n        super();\n    }\n\n    public ngOnInit() {}\n\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     */\n    public attachComponentPortal<T>(\n        portal: ComponentPortal<T>\n    ): ComponentRef<T> {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error(\n                'Attempting to attach dialog content after content is already attached'\n            );\n        }\n\n        this.savePreviouslyFocusedElement();\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    public attachTemplatePortal<C>(\n        portal: TemplatePortal<C>\n    ): EmbeddedViewRef<C> {\n        throw new Error('Method not implemented.');\n    }\n\n    public setConfig(config: OwlDialogConfigInterface): void {\n        this._config = config;\n\n        if (config.event) {\n            this.calculateZoomOrigin(event);\n        }\n    }\n\n    public onAnimationStart( event: AnimationEvent ): void {\n        this.isAnimating = true;\n        this.animationStateChanged.emit(event);\n    }\n\n    public onAnimationDone( event: AnimationEvent ): void {\n        if (event.toState === 'enter') {\n            this.trapFocus();\n        } else if (event.toState === 'exit') {\n            this.restoreFocus();\n        }\n\n        this.animationStateChanged.emit(event);\n        this.isAnimating = false;\n    }\n\n    public startExitAnimation() {\n        this.state = 'exit';\n        this.changeDetector.markForCheck();\n    }\n\n    /**\n     * Calculate origin used in the `zoomFadeInFrom()`\n     * for animation purpose\n     */\n    private calculateZoomOrigin(event: any): void {\n        if (!event) {\n            return;\n        }\n\n        const clientX = event.clientX;\n        const clientY = event.clientY;\n\n        const wh = window.innerWidth / 2;\n        const hh = window.innerHeight / 2;\n        const x = clientX - wh;\n        const y = clientY - hh;\n        const ox = clientX / window.innerWidth;\n        const oy = clientY / window.innerHeight;\n\n        this.params.x = `${x}px`;\n        this.params.y = `${y}px`;\n        this.params.ox = `${ox * 100}%`;\n        this.params.oy = `${oy * 100}%`;\n        this.params.scale = 0;\n\n        return;\n    }\n\n    /**\n     * Save the focused element before dialog was open\n     */\n    private savePreviouslyFocusedElement(): void {\n        if (this.document) {\n            this.elementFocusedBeforeDialogWasOpened = this.document\n                .activeElement as HTMLElement;\n\n            Promise.resolve().then(() => this.elementRef.nativeElement.focus());\n        }\n    }\n\n    private trapFocus(): void {\n        if (!this.focusTrap) {\n            this.focusTrap = this.focusTrapFactory.create(\n                this.elementRef.nativeElement\n            );\n        }\n\n        if (this._config.autoFocus) {\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n\n    private restoreFocus(): void {\n        const toFocus = this.elementFocusedBeforeDialogWasOpened;\n\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (toFocus && typeof toFocus.focus === 'function') {\n            toFocus.focus();\n        }\n\n        if (this.focusTrap) {\n            this.focusTrap.destroy();\n        }\n    }\n}\n","/**\n * object.utils\n */\n\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n\n    for (const source of sources) {\n        if (source != null) {\n            for (const key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n\n    return dest;\n}\n","/**\n * index\n */\n\nexport * from './object.utils';\n","/**\n * dialog.service\n */\n\nimport {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Location } from '@angular/common';\nimport { OwlDialogConfig, OwlDialogConfigInterface } from './dialog-config.class';\nimport { OwlDialogRef } from './dialog-ref.class';\nimport { OwlDialogContainerComponent } from './dialog-container.component';\nimport { extendObject } from '../utils';\nimport { defer, Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayContainer,\n    OverlayRef,\n    ScrollStrategy\n} from '@angular/cdk/overlay';\nimport {\n    ComponentPortal,\n    ComponentType,\n    PortalInjector\n} from '@angular/cdk/portal';\n\nexport const OWL_DIALOG_DATA = new InjectionToken<any>('OwlDialogData');\n\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * */\nexport const OWL_DIALOG_SCROLL_STRATEGY = new InjectionToken<\n    () => ScrollStrategy\n>('owl-dialog-scroll-strategy');\n\nexport function OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(\n    overlay: Overlay\n): () => ScrollStrategy {\n    const fn = () => overlay.scrollStrategies.block();\n    return fn;\n}\n\n/** @docs-private */\nexport const OWL_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: OWL_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/**\n * Injection token that can be used to specify default dialog options.\n * */\nexport const OWL_DIALOG_DEFAULT_OPTIONS = new InjectionToken<OwlDialogConfig>(\n    'owl-dialog-default-options'\n);\n\n@Injectable()\nexport class OwlDialogService {\n    private ariaHiddenElements = new Map<Element, string | null>();\n\n    private _openDialogsAtThisLevel: OwlDialogRef<any>[] = [];\n    private _afterOpenAtThisLevel = new Subject<OwlDialogRef<any>>();\n    private _afterAllClosedAtThisLevel = new Subject<void>();\n\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs(): OwlDialogRef<any>[] {\n        return this.parentDialog\n            ? this.parentDialog.openDialogs\n            : this._openDialogsAtThisLevel;\n    }\n\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpen(): Subject<OwlDialogRef<any>> {\n        return this.parentDialog\n            ? this.parentDialog.afterOpen\n            : this._afterOpenAtThisLevel;\n    }\n\n    get _afterAllClosed(): any {\n        const parent = this.parentDialog;\n        return parent\n            ? parent._afterAllClosed\n            : this._afterAllClosedAtThisLevel;\n    }\n\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     */\n\n    afterAllClosed: Observable<{}> = defer(\n        () =>\n            this._openDialogsAtThisLevel.length\n                ? this._afterAllClosed\n                : this._afterAllClosed.pipe(startWith(undefined))\n    );\n\n    private readonly scrollStrategy: () => ScrollStrategy;\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() private location: Location,\n        @Inject(OWL_DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n        @Optional()\n        @Inject(OWL_DIALOG_DEFAULT_OPTIONS)\n        private defaultOptions: OwlDialogConfigInterface,\n        @Optional()\n        @SkipSelf()\n        private parentDialog: OwlDialogService,\n        private overlayContainer: OverlayContainer\n    ) {\n        this.scrollStrategy = scrollStrategy;\n        if (!parentDialog && location) {\n            location.subscribe(() => this.closeAll());\n        }\n    }\n\n    public open<T>(\n        componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n        config?: OwlDialogConfigInterface\n    ): OwlDialogRef<any> {\n        config = applyConfigDefaults(config, this.defaultOptions);\n\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(\n                `Dialog with id \"${\n                    config.id\n                }\" exists already. The dialog id must be unique.`\n            );\n        }\n\n        const overlayRef = this.createOverlay(config);\n        const dialogContainer = this.attachDialogContainer(overlayRef, config);\n        const dialogRef = this.attachDialogContent<T>(\n            componentOrTemplateRef,\n            dialogContainer,\n            overlayRef,\n            config\n        );\n\n        if (!this.openDialogs.length) {\n            this.hideNonDialogContentFromAssistiveTechnology();\n        }\n\n        this.openDialogs.push(dialogRef);\n        dialogRef\n            .afterClosed()\n            .subscribe(() => this.removeOpenDialog(dialogRef));\n        this.afterOpen.next(dialogRef);\n        return dialogRef;\n    }\n\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    public closeAll(): void {\n        let i = this.openDialogs.length;\n\n        while (i--) {\n            this.openDialogs[i].close();\n        }\n    }\n\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    public getDialogById(id: string): OwlDialogRef<any> | undefined {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n\n    private attachDialogContent<T>(\n        componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n        dialogContainer: OwlDialogContainerComponent,\n        overlayRef: OverlayRef,\n        config: OwlDialogConfigInterface\n    ) {\n        const dialogRef = new OwlDialogRef<T>(\n            overlayRef,\n            dialogContainer,\n            config.id,\n            this.location\n        );\n\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe(() => {\n                if (!dialogRef.disableClose) {\n                    dialogRef.close();\n                }\n            });\n        }\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n        } else {\n            const injector = this.createInjector<T>(\n                config,\n                dialogRef,\n                dialogContainer\n            );\n            const contentRef = dialogContainer.attachComponentPortal(\n                new ComponentPortal(componentOrTemplateRef, undefined, injector)\n            );\n            dialogRef.componentInstance = contentRef.instance;\n        }\n\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n\n        return dialogRef;\n    }\n\n    private createInjector<T>(\n        config: OwlDialogConfigInterface,\n        dialogRef: OwlDialogRef<T>,\n        dialogContainer: OwlDialogContainerComponent\n    ) {\n        const userInjector =\n            config &&\n            config.viewContainerRef &&\n            config.viewContainerRef.injector;\n        const injectionTokens = new WeakMap();\n\n        injectionTokens.set(OwlDialogRef, dialogRef);\n        injectionTokens.set(OwlDialogContainerComponent, dialogContainer);\n        injectionTokens.set(OWL_DIALOG_DATA, config.data);\n\n        return new PortalInjector(\n            userInjector || this.injector,\n            injectionTokens\n        );\n    }\n\n    private createOverlay(config: OwlDialogConfigInterface): OverlayRef {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n\n    private attachDialogContainer(\n        overlayRef: OverlayRef,\n        config: OwlDialogConfigInterface\n    ): OwlDialogContainerComponent {\n        const containerPortal = new ComponentPortal(\n            OwlDialogContainerComponent,\n            config.viewContainerRef\n        );\n        const containerRef: ComponentRef<\n            OwlDialogContainerComponent\n        > = overlayRef.attach(containerPortal);\n        containerRef.instance.setConfig(config);\n\n        return containerRef.instance;\n    }\n\n    private getOverlayConfig(dialogConfig: OwlDialogConfigInterface): OverlayConfig {\n        const state = new OverlayConfig({\n            positionStrategy: this.overlay.position().global(),\n            scrollStrategy:\n                dialogConfig.scrollStrategy || this.scrollStrategy(),\n            panelClass: dialogConfig.paneClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight\n        });\n\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n\n        return state;\n    }\n\n    private removeOpenDialog(dialogRef: OwlDialogRef<any>): void {\n        const index = this._openDialogsAtThisLevel.indexOf(dialogRef);\n\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this.ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    } else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n\n                this.ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    private hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this.overlayContainer.getContainerElement();\n\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n\n                if (\n                    sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')\n                ) {\n                    this.ariaHiddenElements.set(\n                        sibling,\n                        sibling.getAttribute('aria-hidden')\n                    );\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default config setting\n * @returns The new configuration object.\n */\nfunction applyConfigDefaults(\n    config?: OwlDialogConfigInterface,\n    defaultOptions?: OwlDialogConfigInterface\n): OwlDialogConfig {\n    return extendObject(new OwlDialogConfig(), config, defaultOptions);\n}\n","/**\n * date-time-picker.component\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport {\n    BlockScrollStrategy,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    PositionStrategy,\n    ScrollStrategy\n} from '@angular/cdk/overlay';\nimport { ESCAPE, UP_ARROW } from '@angular/cdk/keycodes';\nimport { coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\nimport { OwlDateTimeInputDirective } from './date-time-picker-input.directive';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport {\n    OWL_DATE_TIME_FORMATS,\n    OwlDateTimeFormats\n} from './adapter/date-time-format.class';\nimport {\n    OwlDateTime,\n    PickerMode,\n    PickerType,\n    SelectMode\n} from './date-time.class';\nimport { OwlDialogRef } from '../dialog/dialog-ref.class';\nimport { OwlDialogService } from '../dialog/dialog.service';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\n/** Injection token that determines the scroll handling while the dtPicker is open. */\nexport const OWL_DTPICKER_SCROLL_STRATEGY = new InjectionToken<\n    () => ScrollStrategy\n>('owl-dtpicker-scroll-strategy');\n\n/** @docs-private */\nexport function OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(\n    overlay: Overlay\n): () => BlockScrollStrategy {\n    const fn = () => overlay.scrollStrategies.block();\n    return fn;\n}\n\n/** @docs-private */\nexport const OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER = {\n    provide: OWL_DTPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n@Component({\n    selector: 'owl-date-time',\n    exportAs: 'owlDateTime',\n    templateUrl: './date-time-picker.component.html',\n    styleUrls: ['./date-time-picker.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class OwlDateTimeComponent<T> extends OwlDateTime<T>\n    implements OnInit, OnDestroy {\n    /** Custom class for the picker backdrop. */\n    @Input()\n    public backdropClass: string | string[] = [];\n\n    /** Custom class for the picker overlay pane. */\n    @Input()\n    public panelClass: string | string[] = [];\n\n    /** The date to open the calendar to initially. */\n    private _startAt: T | null;\n    @Input()\n    get startAt(): T | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        if (this._startAt) {\n            return this._startAt;\n        }\n\n        if (this._dtInput) {\n            if (this._dtInput.selectMode === 'single') {\n                return this._dtInput.value || null;\n            } else if (\n                this._dtInput.selectMode === 'range' ||\n                this._dtInput.selectMode === 'rangeFrom'\n            ) {\n                return this._dtInput.values[0] || null;\n            } else if (this._dtInput.selectMode === 'rangeTo') {\n                return this._dtInput.values[1] || null;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    set startAt(date: T | null) {\n        this._startAt = this.getValidDate(\n            this.dateTimeAdapter.deserialize(date)\n        );\n    }\n\n    /** The end date to set for range calendar. */\n    private _endAt: T | null;\n    @Input()\n    get endAt(): T | null {\n        if (this._endAt) {\n            return this._endAt;\n        }\n\n        if (this._dtInput) {\n            if (this._dtInput.selectMode === 'single') {\n                return this._dtInput.value || null;\n            } else if (\n                this._dtInput.selectMode === 'range' ||\n                this._dtInput.selectMode === 'rangeFrom'\n            ) {\n                return this._dtInput.values[1] || null;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    set endAt(date: T | null) {\n        this._endAt = this.getValidDate(\n            this.dateTimeAdapter.deserialize(date)\n        );\n    }\n\n    /**\n     * Set the type of the dateTime picker\n     *      'both' -- show both calendar and timer\n     *      'calendar' -- show only calendar\n     *      'timer' -- show only timer\n     */\n    private _pickerType: PickerType = 'both';\n    @Input()\n    get pickerType(): PickerType {\n        return this._pickerType;\n    }\n\n    set pickerType(val: PickerType) {\n        if (val !== this._pickerType) {\n            this._pickerType = val;\n            if (this._dtInput) {\n                this._dtInput.formatNativeInputValue();\n            }\n        }\n    }\n\n    /**\n     * Whether the picker open as a dialog\n     */\n    _pickerMode: PickerMode = 'popup';\n    @Input()\n    get pickerMode() {\n        return this._pickerMode;\n    }\n\n    set pickerMode(mode: PickerMode) {\n        if (mode === 'popup') {\n            this._pickerMode = mode;\n        } else {\n            this._pickerMode = 'dialog';\n        }\n    }\n\n    /** Whether the date time picker should be disabled. */\n    private _disabled: boolean;\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this._dtInput\n            ? this._dtInput.disabled\n            : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        value = coerceBooleanProperty(value);\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this.disabledChange.next(value);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    private _opened = false;\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(val: boolean) {\n        val ? this.open() : this.close();\n    }\n\n    /**\n     * The scroll strategy when the picker is open\n     * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\n     * */\n    @Input()\n    public scrollStrategy: ScrollStrategy;\n\n    /**\n     * Callback when the picker is closed\n     * */\n    @Output()\n    afterPickerClosed = new EventEmitter<any>();\n\n    /**\n     * Callback when the picker is open\n     * */\n    @Output()\n    afterPickerOpen = new EventEmitter<any>();\n\n    /**\n     * Emits selected year in multi-year view\n     * This doesn't imply a change on the selected date.\n     * */\n    @Output()\n    yearSelected = new EventEmitter<T>();\n\n    /**\n     * Emits selected month in year view\n     * This doesn't imply a change on the selected date.\n     * */\n    @Output()\n    monthSelected = new EventEmitter<T>();\n\n    /**\n     * Emit when the selected value has been confirmed\n     * */\n    public confirmSelectedChange = new EventEmitter<T[] | T>();\n\n    /**\n     * Emits when the date time picker is disabled.\n     * */\n    public disabledChange = new EventEmitter<boolean>();\n\n    private pickerContainerPortal: ComponentPortal<\n        OwlDateTimeContainerComponent<T>\n    >;\n    private pickerContainer: OwlDateTimeContainerComponent<T>;\n    private popupRef: OverlayRef;\n    private dialogRef: OwlDialogRef<OwlDateTimeContainerComponent<T>>;\n    private dtInputSub = Subscription.EMPTY;\n    private hidePickerStreamSub = Subscription.EMPTY;\n    private confirmSelectedStreamSub = Subscription.EMPTY;\n    private pickerOpenedStreamSub = Subscription.EMPTY;\n\n    /** The element that was focused before the date time picker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    private _dtInput: OwlDateTimeInputDirective<T>;\n    get dtInput() {\n        return this._dtInput;\n    }\n\n    private _selected: T | null;\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(value: T | null) {\n        this._selected = value;\n        this.changeDetector.markForCheck();\n    }\n\n    private _selecteds: T[] = [];\n    get selecteds() {\n        return this._selecteds;\n    }\n\n    set selecteds(values: T[]) {\n        this._selecteds = values;\n        this.changeDetector.markForCheck();\n    }\n\n    /** The minimum selectable date. */\n    get minDateTime(): T | null {\n        return this._dtInput && this._dtInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDateTime(): T | null {\n        return this._dtInput && this._dtInput.max;\n    }\n\n    get dateTimeFilter(): (date: T | null) => boolean {\n        return this._dtInput && this._dtInput.dateTimeFilter;\n    }\n\n    get selectMode(): SelectMode {\n        return this._dtInput.selectMode;\n    }\n\n    get isInSingleMode(): boolean {\n        return this._dtInput.isInSingleMode;\n    }\n\n    get isInRangeMode(): boolean {\n        return this._dtInput.isInRangeMode;\n    }\n\n    private readonly defaultScrollStrategy: () => ScrollStrategy;\n\n    constructor(\n        public overlay: Overlay,\n        private viewContainerRef: ViewContainerRef,\n        private dialogService: OwlDialogService,\n        private ngZone: NgZone,\n        protected changeDetector: ChangeDetectorRef,\n        @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\n        @Inject(OWL_DTPICKER_SCROLL_STRATEGY) defaultScrollStrategy: any,\n        @Optional()\n        @Inject(OWL_DATE_TIME_FORMATS)\n        protected dateTimeFormats: OwlDateTimeFormats,\n        @Optional()\n        @Inject(DOCUMENT)\n        private document: any\n    ) {\n        super(dateTimeAdapter, dateTimeFormats);\n        this.defaultScrollStrategy = defaultScrollStrategy;\n    }\n\n    public ngOnInit() {}\n\n    public ngOnDestroy(): void {\n        this.close();\n        this.dtInputSub.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n        }\n    }\n\n    public registerInput(input: OwlDateTimeInputDirective<T>): void {\n        if (this._dtInput) {\n            throw Error(\n                'A Owl DateTimePicker can only be associated with a single input.'\n            );\n        }\n\n        this._dtInput = input;\n        this.dtInputSub = this._dtInput.valueChange.subscribe(\n            (value: T[] | T | null) => {\n                if (Array.isArray(value)) {\n                    this.selecteds = value;\n                } else {\n                    this.selected = value;\n                }\n            }\n        );\n    }\n\n    public open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n\n        if (!this._dtInput) {\n            throw Error(\n                'Attempted to open an DateTimePicker with no associated input.'\n            );\n        }\n\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        // reset the picker selected value\n        if (this.isInSingleMode) {\n            this.selected = this._dtInput.value;\n        } else if (this.isInRangeMode) {\n            this.selecteds = this._dtInput.values;\n        }\n\n        // when the picker is open , we make sure the picker's current selected time value\n        // is the same as the _startAt time value.\n        if (this.selected && this.pickerType !== 'calendar' && this._startAt) {\n            this.selected = this.dateTimeAdapter.createDate(\n                this.dateTimeAdapter.getYear(this.selected),\n                this.dateTimeAdapter.getMonth(this.selected),\n                this.dateTimeAdapter.getDate(this.selected),\n                this.dateTimeAdapter.getHours(this._startAt),\n                this.dateTimeAdapter.getMinutes(this._startAt),\n                this.dateTimeAdapter.getSeconds(this._startAt)\n            );\n        }\n\n        this.pickerMode === 'dialog' ? this.openAsDialog() : this.openAsPopup();\n\n        this.pickerContainer.picker = this;\n\n        // Listen to picker container's hidePickerStream\n        this.hidePickerStreamSub = this.pickerContainer.hidePickerStream.subscribe(\n            () => {\n                this.close();\n            }\n        );\n\n        // Listen to picker container's confirmSelectedStream\n        this.confirmSelectedStreamSub = this.pickerContainer.confirmSelectedStream.subscribe(\n            (event: any) => {\n                this.confirmSelect(event);\n            }\n        );\n    }\n\n    /**\n     * Selects the given date\n     */\n    public select(date: T[] | T): void {\n        if (Array.isArray(date)) {\n            this.selecteds = [...date];\n        } else {\n            this.selected = date;\n        }\n\n        /**\n         * Cases in which automatically confirm the select when date or dates are selected:\n         * 1) picker mode is NOT 'dialog'\n         * 2) picker type is 'calendar' and selectMode is 'single'.\n         * 3) picker type is 'calendar' and selectMode is 'range' and\n         *    the 'selecteds' has 'from'(selecteds[0]) and 'to'(selecteds[1]) values.\n         * 4) selectMode is 'rangeFrom' and selecteds[0] has value.\n         * 5) selectMode is 'rangeTo' and selecteds[1] has value.\n         * */\n        if (\n            this.pickerMode !== 'dialog' &&\n            this.pickerType === 'calendar' &&\n            ((this.selectMode === 'single' && this.selected) ||\n                (this.selectMode === 'rangeFrom' && this.selecteds[0]) ||\n                (this.selectMode === 'rangeTo' && this.selecteds[1]) ||\n                (this.selectMode === 'range' &&\n                    this.selecteds[0] &&\n                    this.selecteds[1]))\n        ) {\n            this.confirmSelect();\n        }\n    }\n\n    /**\n     * Emits the selected year in multi-year view\n     * */\n    public selectYear(normalizedYear: T): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /**\n     * Emits selected month in year view\n     * */\n    public selectMonth(normalizedMonth: T): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Hide the picker\n     */\n    public close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (\n            this.pickerContainerPortal &&\n            this.pickerContainerPortal.isAttached\n        ) {\n            this.pickerContainerPortal.detach();\n        }\n\n        if (this.hidePickerStreamSub) {\n            this.hidePickerStreamSub.unsubscribe();\n            this.hidePickerStreamSub = null;\n        }\n\n        if (this.confirmSelectedStreamSub) {\n            this.confirmSelectedStreamSub.unsubscribe();\n            this.confirmSelectedStreamSub = null;\n        }\n\n        if (this.pickerOpenedStreamSub) {\n            this.pickerOpenedStreamSub.unsubscribe();\n            this.pickerOpenedStreamSub = null;\n        }\n\n        if (this.dialogRef) {\n            this.dialogRef.close();\n            this.dialogRef = null;\n        }\n\n        const completeClose = () => {\n            if (this._opened) {\n                this._opened = false;\n                this.afterPickerClosed.emit(null);\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (\n            this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function'\n        ) {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /**\n     * Confirm the selected value\n     */\n    public confirmSelect(event?: any): void {\n        if (this.isInSingleMode) {\n            const selected =\n                this.selected || this.startAt || this.dateTimeAdapter.now();\n            this.confirmSelectedChange.emit(selected);\n        } else if (this.isInRangeMode) {\n            this.confirmSelectedChange.emit(this.selecteds);\n        }\n\n        this.close();\n        return;\n    }\n\n    /**\n     * Open the picker as a dialog\n     */\n    private openAsDialog(): void {\n        this.dialogRef = this.dialogService.open(\n            OwlDateTimeContainerComponent,\n            {\n                autoFocus: false,\n                backdropClass: [\n                    'cdk-overlay-dark-backdrop',\n                    ...coerceArray(this.backdropClass)\n                ],\n                paneClass: ['owl-dt-dialog', ...coerceArray(this.panelClass)],\n                viewContainerRef: this.viewContainerRef,\n                scrollStrategy:\n                    this.scrollStrategy || this.defaultScrollStrategy()\n            }\n        );\n        this.pickerContainer = this.dialogRef.componentInstance;\n\n        this.dialogRef.afterOpen().subscribe(() => {\n            this.afterPickerOpen.emit(null);\n            this._opened = true;\n        });\n        this.dialogRef.afterClosed().subscribe(() => this.close());\n    }\n\n    /**\n     * Open the picker as popup\n     */\n    private openAsPopup(): void {\n        if (!this.pickerContainerPortal) {\n            this.pickerContainerPortal = new ComponentPortal<\n                OwlDateTimeContainerComponent<T>\n            >(OwlDateTimeContainerComponent, this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            const componentRef: ComponentRef<\n                OwlDateTimeContainerComponent<T>\n            > = this.popupRef.attach(this.pickerContainerPortal);\n            this.pickerContainer = componentRef.instance;\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                    this.popupRef.updatePosition();\n                });\n\n            // emit open stream\n            this.pickerOpenedStreamSub = this.pickerContainer.pickerOpenedStream\n                .pipe(take(1))\n                .subscribe(() => {\n                    this.afterPickerOpen.emit(null);\n                    this._opened = true;\n                });\n        }\n    }\n\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                'cdk-overlay-transparent-backdrop',\n                ...coerceArray(this.backdropClass)\n            ],\n            scrollStrategy: this.scrollStrategy || this.defaultScrollStrategy(),\n            panelClass: ['owl-dt-popup', ...coerceArray(this.panelClass)]\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef\n                .keydownEvents()\n                .pipe(\n                    filter(\n                        event =>\n                            event.keyCode === ESCAPE ||\n                            (this._dtInput &&\n                                event.altKey &&\n                                event.keyCode === UP_ARROW)\n                    )\n                )\n        ).subscribe(() => this.close());\n    }\n\n    /**\n     * Create the popup PositionStrategy.\n     * */\n    private createPopupPositionStrategy(): PositionStrategy {\n        return this.overlay\n            .position()\n            .flexibleConnectedTo(this._dtInput.elementRef)\n            .withTransformOriginOn('.owl-dt-container')\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                    offsetY: -176\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                    offsetY: -352\n                }\n            ]);\n    }\n}\n","/**\n * date-time-picker-trigger.directive\n */\n\n\nimport {\n    AfterContentInit,\n    ChangeDetectorRef,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges\n} from '@angular/core';\nimport { OwlDateTimeComponent } from './date-time-picker.component';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[owlDateTimeTrigger]',\n    host: {\n        '(click)': 'handleClickOnHost($event)',\n        '[class.owl-dt-trigger-disabled]': 'owlDTTriggerDisabledClass'\n    }\n})\nexport class OwlDateTimeTriggerDirective<T> implements OnInit, OnChanges, AfterContentInit, OnDestroy {\n\n    @Input('owlDateTimeTrigger') dtPicker: OwlDateTimeComponent<T>;\n\n    private _disabled: boolean;\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.dtPicker.disabled : !!this._disabled;\n    }\n\n    set disabled( value: boolean ) {\n        this._disabled = value;\n    }\n\n    get owlDTTriggerDisabledClass(): boolean {\n        return this.disabled;\n    }\n\n    private stateChanges = Subscription.EMPTY;\n\n    constructor( protected changeDetector: ChangeDetectorRef ) {\n    }\n\n    public ngOnInit(): void {\n    }\n\n    public ngOnChanges( changes: SimpleChanges ) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    public ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    public ngOnDestroy(): void {\n        this.stateChanges.unsubscribe();\n    }\n\n    public handleClickOnHost( event: Event ): void {\n        if (this.dtPicker) {\n            this.dtPicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges(): void {\n        this.stateChanges.unsubscribe();\n\n        const inputDisabled = this.dtPicker && this.dtPicker.dtInput ?\n            this.dtPicker.dtInput.disabledChange : observableOf();\n\n        const pickerDisabled = this.dtPicker ?\n            this.dtPicker.disabledChange : observableOf();\n\n        this.stateChanges = merge(pickerDisabled, inputDisabled)\n            .subscribe(() => {\n                this.changeDetector.markForCheck();\n            });\n    }\n}\n","/**\n * date-time-picker-input.directive\n */\n\nimport {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    Renderer2\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { OwlDateTimeComponent } from './date-time-picker.component';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport {\n    OWL_DATE_TIME_FORMATS,\n    OwlDateTimeFormats\n} from './adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { SelectMode } from './date-time.class';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nexport const OWL_DATETIME_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OwlDateTimeInputDirective),\n    multi: true\n};\n\nexport const OWL_DATETIME_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => OwlDateTimeInputDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[owlDateTime]',\n    exportAs: 'owlDateTimeInput',\n    host: {\n        '(keydown)': 'handleKeydownOnHost($event)',\n        '(blur)': 'handleBlurOnHost($event)',\n        '(input)': 'handleInputOnHost($event)',\n        '(change)': 'handleChangeOnHost($event)',\n        '[attr.aria-haspopup]': 'owlDateTimeInputAriaHaspopup',\n        '[attr.aria-owns]': 'owlDateTimeInputAriaOwns',\n        '[attr.min]': 'minIso8601',\n        '[attr.max]': 'maxIso8601',\n        '[disabled]': 'owlDateTimeInputDisabled'\n    },\n    providers: [\n        OWL_DATETIME_VALUE_ACCESSOR,\n        OWL_DATETIME_VALIDATORS,\n    ],\n})\nexport class OwlDateTimeInputDirective<T>\n    implements\n        OnInit,\n        AfterContentInit,\n        OnDestroy,\n        ControlValueAccessor,\n        Validator {\n    static ngAcceptInputType_disabled: boolean|'';\n\n     /**\n     * Required flag to be used for range of [null, null]\n     * */\n    private _required: boolean;\n    @Input()\n    get required() {\n        return this._required;\n    }\n\n    set required(value: any) {\n        this._required = value === '' || value;\n        this.validatorOnChange();\n    }\n\n    /**\n     * The date time picker that this input is associated with.\n     * */\n    @Input()\n    set owlDateTime(value: OwlDateTimeComponent<T>) {\n        this.registerDateTimePicker(value);\n    }\n\n    /**\n     * A function to filter date time\n     */\n    @Input()\n    set owlDateTimeFilter(filter: (date: T | null) => boolean) {\n        this._dateTimeFilter = filter;\n        this.validatorOnChange();\n    }\n\n    private _dateTimeFilter: (date: T | null) => boolean;\n    get dateTimeFilter() {\n        return this._dateTimeFilter;\n    }\n\n    /** Whether the date time picker's input is disabled. */\n    @Input()\n    private _disabled: boolean;\n    get disabled() {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elmRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    /** The minimum valid date. */\n    private _min: T | null;\n    @Input()\n    get min(): T | null {\n        return this._min;\n    }\n\n    set min(value: T | null) {\n        this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    private _max: T | null;\n    @Input()\n    get max(): T | null {\n        return this._max;\n    }\n\n    set max(value: T | null) {\n        this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /**\n     * The picker's select mode\n     */\n    private _selectMode: SelectMode = 'single';\n    @Input()\n    get selectMode() {\n        return this._selectMode;\n    }\n\n    set selectMode(mode: SelectMode) {\n        if (\n            mode !== 'single' &&\n            mode !== 'range' &&\n            mode !== 'rangeFrom' &&\n            mode !== 'rangeTo'\n        ) {\n            throw Error('OwlDateTime Error: invalid selectMode value!');\n        }\n\n        this._selectMode = mode;\n    }\n\n    /**\n     * The character to separate the 'from' and 'to' in input value\n     */\n    @Input()\n    rangeSeparator = '-';\n\n    private _value: T | null;\n    @Input()\n    get value() {\n        return this._value;\n    }\n\n    set value(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateTimeAdapter.isValid(value);\n        value = this.getValidDate(value);\n        const oldDate = this._value;\n        this._value = value;\n\n        // set the input property 'value'\n        this.formatNativeInputValue();\n\n        // check if the input value changed\n        if (!this.dateTimeAdapter.isEqual(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    private _values: T[] = [];\n    @Input()\n    get values() {\n        return this._values;\n    }\n\n    set values(values: T[]) {\n        if (values && values.length > 0) {\n            this._values = values.map(v => {\n                v = this.dateTimeAdapter.deserialize(v);\n                return this.getValidDate(v);\n            });\n            this.lastValueValid =\n                (!this._values[0] ||\n                    this.dateTimeAdapter.isValid(this._values[0])) &&\n                (!this._values[1] ||\n                    this.dateTimeAdapter.isValid(this._values[1]));\n        } else {\n            this._values = [];\n            this.lastValueValid = true;\n        }\n\n        // set the input property 'value'\n        this.formatNativeInputValue();\n\n        this.valueChange.emit(this._values);\n    }\n\n    /**\n     * Callback to invoke when `change` event is fired on this `<input>`\n     * */\n    @Output()\n    dateTimeChange = new EventEmitter<any>();\n\n    /**\n     * Callback to invoke when an `input` event is fired on this `<input>`.\n     * */\n    @Output()\n    dateTimeInput = new EventEmitter<any>();\n\n    get elementRef(): ElementRef {\n        return this.elmRef;\n    }\n\n    get isInSingleMode(): boolean {\n        return this._selectMode === 'single';\n    }\n\n    get isInRangeMode(): boolean {\n        return (\n            this._selectMode === 'range' ||\n            this._selectMode === 'rangeFrom' ||\n            this._selectMode === 'rangeTo'\n        );\n    }\n\n    /** The date-time-picker that this input is associated with. */\n    public dtPicker: OwlDateTimeComponent<T>;\n\n    private dtPickerSub: Subscription = Subscription.EMPTY;\n    private localeSub: Subscription = Subscription.EMPTY;\n\n    private lastValueValid = true;\n\n    private onModelChange: Function = () => {};\n    private onModelTouched: Function = () => {};\n    private validatorOnChange: Function = () => {};\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid\n            ? null\n            : { owlDateTimeParse: { text: this.elmRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (\n        control: AbstractControl\n    ): ValidationErrors | null => {\n        if (this.isInSingleMode) {\n            const controlValue = this.getValidDate(\n                this.dateTimeAdapter.deserialize(control.value)\n            );\n            return !this.min ||\n                !controlValue ||\n                this.dateTimeAdapter.compare(this.min, controlValue) <= 0\n                ? null\n                : { owlDateTimeMin: { min: this.min, actual: controlValue } };\n        } else if (this.isInRangeMode && control.value) {\n            const controlValueFrom = this.getValidDate(\n                this.dateTimeAdapter.deserialize(control.value[0])\n            );\n            const controlValueTo = this.getValidDate(\n                this.dateTimeAdapter.deserialize(control.value[1])\n            );\n            return !this.min ||\n                !controlValueFrom ||\n                !controlValueTo ||\n                this.dateTimeAdapter.compare(this.min, controlValueFrom) <= 0\n                ? null\n                : {\n                      owlDateTimeMin: {\n                          min: this.min,\n                          actual: [controlValueFrom, controlValueTo]\n                      }\n                  };\n        }\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (\n        control: AbstractControl\n    ): ValidationErrors | null => {\n        if (this.isInSingleMode) {\n            const controlValue = this.getValidDate(\n                this.dateTimeAdapter.deserialize(control.value)\n            );\n            return !this.max ||\n                !controlValue ||\n                this.dateTimeAdapter.compare(this.max, controlValue) >= 0\n                ? null\n                : { owlDateTimeMax: { max: this.max, actual: controlValue } };\n        } else if (this.isInRangeMode && control.value) {\n            const controlValueFrom = this.getValidDate(\n                this.dateTimeAdapter.deserialize(control.value[0])\n            );\n            const controlValueTo = this.getValidDate(\n                this.dateTimeAdapter.deserialize(control.value[1])\n            );\n            return !this.max ||\n                !controlValueFrom ||\n                !controlValueTo ||\n                this.dateTimeAdapter.compare(this.max, controlValueTo) >= 0\n                ? null\n                : {\n                      owlDateTimeMax: {\n                          max: this.max,\n                          actual: [controlValueFrom, controlValueTo]\n                      }\n                  };\n        }\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (\n        control: AbstractControl\n    ): ValidationErrors | null => {\n        const controlValue = this.getValidDate(\n            this.dateTimeAdapter.deserialize(control.value)\n        );\n        return !this._dateTimeFilter ||\n            !controlValue ||\n            this._dateTimeFilter(controlValue)\n            ? null\n            : { owlDateTimeFilter: true };\n    }\n\n    /**\n     * The form control validator for the range.\n     * Check whether the 'before' value is before the 'to' value\n     * */\n    private rangeValidator: ValidatorFn = (\n        control: AbstractControl\n    ): ValidationErrors | null => {\n        if (this.isInSingleMode || !control.value) {\n            return null;\n        }\n\n        const controlValueFrom = this.getValidDate(\n            this.dateTimeAdapter.deserialize(control.value[0])\n        );\n        const controlValueTo = this.getValidDate(\n            this.dateTimeAdapter.deserialize(control.value[1])\n        );\n\n        return !controlValueFrom ||\n            !controlValueTo ||\n            this.dateTimeAdapter.compare(controlValueFrom, controlValueTo) <= 0\n            ? null\n            : { owlDateTimeRange: true };\n    }\n\n    /**\n     * The form control validator for the range when required.\n     * Check whether the 'before' and 'to' values are present\n     * */\n    private requiredRangeValidator: ValidatorFn = (\n        control: AbstractControl\n    ): ValidationErrors | null => {\n        if (this.isInSingleMode || !control.value || !this.required) {\n            return null;\n        }\n\n        const controlValueFrom = this.getValidDate(\n            this.dateTimeAdapter.deserialize(control.value[0])\n        );\n        const controlValueTo = this.getValidDate(\n            this.dateTimeAdapter.deserialize(control.value[1])\n        );\n\n        return !controlValueFrom ||\n            !controlValueTo\n            ? { owlRequiredDateTimeRange: [controlValueFrom, controlValueTo] }\n            : null;\n    }\n\n    /** The combined form control validator for this input. */\n    private validator: ValidatorFn | null = Validators.compose([\n        this.parseValidator,\n        this.minValidator,\n        this.maxValidator,\n        this.filterValidator,\n        this.rangeValidator,\n        this.requiredRangeValidator\n    ]);\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    public valueChange = new EventEmitter<T[] | T | null>();\n\n    /** Emits when the disabled state has changed */\n    public disabledChange = new EventEmitter<boolean>();\n\n    get owlDateTimeInputAriaHaspopup(): boolean {\n        return true;\n    }\n\n    get owlDateTimeInputAriaOwns(): string {\n        return (this.dtPicker.opened && this.dtPicker.id) || null;\n    }\n\n    get minIso8601(): string {\n        return this.min ? this.dateTimeAdapter.toIso8601(this.min) : null;\n    }\n\n    get maxIso8601(): string {\n        return this.max ? this.dateTimeAdapter.toIso8601(this.max) : null;\n    }\n\n    get owlDateTimeInputDisabled(): boolean {\n        return this.disabled;\n    }\n\n    constructor(\n        private elmRef: ElementRef,\n        private renderer: Renderer2,\n        @Optional()\n        private dateTimeAdapter: DateTimeAdapter<T>,\n        @Optional() @Inject(OWL_DATE_TIME_FORMATS)\n        private dateTimeFormats: OwlDateTimeFormats ) {\n        if (!this.dateTimeAdapter) {\n            throw Error(\n                `OwlDateTimePicker: No provider found for DateTimePicker. You must import one of the following ` +\n                    `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\n                    `custom implementation.`\n            );\n        }\n\n        if (!this.dateTimeFormats) {\n            throw Error(\n                `OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\n                    `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\n                    `custom implementation.`\n            );\n        }\n\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    public ngOnInit(): void {\n        if (!this.dtPicker) {\n            throw Error(\n                `OwlDateTimePicker: the picker input doesn't have any associated owl-date-time component`\n            );\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.dtPickerSub = this.dtPicker.confirmSelectedChange.subscribe(\n            (selecteds: T[] | T) => {\n                if (Array.isArray(selecteds)) {\n                    this.values = selecteds;\n                } else {\n                    this.value = selecteds;\n                }\n\n                this.onModelChange(selecteds);\n                this.onModelTouched();\n                this.dateTimeChange.emit({\n                    source: this,\n                    value: selecteds,\n                    input: this.elmRef.nativeElement\n                });\n                this.dateTimeInput.emit({\n                    source: this,\n                    value: selecteds,\n                    input: this.elmRef.nativeElement\n                });\n            }\n        );\n    }\n\n    public ngOnDestroy(): void {\n        this.dtPickerSub.unsubscribe();\n        this.localeSub.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    public writeValue(value: any): void {\n        if (this.isInSingleMode) {\n            this.value = value;\n        } else {\n            this.values = value;\n        }\n    }\n\n    public registerOnChange(fn: any): void {\n        this.onModelChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n        this.onModelTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    public validate(c: AbstractControl): { [key: string]: any } {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    public registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /**\n     * Open the picker when user hold alt + DOWN_ARROW\n     * */\n    public handleKeydownOnHost(event: KeyboardEvent ): void {\n        if (event.altKey && event.keyCode === DOWN_ARROW) {\n            this.dtPicker.open();\n            event.preventDefault();\n        }\n    }\n\n    public handleBlurOnHost(event: Event ): void {\n        this.onModelTouched();\n    }\n\n    public handleInputOnHost(event: any ): void {\n        const value = event.target.value;\n        if (this._selectMode === 'single') {\n            this.changeInputInSingleMode(value);\n        } else if (this._selectMode === 'range') {\n            this.changeInputInRangeMode(value);\n        } else {\n            this.changeInputInRangeFromToMode(value);\n        }\n    }\n\n    public handleChangeOnHost(event: any ): void {\n\n        let v;\n        if (this.isInSingleMode) {\n            v = this.value;\n        } else if (this.isInRangeMode) {\n            v = this.values;\n        }\n\n        this.dateTimeChange.emit({\n            source: this,\n            value: v,\n            input: this.elmRef.nativeElement\n        });\n    }\n\n    /**\n     * Set the native input property 'value'\n     */\n    public formatNativeInputValue(): void {\n        if (this.isInSingleMode) {\n            this.renderer.setProperty(\n                this.elmRef.nativeElement,\n                'value',\n                this._value\n                    ? this.dateTimeAdapter.format(\n                          this._value,\n                          this.dtPicker.formatString\n                      )\n                    : ''\n            );\n        } else if (this.isInRangeMode) {\n            if (this._values && this.values.length > 0) {\n                const from = this._values[0];\n                const to = this._values[1];\n\n                const fromFormatted = from\n                    ? this.dateTimeAdapter.format(\n                          from,\n                          this.dtPicker.formatString\n                      )\n                    : '';\n                const toFormatted = to\n                    ? this.dateTimeAdapter.format(\n                          to,\n                          this.dtPicker.formatString\n                      )\n                    : '';\n\n                if (!fromFormatted && !toFormatted) {\n                    this.renderer.setProperty(\n                        this.elmRef.nativeElement,\n                        'value',\n                        null\n                    );\n                } else {\n                    if (this._selectMode === 'range') {\n                        this.renderer.setProperty(\n                            this.elmRef.nativeElement,\n                            'value',\n                            fromFormatted +\n                                ' ' +\n                                this.rangeSeparator +\n                                ' ' +\n                                toFormatted\n                        );\n                    } else if (this._selectMode === 'rangeFrom') {\n                        this.renderer.setProperty(\n                            this.elmRef.nativeElement,\n                            'value',\n                            fromFormatted\n                        );\n                    } else if (this._selectMode === 'rangeTo') {\n                        this.renderer.setProperty(\n                            this.elmRef.nativeElement,\n                            'value',\n                            toFormatted\n                        );\n                    }\n                }\n            } else {\n                this.renderer.setProperty(\n                    this.elmRef.nativeElement,\n                    'value',\n                    ''\n                );\n            }\n        }\n\n        return;\n    }\n\n    /**\n     * Register the relationship between this input and its picker component\n     */\n    private registerDateTimePicker(picker: OwlDateTimeComponent<T>) {\n        if (picker) {\n            this.dtPicker = picker;\n            this.dtPicker.registerInput(this);\n        }\n    }\n\n    /**\n     * Convert a given obj to a valid date object\n     */\n    private getValidDate(obj: any): T | null {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n\n    /**\n     * Convert a time string to a date-time string\n     * When pickerType is 'timer', the value in the picker's input is a time string.\n     * The dateTimeAdapter parse fn could not parse a time string to a Date Object.\n     * Therefore we need this fn to convert a time string to a date-time string.\n     */\n    private convertTimeStringToDateTimeString(\n        timeString: string,\n        dateTime: T\n    ): string | null {\n        if (timeString) {\n            const v = dateTime || this.dateTimeAdapter.now();\n            const dateString = this.dateTimeAdapter.format(\n                v,\n                this.dateTimeFormats.datePickerInput\n            );\n            return dateString + ' ' + timeString;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Handle input change in single mode\n     */\n    private changeInputInSingleMode(inputValue: string): void {\n        let value = inputValue;\n        if (this.dtPicker.pickerType === 'timer') {\n            value = this.convertTimeStringToDateTimeString(value, this.value);\n        }\n\n        let result = this.dateTimeAdapter.parse(\n            value,\n            this.dateTimeFormats.parseInput\n        );\n        this.lastValueValid = !result || this.dateTimeAdapter.isValid(result);\n        result = this.getValidDate(result);\n\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n        // result equals to null means there is input event, but the input value is invalid\n        if (!this.isSameValue(result, this._value) || result === null) {\n            this._value = result;\n            this.valueChange.emit(result);\n            this.onModelChange(result);\n            this.dateTimeInput.emit({\n                source: this,\n                value: result,\n                input: this.elmRef.nativeElement\n            });\n        }\n    }\n\n    /**\n     * Handle input change in rangeFrom or rangeTo mode\n     */\n    private changeInputInRangeFromToMode(inputValue: string): void {\n        const originalValue =\n            this._selectMode === 'rangeFrom'\n                ? this._values[0]\n                : this._values[1];\n\n        if (this.dtPicker.pickerType === 'timer') {\n            inputValue = this.convertTimeStringToDateTimeString(\n                inputValue,\n                originalValue\n            );\n        }\n\n        let result = this.dateTimeAdapter.parse(\n            inputValue,\n            this.dateTimeFormats.parseInput\n        );\n        this.lastValueValid = !result || this.dateTimeAdapter.isValid(result);\n        result = this.getValidDate(result);\n\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n        if (\n            (this._selectMode === 'rangeFrom' &&\n                this.isSameValue(result, this._values[0]) &&\n                result) ||\n            (this._selectMode === 'rangeTo' &&\n                this.isSameValue(result, this._values[1]) &&\n                result)\n        ) {\n            return;\n        }\n\n        this._values =\n            this._selectMode === 'rangeFrom'\n                ? [result, this._values[1]]\n                : [this._values[0], result];\n        this.valueChange.emit(this._values);\n        this.onModelChange(this._values);\n        this.dateTimeInput.emit({\n            source: this,\n            value: this._values,\n            input: this.elmRef.nativeElement\n        });\n    }\n\n    /**\n     * Handle input change in range mode\n     */\n    private changeInputInRangeMode(inputValue: string): void {\n        const selecteds = inputValue.split(this.rangeSeparator);\n        let fromString = selecteds[0];\n        let toString = selecteds[1];\n\n        if (this.dtPicker.pickerType === 'timer') {\n            fromString = this.convertTimeStringToDateTimeString(\n                fromString,\n                this.values[0]\n            );\n            toString = this.convertTimeStringToDateTimeString(\n                toString,\n                this.values[1]\n            );\n        }\n\n        let from = this.dateTimeAdapter.parse(\n            fromString,\n            this.dateTimeFormats.parseInput\n        );\n        let to = this.dateTimeAdapter.parse(\n            toString,\n            this.dateTimeFormats.parseInput\n        );\n        this.lastValueValid =\n            (!from || this.dateTimeAdapter.isValid(from)) &&\n            (!to || this.dateTimeAdapter.isValid(to));\n        from = this.getValidDate(from);\n        to = this.getValidDate(to);\n\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\n        if (\n            !this.isSameValue(from, this._values[0]) ||\n            !this.isSameValue(to, this._values[1]) ||\n            (from === null && to === null)\n        ) {\n            this._values = [from, to];\n            this.valueChange.emit(this._values);\n            this.onModelChange(this._values);\n            this.dateTimeInput.emit({\n                source: this,\n                value: this._values,\n                input: this.elmRef.nativeElement\n            });\n        }\n    }\n\n    /**\n     * Check if the two value is the same\n     */\n    private isSameValue(first: T | null, second: T | null): boolean {\n        if (first && second) {\n            return this.dateTimeAdapter.compare(first, second) === 0;\n        }\n\n        return first === second;\n    }\n}\n","/**\n * calendar-body.component\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { SelectMode } from './date-time.class';\nimport { take } from 'rxjs/operators';\n\nexport class CalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public out: boolean = false,\n        public cellClass: string = ''\n    ) {}\n}\n\n@Component({\n    selector: '[owl-date-time-calendar-body]',\n    exportAs: 'owlDateTimeCalendarBody',\n    templateUrl: './calendar-body.component.html',\n    styleUrls: ['./calendar-body.component.scss'],\n    host: {\n        '[class.owl-dt-calendar-body]': 'owlDTCalendarBodyClass'\n    },\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlCalendarBodyComponent implements OnInit {\n    /**\n     * The cell number of the active cell in the table.\n     */\n    @Input()\n    activeCell = 0;\n\n    /**\n     * The cells to display in the table.\n     * */\n    @Input()\n    rows: CalendarCell[][];\n\n    /**\n     * The number of columns in the table.\n     * */\n    @Input()\n    numCols = 7;\n\n    /**\n     * The ratio (width / height) to use for the cells in the table.\n     */\n    @Input()\n    cellRatio = 1;\n\n    /**\n     * The value in the table that corresponds to today.\n     * */\n    @Input()\n    todayValue: number;\n\n    /**\n     * The value in the table that is currently selected.\n     * */\n    @Input()\n    selectedValues: number[];\n\n    /**\n     * Current picker select mode\n     */\n    @Input()\n    selectMode: SelectMode;\n\n    /**\n     * Emit when a calendar cell is selected\n     * */\n    @Output()\n    public readonly select = new EventEmitter<CalendarCell>();\n\n    get owlDTCalendarBodyClass(): boolean {\n        return true;\n    }\n\n    get isInSingleMode(): boolean {\n        return this.selectMode === 'single';\n    }\n\n    get isInRangeMode(): boolean {\n        return (\n            this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom' ||\n            this.selectMode === 'rangeTo'\n        );\n    }\n\n    constructor(private elmRef: ElementRef, private ngZone: NgZone) {}\n\n    public ngOnInit() {}\n\n    public selectCell(cell: CalendarCell): void {\n        this.select.emit(cell);\n    }\n\n    public isActiveCell(rowIndex: number, colIndex: number): boolean {\n        const cellNumber = rowIndex * this.numCols + colIndex;\n        return cellNumber === this.activeCell;\n    }\n\n    /**\n     * Check if the cell is selected\n     */\n    public isSelected(value: number): boolean {\n        if (!this.selectedValues || this.selectedValues.length === 0) {\n            return false;\n        }\n\n        if (this.isInSingleMode) {\n            return value === this.selectedValues[0];\n        }\n\n        if (this.isInRangeMode) {\n            const fromValue = this.selectedValues[0];\n            const toValue = this.selectedValues[1];\n\n            return value === fromValue || value === toValue;\n        }\n    }\n\n    /**\n     * Check if the cell in the range\n     * */\n    public isInRange(value: number): boolean {\n        if (this.isInRangeMode) {\n            const fromValue = this.selectedValues[0];\n            const toValue = this.selectedValues[1];\n\n            if (fromValue !== null && toValue !== null) {\n                return value >= fromValue && value <= toValue;\n            } else {\n                return value === fromValue || value === toValue;\n            }\n        }\n    }\n\n    /**\n     * Check if the cell is the range from\n     * */\n    public isRangeFrom(value: number): boolean {\n        if (this.isInRangeMode) {\n            const fromValue = this.selectedValues[0];\n            return fromValue !== null && value === fromValue;\n        }\n    }\n\n    /**\n     * Check if the cell is the range to\n     * */\n    public isRangeTo(value: number): boolean {\n        if (this.isInRangeMode) {\n            const toValue = this.selectedValues[1];\n            return toValue !== null && value === toValue;\n        }\n    }\n\n    /**\n     * Focus to a active cell\n     * */\n    public focusActiveCell(): void {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable\n                .asObservable()\n                .pipe(take(1))\n                .subscribe(() => {\n                    this.elmRef.nativeElement\n                        .querySelector('.owl-dt-calendar-cell-active')\n                        .focus();\n                });\n        });\n    }\n}\n","/**\n * calendar-month-view.component\n */\n\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {\n    CalendarCell,\n    OwlCalendarBodyComponent\n} from './calendar-body.component';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport {\n    OWL_DATE_TIME_FORMATS,\n    OwlDateTimeFormats\n} from './adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { SelectMode } from './date-time.class';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW\n} from '@angular/cdk/keycodes';\nimport { getLocaleFirstDayOfWeek } from '@angular/common';\n\nconst DAYS_PER_WEEK = 7;\nconst WEEKS_PER_VIEW = 6;\n\n@Component({\n    selector: 'owl-date-time-month-view',\n    exportAs: 'owlYearView',\n    templateUrl: './calendar-month-view.component.html',\n    styleUrls: ['./calendar-month-view.component.scss'],\n    host: {\n        '[class.owl-dt-calendar-view]': 'owlDTCalendarView'\n    },\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlMonthViewComponent<T>\n    implements OnInit, AfterContentInit, OnDestroy {\n    /**\n     * Whether to hide dates in other months at the start or end of the current month.\n     * */\n    @Input()\n    hideOtherMonths = false;\n\n    private isDefaultFirstDayOfWeek = true;\n\n    /**\n     * Define the first day of a week\n     * Sunday: 0 - Saturday: 6\n     * */\n    private _firstDayOfWeek = getLocaleFirstDayOfWeek(\n        this.dateTimeAdapter.getLocale()\n    );\n    @Input()\n    get firstDayOfWeek(): number {\n        return this._firstDayOfWeek;\n    }\n\n    set firstDayOfWeek(val: number) {\n        if (val >= 0 && val <= 6 && val !== this._firstDayOfWeek) {\n            this._firstDayOfWeek = val;\n            this.isDefaultFirstDayOfWeek = false;\n\n            if (this.initiated) {\n                this.generateWeekDays();\n                this.generateCalendar();\n                this.cdRef.markForCheck();\n            }\n        }\n    }\n\n    /**\n     * The select mode of the picker;\n     * */\n    private _selectMode: SelectMode = 'single';\n    @Input()\n    get selectMode(): SelectMode {\n        return this._selectMode;\n    }\n\n    set selectMode(val: SelectMode) {\n        this._selectMode = val;\n        if (this.initiated) {\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        }\n    }\n\n    /** The currently selected date. */\n    private _selected: T | null;\n    @Input()\n    get selected(): T | null {\n        return this._selected;\n    }\n\n    set selected(value: T | null) {\n        const oldSelected = this._selected;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._selected = this.getValidDate(value);\n\n        if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\n            this.setSelectedDates();\n        }\n    }\n\n    private _selecteds: T[] = [];\n    @Input()\n    get selecteds(): T[] {\n        return this._selecteds;\n    }\n\n    set selecteds(values: T[]) {\n        this._selecteds = values.map(v => {\n            v = this.dateTimeAdapter.deserialize(v);\n            return this.getValidDate(v);\n        });\n        this.setSelectedDates();\n    }\n\n    private _pickerMoment: T;\n    @Input()\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n\n    set pickerMoment(value: T) {\n        const oldMoment = this._pickerMoment;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment =\n            this.getValidDate(value) || this.dateTimeAdapter.now();\n\n        this.firstDateOfMonth = this.dateTimeAdapter.createDate(\n            this.dateTimeAdapter.getYear(this._pickerMoment),\n            this.dateTimeAdapter.getMonth(this._pickerMoment),\n            1\n        );\n\n        if (\n            !this.isSameMonth(oldMoment, this._pickerMoment) &&\n            this.initiated\n        ) {\n            this.generateCalendar();\n        }\n    }\n\n    /**\n     * A function used to filter which dates are selectable\n     * */\n    private _dateFilter: (date: T) => boolean;\n    @Input()\n    get dateFilter() {\n        return this._dateFilter;\n    }\n\n    set dateFilter(filter: (date: T) => boolean) {\n        this._dateFilter = filter;\n        if (this.initiated) {\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        }\n    }\n\n    /** The minimum selectable date. */\n    private _minDate: T | null;\n    @Input()\n    get minDate(): T | null {\n        return this._minDate;\n    }\n\n    set minDate(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._minDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        }\n    }\n\n    /** The maximum selectable date. */\n    private _maxDate: T | null;\n    @Input()\n    get maxDate(): T | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._maxDate = this.getValidDate(value);\n\n        if (this.initiated) {\n            this.generateCalendar();\n            this.cdRef.markForCheck();\n        }\n    }\n\n    private _weekdays: Array<{ long: string; short: string; narrow: string }>;\n    get weekdays() {\n        return this._weekdays;\n    }\n\n    private _days: CalendarCell[][];\n    get days() {\n        return this._days;\n    }\n\n    get activeCell(): number {\n        if (this.pickerMoment) {\n            return (\n                this.dateTimeAdapter.getDate(this.pickerMoment) +\n                this.firstRowOffset -\n                1\n            );\n        }\n    }\n\n    get isInSingleMode(): boolean {\n        return this.selectMode === 'single';\n    }\n\n    get isInRangeMode(): boolean {\n        return (\n            this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom' ||\n            this.selectMode === 'rangeTo'\n        );\n    }\n\n    private firstDateOfMonth: T;\n\n    private localeSub: Subscription = Subscription.EMPTY;\n\n    private initiated = false;\n\n    private dateNames: string[];\n\n    /**\n     * The date of the month that today falls on.\n     * */\n    public todayDate: number | null;\n\n    /**\n     * An array to hold all selectedDates' value\n     * the value is the day number in current month\n     * */\n    public selectedDates: number[] = [];\n\n    // the index of cell that contains the first date of the month\n    public firstRowOffset: number;\n\n    /**\n     * Callback to invoke when a new date is selected\n     * */\n    @Output()\n    readonly selectedChange = new EventEmitter<T | null>();\n\n    /**\n     * Callback to invoke when any date is selected.\n     * */\n    @Output()\n    readonly userSelection = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output()\n    readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\n\n    /** The body of calendar table */\n    @ViewChild(OwlCalendarBodyComponent, { static: true })\n    calendarBodyElm: OwlCalendarBodyComponent;\n\n    get owlDTCalendarView(): boolean {\n        return true;\n    }\n\n    constructor(\n        private cdRef: ChangeDetectorRef,\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\n        @Optional()\n        @Inject(OWL_DATE_TIME_FORMATS)\n        private dateTimeFormats: OwlDateTimeFormats\n    ) {}\n\n    public ngOnInit() {\n        this.generateWeekDays();\n\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(\n            locale => {\n                this.generateWeekDays();\n                this.generateCalendar();\n                this.firstDayOfWeek = this.isDefaultFirstDayOfWeek\n                    ? getLocaleFirstDayOfWeek(locale)\n                    : this.firstDayOfWeek;\n                this.cdRef.markForCheck();\n            }\n        );\n    }\n\n    public ngAfterContentInit(): void {\n        this.generateCalendar();\n        this.initiated = true;\n    }\n\n    public ngOnDestroy(): void {\n        this.localeSub.unsubscribe();\n    }\n\n    /**\n     * Handle a calendarCell selected\n     */\n    public selectCalendarCell(cell: CalendarCell): void {\n        // Cases in which the date would not be selected\n        // 1, the calendar cell is NOT enabled (is NOT valid)\n        // 2, the selected date is NOT in current picker's month and the hideOtherMonths is enabled\n        if (!cell.enabled || (this.hideOtherMonths && cell.out)) {\n            return;\n        }\n\n        this.selectDate(cell.value);\n    }\n\n    /**\n     * Handle a new date selected\n     */\n    private selectDate(date: number): void {\n        const daysDiff = date - 1;\n        const selected = this.dateTimeAdapter.addCalendarDays(\n            this.firstDateOfMonth,\n            daysDiff\n        );\n\n        this.selectedChange.emit(selected);\n        this.userSelection.emit();\n    }\n\n    /**\n     * Handle keydown event on calendar body\n     */\n    public handleCalendarKeydown(event: KeyboardEvent): void {\n        let moment;\n        switch (event.keyCode) {\n            // minus 1 day\n            case LEFT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(\n                    this.pickerMoment,\n                    -1\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 1 day\n            case RIGHT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(\n                    this.pickerMoment,\n                    1\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // minus 1 week\n            case UP_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(\n                    this.pickerMoment,\n                    -7\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 1 week\n            case DOWN_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(\n                    this.pickerMoment,\n                    7\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // move to first day of current month\n            case HOME:\n                moment = this.dateTimeAdapter.addCalendarDays(\n                    this.pickerMoment,\n                    1 - this.dateTimeAdapter.getDate(this.pickerMoment)\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // move to last day of current month\n            case END:\n                moment = this.dateTimeAdapter.addCalendarDays(\n                    this.pickerMoment,\n                    this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment) -\n                        this.dateTimeAdapter.getDate(this.pickerMoment)\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // minus 1 month (or 1 year)\n            case PAGE_UP:\n                moment = event.altKey\n                    ? this.dateTimeAdapter.addCalendarYears(\n                          this.pickerMoment,\n                          -1\n                      )\n                    : this.dateTimeAdapter.addCalendarMonths(\n                          this.pickerMoment,\n                          -1\n                      );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 1 month (or 1 year)\n            case PAGE_DOWN:\n                moment = event.altKey\n                    ? this.dateTimeAdapter.addCalendarYears(\n                          this.pickerMoment,\n                          1\n                      )\n                    : this.dateTimeAdapter.addCalendarMonths(\n                          this.pickerMoment,\n                          1\n                      );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // select the pickerMoment\n            case ENTER:\n                if (!this.dateFilter || this.dateFilter(this.pickerMoment)) {\n                    this.selectDate(\n                        this.dateTimeAdapter.getDate(this.pickerMoment)\n                    );\n                }\n                break;\n            default:\n                return;\n        }\n\n        this.focusActiveCell();\n        event.preventDefault();\n    }\n\n    /**\n     * Generate the calendar weekdays array\n     * */\n    private generateWeekDays(): void {\n        const longWeekdays = this.dateTimeAdapter.getDayOfWeekNames('long');\n        const shortWeekdays = this.dateTimeAdapter.getDayOfWeekNames('short');\n        const narrowWeekdays = this.dateTimeAdapter.getDayOfWeekNames('narrow');\n        const firstDayOfWeek = this.firstDayOfWeek;\n\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, short: shortWeekdays[i], narrow: narrowWeekdays[i] };\n        });\n\n        this._weekdays = weekdays\n            .slice(firstDayOfWeek)\n            .concat(weekdays.slice(0, firstDayOfWeek));\n\n        this.dateNames = this.dateTimeAdapter.getDateNames();\n\n        return;\n    }\n\n    /**\n     * Generate the calendar days array\n     * */\n    private generateCalendar(): void {\n        if (!this.pickerMoment) {\n            return;\n        }\n\n        this.todayDate = null;\n\n        // the first weekday of the month\n        const startWeekdayOfMonth = this.dateTimeAdapter.getDay(\n            this.firstDateOfMonth\n        );\n        const firstDayOfWeek = this.firstDayOfWeek;\n\n        // the amount of days from the first date of the month\n        // if it is < 0, it means the date is in previous month\n        let daysDiff =\n            0 -\n            ((startWeekdayOfMonth + (DAYS_PER_WEEK - firstDayOfWeek)) %\n                DAYS_PER_WEEK);\n\n        // the index of cell that contains the first date of the month\n        this.firstRowOffset = Math.abs(daysDiff);\n\n        this._days = [];\n        for (let i = 0; i < WEEKS_PER_VIEW; i++) {\n            const week = [];\n            for (let j = 0; j < DAYS_PER_WEEK; j++) {\n                const date = this.dateTimeAdapter.addCalendarDays(\n                    this.firstDateOfMonth,\n                    daysDiff\n                );\n                const dateCell = this.createDateCell(date, daysDiff);\n\n                // check if the date is today\n                if (\n                    this.dateTimeAdapter.isSameDay(\n                        this.dateTimeAdapter.now(),\n                        date\n                    )\n                ) {\n                    this.todayDate = daysDiff + 1;\n                }\n\n                week.push(dateCell);\n                daysDiff += 1;\n            }\n            this._days.push(week);\n        }\n\n        this.setSelectedDates();\n    }\n\n    /**\n     * Creates CalendarCell for days.\n     */\n    private createDateCell(date: T, daysDiff: number): CalendarCell {\n        // total days of the month\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(\n            this.pickerMoment\n        );\n        const dateNum = this.dateTimeAdapter.getDate(date);\n        // const dateName = this.dateNames[dateNum - 1];\n        const dateName = dateNum.toString();\n        const ariaLabel = this.dateTimeAdapter.format(\n            date,\n            this.dateTimeFormats.dateA11yLabel\n        );\n\n        // check if the date if selectable\n        const enabled = this.isDateEnabled(date);\n\n        // check if date is not in current month\n        const dayValue = daysDiff + 1;\n        const out = dayValue < 1 || dayValue > daysInMonth;\n        const cellClass = 'owl-dt-day-' + this.dateTimeAdapter.getDay(date);\n\n        return new CalendarCell(\n            dayValue,\n            dateName,\n            ariaLabel,\n            enabled,\n            out,\n            cellClass\n        );\n    }\n\n    /**\n     * Check if the date is valid\n     */\n    private isDateEnabled(date: T): boolean {\n        return (\n            !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate ||\n                this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\n            (!this.maxDate ||\n                this.dateTimeAdapter.compare(date, this.maxDate) <= 0)\n        );\n    }\n\n    /**\n     * Get a valid date object\n     */\n    private getValidDate(obj: any): T | null {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n\n    /**\n     * Check if the give dates are none-null and in the same month\n     */\n    public isSameMonth(dateLeft: T, dateRight: T): boolean {\n        return !!(\n            dateLeft &&\n            dateRight &&\n            this.dateTimeAdapter.isValid(dateLeft) &&\n            this.dateTimeAdapter.isValid(dateRight) &&\n            this.dateTimeAdapter.getYear(dateLeft) ===\n                this.dateTimeAdapter.getYear(dateRight) &&\n            this.dateTimeAdapter.getMonth(dateLeft) ===\n                this.dateTimeAdapter.getMonth(dateRight)\n        );\n    }\n\n    /**\n     * Set the selectedDates value.\n     * In single mode, it has only one value which represent the selected date\n     * In range mode, it would has two values, one for the fromValue and the other for the toValue\n     * */\n    private setSelectedDates(): void {\n        this.selectedDates = [];\n\n        if (!this.firstDateOfMonth) {\n            return;\n        }\n\n        if (this.isInSingleMode && this.selected) {\n            const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(\n                this.selected,\n                this.firstDateOfMonth\n            );\n            this.selectedDates[0] = dayDiff + 1;\n            return;\n        }\n\n        if (this.isInRangeMode && this.selecteds) {\n            this.selectedDates = this.selecteds.map(selected => {\n                if (this.dateTimeAdapter.isValid(selected)) {\n                    const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(\n                        selected,\n                        this.firstDateOfMonth\n                    );\n                    return dayDiff + 1;\n                } else {\n                    return null;\n                }\n            });\n        }\n    }\n\n    private focusActiveCell() {\n        this.calendarBodyElm.focusActiveCell();\n    }\n}\n","/**\n * calendar-year-view.component\n */\n\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {\n    CalendarCell,\n    OwlCalendarBodyComponent\n} from './calendar-body.component';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport {\n    OWL_DATE_TIME_FORMATS,\n    OwlDateTimeFormats\n} from './adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { SelectMode } from './date-time.class';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW\n} from '@angular/cdk/keycodes';\n\nconst MONTHS_PER_YEAR = 12;\nconst MONTHS_PER_ROW = 3;\n\n@Component({\n    selector: 'owl-date-time-year-view',\n    exportAs: 'owlMonthView',\n    templateUrl: './calendar-year-view.component.html',\n    styleUrls: ['./calendar-year-view.component.scss'],\n    host: {\n        '[class.owl-dt-calendar-view]': 'owlDTCalendarView'\n    },\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OwlYearViewComponent<T>\n    implements OnInit, AfterContentInit, OnDestroy {\n    /**\n     * The select mode of the picker;\n     * */\n    private _selectMode: SelectMode = 'single';\n    @Input()\n    get selectMode(): SelectMode {\n        return this._selectMode;\n    }\n\n    set selectMode(val: SelectMode) {\n        this._selectMode = val;\n        if (this.initiated) {\n            this.generateMonthList();\n            this.cdRef.markForCheck();\n        }\n    }\n\n    /** The currently selected date. */\n    private _selected: T | null;\n    @Input()\n    get selected(): T | null {\n        return this._selected;\n    }\n\n    set selected(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._selected = this.getValidDate(value);\n        this.setSelectedMonths();\n    }\n\n    private _selecteds: T[] = [];\n    @Input()\n    get selecteds(): T[] {\n        return this._selecteds;\n    }\n\n    set selecteds(values: T[]) {\n        this._selecteds = [];\n        for (let i = 0; i < values.length; i++) {\n            const value = this.dateTimeAdapter.deserialize(values[i]);\n            this._selecteds.push(this.getValidDate(value));\n        }\n\n        this.setSelectedMonths();\n    }\n\n    private _pickerMoment: T | null;\n    @Input()\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n\n    set pickerMoment(value: T) {\n        const oldMoment = this._pickerMoment;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment =\n            this.getValidDate(value) || this.dateTimeAdapter.now();\n\n        if (\n            !this.hasSameYear(oldMoment, this._pickerMoment) &&\n            this.initiated\n        ) {\n            this.generateMonthList();\n        }\n    }\n\n    /**\n     * A function used to filter which dates are selectable\n     * */\n    private _dateFilter: (date: T) => boolean;\n    @Input()\n    get dateFilter() {\n        return this._dateFilter;\n    }\n\n    set dateFilter(filter: (date: T) => boolean) {\n        this._dateFilter = filter;\n        if (this.initiated) {\n            this.generateMonthList();\n        }\n    }\n\n    /** The minimum selectable date. */\n    private _minDate: T | null;\n    @Input()\n    get minDate(): T | null {\n        return this._minDate;\n    }\n\n    set minDate(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._minDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateMonthList();\n        }\n    }\n\n    /** The maximum selectable date. */\n    private _maxDate: T | null;\n    @Input()\n    get maxDate(): T | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._maxDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateMonthList();\n        }\n    }\n\n    private readonly monthNames: string[];\n\n    private _months: CalendarCell[][];\n    get months() {\n        return this._months;\n    }\n\n    get activeCell(): number {\n        if (this._pickerMoment) {\n            return this.dateTimeAdapter.getMonth(this._pickerMoment);\n        }\n    }\n\n    get isInSingleMode(): boolean {\n        return this.selectMode === 'single';\n    }\n\n    get isInRangeMode(): boolean {\n        return (\n            this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom' ||\n            this.selectMode === 'rangeTo'\n        );\n    }\n\n    private localeSub: Subscription = Subscription.EMPTY;\n\n    private initiated = false;\n\n    public todayMonth: number | null;\n\n    /**\n     * An array to hold all selectedDates' month value\n     * the value is the month number in current year\n     * */\n    public selectedMonths: number[] = [];\n\n    /**\n     * Callback to invoke when a new month is selected\n     * */\n    @Output()\n    readonly change = new EventEmitter<T>();\n\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * */\n    @Output()\n    readonly monthSelected = new EventEmitter<T>();\n\n    /** Emits when any date is activated. */\n    @Output()\n    readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\n\n    /** Emits when use keyboard enter to select a calendar cell */\n    @Output()\n    readonly keyboardEnter: EventEmitter<any> = new EventEmitter<any>();\n\n    /** The body of calendar table */\n    @ViewChild(OwlCalendarBodyComponent, { static: true })\n    calendarBodyElm: OwlCalendarBodyComponent;\n\n    get owlDTCalendarView(): boolean {\n        return true;\n    }\n\n    constructor(\n        private cdRef: ChangeDetectorRef,\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\n        @Optional()\n        @Inject(OWL_DATE_TIME_FORMATS)\n        private dateTimeFormats: OwlDateTimeFormats\n    ) {\n        this.monthNames = this.dateTimeAdapter.getMonthNames('short');\n    }\n\n    public ngOnInit() {\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\n            this.generateMonthList();\n            this.cdRef.markForCheck();\n        });\n    }\n\n    public ngAfterContentInit(): void {\n        this.generateMonthList();\n        this.initiated = true;\n    }\n\n    public ngOnDestroy(): void {\n        this.localeSub.unsubscribe();\n    }\n\n    /**\n     * Handle a calendarCell selected\n     */\n    public selectCalendarCell(cell: CalendarCell): void {\n        this.selectMonth(cell.value);\n    }\n\n    /**\n     * Handle a new month selected\n     */\n    private selectMonth(month: number): void {\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\n            this.dateTimeAdapter.getYear(this.pickerMoment),\n            month,\n            1\n        );\n\n        this.monthSelected.emit(firstDateOfMonth);\n\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(\n            firstDateOfMonth\n        );\n        const result = this.dateTimeAdapter.createDate(\n            this.dateTimeAdapter.getYear(this.pickerMoment),\n            month,\n            Math.min(\n                daysInMonth,\n                this.dateTimeAdapter.getDate(this.pickerMoment)\n            ),\n            this.dateTimeAdapter.getHours(this.pickerMoment),\n            this.dateTimeAdapter.getMinutes(this.pickerMoment),\n            this.dateTimeAdapter.getSeconds(this.pickerMoment)\n        );\n\n        this.change.emit(result);\n    }\n\n    /**\n     * Handle keydown event on calendar body\n     */\n    public handleCalendarKeydown(event: KeyboardEvent): void {\n        let moment;\n        switch (event.keyCode) {\n            // minus 1 month\n            case LEFT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(\n                    this.pickerMoment,\n                    -1\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 1 month\n            case RIGHT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(\n                    this.pickerMoment,\n                    1\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // minus 3 months\n            case UP_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(\n                    this.pickerMoment,\n                    -3\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 3 months\n            case DOWN_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(\n                    this.pickerMoment,\n                    3\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // move to first month of current year\n            case HOME:\n                moment = this.dateTimeAdapter.addCalendarMonths(\n                    this.pickerMoment,\n                    -this.dateTimeAdapter.getMonth(this.pickerMoment)\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // move to last month of current year\n            case END:\n                moment = this.dateTimeAdapter.addCalendarMonths(\n                    this.pickerMoment,\n                    11 - this.dateTimeAdapter.getMonth(this.pickerMoment)\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // minus 1 year (or 10 year)\n            case PAGE_UP:\n                moment = this.dateTimeAdapter.addCalendarYears(\n                    this.pickerMoment,\n                    event.altKey ? -10 : -1\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 1 year (or 10 year)\n            case PAGE_DOWN:\n                moment = this.dateTimeAdapter.addCalendarYears(\n                    this.pickerMoment,\n                    event.altKey ? 10 : 1\n                );\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // Select current month\n            case ENTER:\n                this.selectMonth(\n                    this.dateTimeAdapter.getMonth(this.pickerMoment)\n                );\n                this.keyboardEnter.emit();\n                break;\n            default:\n                return;\n        }\n\n        this.focusActiveCell();\n        event.preventDefault();\n    }\n\n    /**\n     * Generate the calendar month list\n     * */\n    private generateMonthList(): void {\n        if (!this.pickerMoment) {\n            return;\n        }\n\n        this.setSelectedMonths();\n        this.todayMonth = this.getMonthInCurrentYear(\n            this.dateTimeAdapter.now()\n        );\n\n        this._months = [];\n        for (let i = 0; i < MONTHS_PER_YEAR / MONTHS_PER_ROW; i++) {\n            const row = [];\n\n            for (let j = 0; j < MONTHS_PER_ROW; j++) {\n                const month = j + i * MONTHS_PER_ROW;\n                const monthCell = this.createMonthCell(month);\n                row.push(monthCell);\n            }\n\n            this._months.push(row);\n        }\n\n        return;\n    }\n\n    /**\n     * Creates an CalendarCell for the given month.\n     */\n    private createMonthCell(month: number): CalendarCell {\n        const startDateOfMonth = this.dateTimeAdapter.createDate(\n            this.dateTimeAdapter.getYear(this.pickerMoment),\n            month,\n            1\n        );\n        const ariaLabel = this.dateTimeAdapter.format(\n            startDateOfMonth,\n            this.dateTimeFormats.monthYearA11yLabel\n        );\n        const cellClass = 'owl-dt-month-' + month;\n        return new CalendarCell(\n            month,\n            this.monthNames[month],\n            ariaLabel,\n            this.isMonthEnabled(month),\n            false,\n            cellClass\n        );\n    }\n\n    /**\n     * Check if the given month is enable\n     */\n    private isMonthEnabled(month: number): boolean {\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\n            this.dateTimeAdapter.getYear(this.pickerMoment),\n            month,\n            1\n        );\n\n        // If any date in the month is selectable,\n        // we count the month as enable\n        for (\n            let date = firstDateOfMonth;\n            this.dateTimeAdapter.getMonth(date) === month;\n            date = this.dateTimeAdapter.addCalendarDays(date, 1)\n        ) {\n            if (\n                !!date &&\n                (!this.dateFilter || this.dateFilter(date)) &&\n                (!this.minDate ||\n                    this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\n                (!this.maxDate ||\n                    this.dateTimeAdapter.compare(date, this.maxDate) <= 0)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: T | null): number {\n        if (this.getValidDate(date) && this.getValidDate(this._pickerMoment)) {\n            const result = this.dateTimeAdapter.compareYear(\n                date,\n                this._pickerMoment\n            );\n\n            // < 0 : the given date's year is before pickerMoment's year, we return -1 as selected month value.\n            // > 0 : the given date's year is after pickerMoment's year, we return 12 as selected month value.\n            // 0 : the give date's year is same as the pickerMoment's year, we return the actual month value.\n            if (result < 0) {\n                return -1;\n            } else if (result > 0) {\n                return 12;\n            } else {\n                return this.dateTimeAdapter.getMonth(date);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Set the selectedMonths value\n     * In single mode, it has only one value which represent the month the selected date in\n     * In range mode, it would has two values, one for the month the fromValue in and the other for the month the toValue in\n     * */\n    private setSelectedMonths(): void {\n        this.selectedMonths = [];\n        if (this.isInSingleMode && this.selected) {\n            this.selectedMonths[0] = this.getMonthInCurrentYear(this.selected);\n        }\n\n        if (this.isInRangeMode && this.selecteds) {\n            this.selectedMonths[0] = this.getMonthInCurrentYear(\n                this.selecteds[0]\n            );\n            this.selectedMonths[1] = this.getMonthInCurrentYear(\n                this.selecteds[1]\n            );\n        }\n    }\n\n    /**\n     * Check the given dates are in the same year\n     */\n    private hasSameYear(dateLeft: T, dateRight: T) {\n        return !!(\n            dateLeft &&\n            dateRight &&\n            this.dateTimeAdapter.getYear(dateLeft) ===\n                this.dateTimeAdapter.getYear(dateRight)\n        );\n    }\n\n    /**\n     * Get a valid date object\n     */\n    private getValidDate(obj: any): T | null {\n        return this.dateTimeAdapter.isDateInstance(obj) &&\n            this.dateTimeAdapter.isValid(obj)\n            ? obj\n            : null;\n    }\n\n    private focusActiveCell() {\n        this.calendarBodyElm.focusActiveCell();\n    }\n}\n","/**\n * calendar-multi-year-view.component\n */\n\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Optional,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { SelectMode } from './date-time.class';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW\n} from '@angular/cdk/keycodes';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\n\nexport const YEARS_PER_ROW = 3;\nexport const YEAR_ROWS = 7;\n\n@Component({\n    selector: 'owl-date-time-multi-year-view',\n    templateUrl: './calendar-multi-year-view.component.html',\n    styleUrls: ['./calendar-multi-year-view.component.scss'],\n    host: {\n        '[class.owl-dt-calendar-view]': 'owlDTCalendarView',\n        '[class.owl-dt-calendar-multi-year-view]': 'owlDTCalendarMultiYearView'\n    },\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class OwlMultiYearViewComponent<T> implements OnInit, AfterContentInit {\n\n    /**\n     * The select mode of the picker;\n     * */\n    private _selectMode: SelectMode = 'single';\n    @Input()\n    get selectMode(): SelectMode {\n        return this._selectMode;\n    }\n\n    set selectMode( val: SelectMode ) {\n        this._selectMode = val;\n        if (this.initiated) {\n            this.setSelectedYears();\n            this.cdRef.markForCheck();\n        }\n    }\n\n    /** The currently selected date. */\n    private _selected: T | null;\n    @Input()\n    get selected(): T | null {\n        return this._selected;\n    }\n\n    set selected( value: T | null ) {\n        const oldSelected = this._selected;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._selected = this.getValidDate(value);\n\n        if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\n            this.setSelectedYears();\n        }\n    }\n\n    private _selecteds: T[] = [];\n    @Input()\n    get selecteds(): T[] {\n        return this._selecteds;\n    }\n\n    set selecteds( values: T[] ) {\n        this._selecteds = values.map(( v ) => {\n            v = this.dateTimeAdapter.deserialize(v);\n            return this.getValidDate(v);\n        });\n        this.setSelectedYears();\n    }\n\n    private _pickerMoment: T | null;\n    @Input()\n    get pickerMoment() {\n        return this._pickerMoment;\n    }\n\n    set pickerMoment( value: T ) {\n        const oldMoment = this._pickerMoment;\n        value = this.dateTimeAdapter.deserialize(value);\n        this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n\n        if (oldMoment && this._pickerMoment &&\n            !this.isSameYearList(oldMoment, this._pickerMoment)) {\n            this.generateYearList();\n        }\n    }\n\n    /**\n     * A function used to filter which dates are selectable\n     * */\n    private _dateFilter: ( date: T ) => boolean;\n    @Input()\n    get dateFilter() {\n        return this._dateFilter;\n    }\n\n    set dateFilter( filter: ( date: T ) => boolean ) {\n        this._dateFilter = filter;\n        if (this.initiated) {\n            this.generateYearList();\n        }\n    }\n\n    /** The minimum selectable date. */\n    private _minDate: T | null;\n    @Input()\n    get minDate(): T | null {\n        return this._minDate;\n    }\n\n    set minDate( value: T | null ) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._minDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateYearList();\n        }\n    }\n\n    /** The maximum selectable date. */\n    private _maxDate: T | null;\n    @Input()\n    get maxDate(): T | null {\n        return this._maxDate;\n    }\n\n    set maxDate( value: T | null ) {\n        value = this.dateTimeAdapter.deserialize(value);\n        this._maxDate = this.getValidDate(value);\n        if (this.initiated) {\n            this.generateYearList();\n        }\n    }\n\n    private _todayYear: number;\n    get todayYear(): number {\n        return this._todayYear;\n    }\n\n    private _years: CalendarCell[][];\n    get years() {\n        return this._years;\n    }\n\n    private _selectedYears: number[];\n    get selectedYears(): number[] {\n        return this._selectedYears;\n    }\n\n    private initiated = false;\n\n    get isInSingleMode(): boolean {\n        return this.selectMode === 'single';\n    }\n\n    get isInRangeMode(): boolean {\n        return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\n            || this.selectMode === 'rangeTo';\n    }\n\n    get activeCell(): number {\n        if (this._pickerMoment) {\n            return this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS);\n        }\n    }\n\n    get tableHeader(): string {\n        if (this._years && this._years.length > 0) {\n            return `${this._years[0][0].displayValue} - ${this._years[YEAR_ROWS - 1][YEARS_PER_ROW - 1].displayValue}`;\n        }\n    }\n\n    get prevButtonLabel(): string {\n        return this.pickerIntl.prevMultiYearLabel;\n    }\n\n    get nextButtonLabel(): string {\n        return this.pickerIntl.nextMultiYearLabel;\n    }\n\n    /**\n     * Callback to invoke when a new month is selected\n     * */\n    @Output() readonly change = new EventEmitter<T>();\n\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * */\n    @Output() readonly yearSelected = new EventEmitter<T>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\n\n    /** Emits when use keyboard enter to select a calendar cell */\n    @Output() readonly keyboardEnter: EventEmitter<any> = new EventEmitter<any>();\n\n    /** The body of calendar table */\n    @ViewChild(OwlCalendarBodyComponent, { static: true }) calendarBodyElm: OwlCalendarBodyComponent;\n\n    get owlDTCalendarView(): boolean {\n        return true;\n    }\n\n    get owlDTCalendarMultiYearView(): boolean {\n        return true;\n    }\n\n    constructor( private cdRef: ChangeDetectorRef,\n                 private pickerIntl: OwlDateTimeIntl,\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T> ) {\n    }\n\n    public ngOnInit() {\n    }\n\n    public ngAfterContentInit(): void {\n        this._todayYear = this.dateTimeAdapter.getYear(this.dateTimeAdapter.now());\n        this.generateYearList();\n        this.initiated = true;\n    }\n\n    /**\n     * Handle a calendarCell selected\n     */\n    public selectCalendarCell( cell: CalendarCell ): void {\n        this.selectYear(cell.value);\n    }\n\n    private selectYear( year: number ): void {\n        this.yearSelected.emit(this.dateTimeAdapter.createDate(year, 0, 1));\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\n            year,\n            this.dateTimeAdapter.getMonth(this.pickerMoment),\n            1\n        );\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\n        const selected = this.dateTimeAdapter.createDate(\n            year,\n            this.dateTimeAdapter.getMonth(this.pickerMoment),\n            Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)),\n            this.dateTimeAdapter.getHours(this.pickerMoment),\n            this.dateTimeAdapter.getMinutes(this.pickerMoment),\n            this.dateTimeAdapter.getSeconds(this.pickerMoment),\n        );\n\n        this.change.emit(selected);\n    }\n\n    /**\n     * Generate the previous year list\n     * */\n    public prevYearList( event: any ): void {\n        this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1 * YEAR_ROWS * YEARS_PER_ROW);\n        this.generateYearList();\n        event.preventDefault();\n    }\n\n    /**\n     * Generate the next year list\n     * */\n    public nextYearList( event: any ): void {\n        this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, YEAR_ROWS * YEARS_PER_ROW);\n        this.generateYearList();\n        event.preventDefault();\n    }\n\n    public generateYearList(): void {\n        this._years = [];\n\n        const pickerMomentYear = this.dateTimeAdapter.getYear(this._pickerMoment);\n        const offset = pickerMomentYear % (YEARS_PER_ROW * YEAR_ROWS);\n\n        for (let i = 0; i < YEAR_ROWS; i++) {\n            const row = [];\n\n            for (let j = 0; j < YEARS_PER_ROW; j++) {\n                const year = pickerMomentYear - offset + (j + i * YEARS_PER_ROW);\n                const yearCell = this.createYearCell(year);\n                row.push(yearCell);\n            }\n\n            this._years.push(row);\n        }\n\n        return;\n\n    }\n\n    /** Whether the previous period button is enabled. */\n    public previousEnabled(): boolean {\n        if (!this.minDate) {\n            return true;\n        }\n        return !this.minDate || !this.isSameYearList(this._pickerMoment, this.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    public nextEnabled(): boolean {\n        return !this.maxDate || !this.isSameYearList(this._pickerMoment, this.maxDate);\n    }\n\n    public handleCalendarKeydown( event: KeyboardEvent ): void {\n        let moment;\n        switch (event.keyCode) {\n            // minus 1 year\n            case LEFT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 1 year\n            case RIGHT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // minus 3 years\n            case UP_ARROW:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1 * YEARS_PER_ROW);\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 3 years\n            case DOWN_ARROW:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, YEARS_PER_ROW);\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // go to the first year of the year page\n            case HOME:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment,\n                    -this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS));\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // go to the last year of the year page\n            case END:\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment,\n                    (YEARS_PER_ROW * YEAR_ROWS) - this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS) - 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // minus 1 year page (or 10 year pages)\n            case PAGE_UP:\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 * (YEARS_PER_ROW * YEAR_ROWS) : -1 * (YEARS_PER_ROW * YEAR_ROWS));\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            // add 1 year page (or 10 year pages)\n            case PAGE_DOWN:\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 * (YEARS_PER_ROW * YEAR_ROWS) : (YEARS_PER_ROW * YEAR_ROWS));\n                this.pickerMomentChange.emit(moment);\n                break;\n\n            case ENTER:\n                this.selectYear(this.dateTimeAdapter.getYear(this._pickerMoment));\n                this.keyboardEnter.emit();\n                break;\n\n            default:\n                return;\n        }\n\n        this.focusActiveCell();\n        event.preventDefault();\n    }\n\n    /**\n     * Creates an CalendarCell for the given year.\n     */\n    private createYearCell( year: number ): CalendarCell {\n        const startDateOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\n        const ariaLabel = this.dateTimeAdapter.getYearName(startDateOfYear);\n        const cellClass = 'owl-dt-year-' + year;\n        return new CalendarCell(year, year.toString(), ariaLabel, this.isYearEnabled(year), false, cellClass);\n    }\n\n    private setSelectedYears(): void {\n\n        this._selectedYears = [];\n\n        if (this.isInSingleMode && this.selected) {\n            this._selectedYears[0] = this.dateTimeAdapter.getYear(this.selected);\n        }\n\n        if (this.isInRangeMode && this.selecteds) {\n            this._selectedYears = this.selecteds.map(( selected ) => {\n                if (this.dateTimeAdapter.isValid(selected)) {\n                    return this.dateTimeAdapter.getYear(selected);\n                } else {\n                    return null;\n                }\n            });\n        }\n    }\n\n    /** Whether the given year is enabled. */\n    private isYearEnabled( year: number ) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateTimeAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateTimeAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateTimeAdapter.getYear(date) === year;\n             date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private isSameYearList( date1: T, date2: T ): boolean {\n        return Math.floor(this.dateTimeAdapter.getYear(date1) / (YEARS_PER_ROW * YEAR_ROWS)) ===\n            Math.floor(this.dateTimeAdapter.getYear(date2) / (YEARS_PER_ROW * YEAR_ROWS));\n    }\n\n    /**\n     * Get a valid date object\n     */\n    private getValidDate( obj: any ): T | null {\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\n    }\n\n    private focusActiveCell() {\n        this.calendarBodyElm.focusActiveCell();\n    }\n}\n","/**\n * timer-box.component\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    ElementRef,\n    ViewChild,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n    exportAs: 'owlDateTimeTimerBox',\n    selector: 'owl-date-time-timer-box',\n    templateUrl: './timer-box.component.html',\n    styleUrls: ['./timer-box.component.scss'],\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class.owl-dt-timer-box]': 'owlDTTimerBoxClass'\n    }\n})\n\nexport class OwlTimerBoxComponent implements OnInit, OnDestroy {\n\n    @Input() showDivider = false;\n\n    @Input() upBtnAriaLabel: string;\n\n    @Input() upBtnDisabled: boolean;\n\n    @Input() downBtnAriaLabel: string;\n\n    @Input() downBtnDisabled: boolean;\n\n    /**\n     * Value would be displayed in the box\n     * If it is null, the box would display [value]\n     * */\n    @Input() boxValue: number;\n\n    @Input() value: number;\n\n    @Input() min: number;\n\n    @Input() max: number;\n\n    @Input() step = 1;\n\n    @Input() inputLabel: string;\n\n    @Output() valueChange = new EventEmitter<number>();\n\n    @Output() inputChange = new EventEmitter<number>();\n\n    private inputStream = new Subject<string>();\n\n    private inputStreamSub = Subscription.EMPTY;\n\n    get displayValue(): number {\n        return this.boxValue || this.value;\n    }\n\n    get owlDTTimerBoxClass(): boolean {\n        return true;\n    }\n\n    @ViewChild('valueInput', { static: true })\n    private valueInput: ElementRef;\n    private onValueInputMouseWheelBind = this.onValueInputMouseWheel.bind(this);\n\n    constructor() {\n    }\n\n    public ngOnInit() {\n        this.inputStreamSub = this.inputStream.pipe(\n            debounceTime(500),\n            distinctUntilChanged()\n        ).subscribe(( val: string ) => {\n            if (val) {\n                const inputValue = coerceNumberProperty(val, 0);\n                this.updateValueViaInput(inputValue);\n            }\n        });\n        this.bindValueInputMouseWheel();\n    }\n\n    public ngOnDestroy(): void {\n        this.unbindValueInputMouseWheel();\n        this.inputStreamSub.unsubscribe();\n    }\n\n    public upBtnClicked(): void {\n        this.updateValue(this.value + this.step);\n    }\n\n    public downBtnClicked(): void {\n        this.updateValue(this.value - this.step);\n    }\n\n    public handleInputChange(val: string ): void {\n        this.inputStream.next(val);\n    }\n\n    public focusOut(value: string): void {\n        if (value) {\n            const inputValue = coerceNumberProperty(value, 0);\n            this.updateValueViaInput(inputValue);\n        }\n    }\n\n    private updateValue( value: number ): void {\n        this.valueChange.emit(value);\n    }\n\n    private updateValueViaInput( value: number ): void {\n        if (value > this.max || value < this.min) {\n            return;\n        }\n        this.inputChange.emit(value);\n    }\n\n    private onValueInputMouseWheel( event: any ): void {\n        event = event || window.event;\n        const delta = event.wheelDelta || -event.deltaY || -event.detail;\n\n        if (delta > 0) {\n          if (!this.upBtnDisabled) {\n            this.upBtnClicked();\n          }\n        } else if (delta < 0) {\n          if (!this.downBtnDisabled) {\n            this.downBtnClicked();\n          }\n        }\n\n        event.preventDefault ? event.preventDefault() : (event.returnValue = false);\n    }\n\n    private bindValueInputMouseWheel(): void {\n        this.valueInput.nativeElement.addEventListener(\n            'onwheel' in document ? 'wheel' : 'mousewheel',\n            this.onValueInputMouseWheelBind);\n    }\n\n    private unbindValueInputMouseWheel(): void {\n        this.valueInput.nativeElement.removeEventListener(\n            'onwheel' in document ? 'wheel' : 'mousewheel',\n            this.onValueInputMouseWheelBind);\n    }\n}\n","/**\n * numberFixedLen.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'numberFixedLen'\n})\nexport class NumberFixedLenPipe implements PipeTransform {\n    transform( num: number, len: number ): any {\n        const number = Math.floor(num);\n        const length = Math.floor(len);\n\n        if (num === null || isNaN(number) || isNaN(length)) {\n            return num;\n        }\n\n        let numString = number.toString();\n\n        while (numString.length < length) {\n            numString = '0' + numString;\n        }\n\n        return numString;\n    }\n}\n","/**\n * date-time-inline.component\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnInit,\n    Optional,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    OwlDateTime,\n    PickerMode,\n    PickerType,\n    SelectMode\n} from './date-time.class';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport {\n    OWL_DATE_TIME_FORMATS,\n    OwlDateTimeFormats\n} from './adapter/date-time-format.class';\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\n\nexport const OWL_DATETIME_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OwlDateTimeInlineComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'owl-date-time-inline',\n    templateUrl: './date-time-inline.component.html',\n    styleUrls: ['./date-time-inline.component.scss'],\n    host: {\n        '[class.owl-dt-inline]': 'owlDTInlineClass'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false,\n    providers: [OWL_DATETIME_VALUE_ACCESSOR]\n})\nexport class OwlDateTimeInlineComponent<T> extends OwlDateTime<T>\n    implements OnInit, ControlValueAccessor {\n    @ViewChild(OwlDateTimeContainerComponent, { static: true })\n    container: OwlDateTimeContainerComponent<T>;\n\n    /**\n     * Set the type of the dateTime picker\n     *      'both' -- show both calendar and timer\n     *      'calendar' -- show only calendar\n     *      'timer' -- show only timer\n     */\n    private _pickerType: PickerType = 'both';\n    @Input()\n    get pickerType(): PickerType {\n        return this._pickerType;\n    }\n\n    set pickerType(val: PickerType) {\n        if (val !== this._pickerType) {\n            this._pickerType = val;\n        }\n    }\n\n    private _disabled = false;\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _selectMode: SelectMode = 'single';\n    @Input()\n    get selectMode() {\n        return this._selectMode;\n    }\n\n    set selectMode(mode: SelectMode) {\n        if (\n            mode !== 'single' &&\n            mode !== 'range' &&\n            mode !== 'rangeFrom' &&\n            mode !== 'rangeTo'\n        ) {\n            throw Error('OwlDateTime Error: invalid selectMode value!');\n        }\n\n        this._selectMode = mode;\n    }\n\n    /** The date to open the calendar to initially. */\n    private _startAt: T | null;\n    @Input()\n    get startAt(): T | null {\n        if (this._startAt) {\n            return this._startAt;\n        }\n\n        if (this.selectMode === 'single') {\n            return this.value || null;\n        } else if (\n            this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom'\n        ) {\n            return this.values[0] || null;\n        } else if (this.selectMode === 'rangeTo') {\n            return this.values[1] || null;\n        } else {\n            return null;\n        }\n    }\n\n    set startAt(date: T | null) {\n        this._startAt = this.getValidDate(\n            this.dateTimeAdapter.deserialize(date)\n        );\n    }\n\n    /** The date to open for range calendar. */\n    private _endAt: T | null;\n    @Input()\n    get endAt(): T | null {\n        if (this._endAt) {\n            return this._endAt;\n        }\n\n        if (this.selectMode === 'single') {\n            return this.value || null;\n        } else if (\n            this.selectMode === 'range' ||\n            this.selectMode === 'rangeFrom'\n        ) {\n            return this.values[1] || null;\n        } else {\n            return null;\n        }\n    }\n\n    set endAt(date: T | null) {\n        this._endAt = this.getValidDate(\n            this.dateTimeAdapter.deserialize(date)\n        );\n    }\n\n    private _dateTimeFilter: (date: T | null) => boolean;\n    @Input('owlDateTimeFilter')\n    get dateTimeFilter() {\n        return this._dateTimeFilter;\n    }\n\n    set dateTimeFilter(filter: (date: T | null) => boolean) {\n        this._dateTimeFilter = filter;\n    }\n\n    /** The minimum valid date. */\n    private _min: T | null;\n\n    get minDateTime(): T | null {\n        return this._min || null;\n    }\n\n    @Input('min')\n    set minDateTime(value: T | null) {\n        this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n        this.changeDetector.markForCheck();\n    }\n\n    /** The maximum valid date. */\n    private _max: T | null;\n\n    get maxDateTime(): T | null {\n        return this._max || null;\n    }\n\n    @Input('max')\n    set maxDateTime(value: T | null) {\n        this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\n        this.changeDetector.markForCheck();\n    }\n\n    private _value: T | null;\n    @Input()\n    get value() {\n        return this._value;\n    }\n\n    set value(value: T | null) {\n        value = this.dateTimeAdapter.deserialize(value);\n        value = this.getValidDate(value);\n        this._value = value;\n        this.selected = value;\n    }\n\n    private _values: T[] = [];\n    @Input()\n    get values() {\n        return this._values;\n    }\n\n    set values(values: T[]) {\n        if (values && values.length > 0) {\n            values = values.map(v => {\n                v = this.dateTimeAdapter.deserialize(v);\n                v = this.getValidDate(v);\n                return v ? this.dateTimeAdapter.clone(v) : null;\n            });\n            this._values = [...values];\n            this.selecteds = [...values];\n        } else {\n            this._values = [];\n            this.selecteds = [];\n        }\n    }\n\n    /**\n     * Emits selected year in multi-year view\n     * This doesn't imply a change on the selected date.\n     * */\n    @Output()\n    yearSelected = new EventEmitter<T>();\n\n    /**\n     * Emits selected month in year view\n     * This doesn't imply a change on the selected date.\n     * */\n    @Output()\n    monthSelected = new EventEmitter<T>();\n\n    private _selected: T | null;\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(value: T | null) {\n        this._selected = value;\n        this.changeDetector.markForCheck();\n    }\n\n    private _selecteds: T[] = [];\n    get selecteds() {\n        return this._selecteds;\n    }\n\n    set selecteds(values: T[]) {\n        this._selecteds = values;\n        this.changeDetector.markForCheck();\n    }\n\n    get opened(): boolean {\n        return true;\n    }\n\n    get pickerMode(): PickerMode {\n        return 'inline';\n    }\n\n    get isInSingleMode(): boolean {\n        return this._selectMode === 'single';\n    }\n\n    get isInRangeMode(): boolean {\n        return (\n            this._selectMode === 'range' ||\n            this._selectMode === 'rangeFrom' ||\n            this._selectMode === 'rangeTo'\n        );\n    }\n\n    get owlDTInlineClass(): boolean {\n        return true;\n    }\n\n    private onModelChange: Function = () => { };\n    private onModelTouched: Function = () => { };\n\n    constructor(\n        protected changeDetector: ChangeDetectorRef,\n        @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\n        @Optional()\n        @Inject(OWL_DATE_TIME_FORMATS)\n        protected dateTimeFormats: OwlDateTimeFormats\n    ) {\n        super(dateTimeAdapter, dateTimeFormats);\n    }\n\n    public ngOnInit() {\n        this.container.picker = this;\n    }\n\n    public writeValue(value: any): void {\n        if (this.isInSingleMode) {\n            this.value = value;\n            this.container.pickerMoment = value;\n        } else {\n            this.values = value;\n            this.container.pickerMoment = this._values[\n                this.container.activeSelectedIndex\n            ];\n        }\n    }\n\n    public registerOnChange(fn: any): void {\n        this.onModelChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n        this.onModelTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    public select(date: T[] | T): void {\n        if (this.disabled) {\n            return;\n        }\n\n        if (Array.isArray(date)) {\n            this.values = [...date];\n        } else {\n            this.value = date;\n        }\n        this.onModelChange(date);\n        this.onModelTouched();\n    }\n\n    /**\n     * Emits the selected year in multi-year view\n     * */\n    public selectYear(normalizedYear: T): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /**\n     * Emits selected month in year view\n     * */\n    public selectMonth(normalizedMonth: T): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n}\n","/**\n * dialog.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OWL_DIALOG_SCROLL_STRATEGY_PROVIDER, OwlDialogService } from './dialog.service';\nimport { OwlDialogContainerComponent } from './dialog-container.component';\n\n@NgModule({\n    imports: [CommonModule, A11yModule, OverlayModule, PortalModule],\n    exports: [],\n    declarations: [\n        OwlDialogContainerComponent,\n    ],\n    providers: [\n        OWL_DIALOG_SCROLL_STRATEGY_PROVIDER,\n        OwlDialogService,\n    ],\n    entryComponents: [\n        OwlDialogContainerComponent,\n    ]\n})\nexport class OwlDialogModule {\n}\n","/**\n * date-time.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { OwlDateTimeTriggerDirective } from './date-time-picker-trigger.directive';\nimport { OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER, OwlDateTimeComponent } from './date-time-picker.component';\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\nimport { OwlDateTimeInputDirective } from './date-time-picker-input.directive';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { OwlMonthViewComponent } from './calendar-month-view.component';\nimport { OwlCalendarBodyComponent } from './calendar-body.component';\nimport { OwlYearViewComponent } from './calendar-year-view.component';\nimport { OwlMultiYearViewComponent } from './calendar-multi-year-view.component';\nimport { OwlTimerBoxComponent } from './timer-box.component';\nimport { OwlTimerComponent } from './timer.component';\nimport { NumberFixedLenPipe } from './numberedfixlen.pipe';\nimport { OwlCalendarComponent } from './calendar.component';\nimport { OwlDateTimeInlineComponent } from './date-time-inline.component';\nimport { OwlDialogModule } from '../dialog/dialog.module';\n\n@NgModule({\n    imports: [CommonModule, OverlayModule, OwlDialogModule, A11yModule],\n    exports: [\n        OwlCalendarComponent,\n        OwlTimerComponent,\n        OwlDateTimeTriggerDirective,\n        OwlDateTimeInputDirective,\n        OwlDateTimeComponent,\n        OwlDateTimeInlineComponent,\n        OwlMultiYearViewComponent,\n        OwlYearViewComponent,\n        OwlMonthViewComponent,\n    ],\n    declarations: [\n        OwlDateTimeTriggerDirective,\n        OwlDateTimeInputDirective,\n        OwlDateTimeComponent,\n        OwlDateTimeContainerComponent,\n        OwlMultiYearViewComponent,\n        OwlYearViewComponent,\n        OwlMonthViewComponent,\n        OwlTimerComponent,\n        OwlTimerBoxComponent,\n        OwlCalendarComponent,\n        OwlCalendarBodyComponent,\n        NumberFixedLenPipe,\n        OwlDateTimeInlineComponent,\n    ],\n    providers: [\n        OwlDateTimeIntl,\n        OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER,\n    ],\n    entryComponents: [\n        OwlDateTimeContainerComponent,\n    ]\n})\nexport class OwlDateTimeModule {\n}\n","/**\n * native-date-time-adapter.class\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport {\n    DateTimeAdapter,\n    OWL_DATE_TIME_LOCALE\n} from './date-time-adapter.class';\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    long: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    short: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n    ],\n    narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    long: [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:[+\\-]\\d{2}:\\d{2}))?)?$/;\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n\n@Injectable()\nexport class NativeDateTimeAdapter extends DateTimeAdapter<Date> {\n    /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n    private readonly _clampDate: boolean;\n\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     */\n    useUtcForDisplay: boolean;\n\n    constructor(\n        @Optional()\n        @Inject(OWL_DATE_TIME_LOCALE)\n        private owlDateTimeLocale: string,\n        platform: Platform\n    ) {\n        super();\n        super.setLocale(owlDateTimeLocale);\n\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n\n    public getYear(date: Date): number {\n        return date.getFullYear();\n    }\n\n    public getMonth(date: Date): number {\n        return date.getMonth();\n    }\n\n    public getDay(date: Date): number {\n        return date.getDay();\n    }\n\n    public getDate(date: Date): number {\n        return date.getDate();\n    }\n\n    public getHours(date: Date): number {\n        return date.getHours();\n    }\n\n    public getMinutes(date: Date): number {\n        return date.getMinutes();\n    }\n\n    public getSeconds(date: Date): number {\n        return date.getSeconds();\n    }\n\n    public getTime(date: Date): number {\n        return date.getTime();\n    }\n\n    public getNumDaysInMonth(date: Date): number {\n        const lastDateOfMonth = this.createDateWithOverflow(\n            this.getYear(date),\n            this.getMonth(date) + 1,\n            0\n        );\n\n        return this.getDate(lastDateOfMonth);\n    }\n\n    public differenceInCalendarDays(dateLeft: Date, dateRight: Date): number {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            const dateLeftStartOfDay = this.createDate(\n                this.getYear(dateLeft),\n                this.getMonth(dateLeft),\n                this.getDate(dateLeft)\n            );\n            const dateRightStartOfDay = this.createDate(\n                this.getYear(dateRight),\n                this.getMonth(dateRight),\n                this.getDate(dateRight)\n            );\n\n            const timeStampLeft =\n                this.getTime(dateLeftStartOfDay) -\n                dateLeftStartOfDay.getTimezoneOffset() *\n                    this.milliseondsInMinute;\n            const timeStampRight =\n                this.getTime(dateRightStartOfDay) -\n                dateRightStartOfDay.getTimezoneOffset() *\n                    this.milliseondsInMinute;\n            return Math.round(\n                (timeStampLeft - timeStampRight) / this.millisecondsInDay\n            );\n        } else {\n            return null;\n        }\n    }\n\n    public getYearName(date: Date): string {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), {\n                year: 'numeric',\n                timeZone: 'utc'\n            });\n            return this.stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n\n    public getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), {\n                month: style,\n                timeZone: 'utc'\n            });\n            return range(12, i =>\n                this.stripDirectionalityCharacters(\n                    this._format(dtf, new Date(2017, i, 1))\n                )\n            );\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n\n    public getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), {\n                weekday: style,\n                timeZone: 'utc'\n            });\n            return range(7, i =>\n                this.stripDirectionalityCharacters(\n                    this._format(dtf, new Date(2017, 0, i + 1))\n                )\n            );\n        }\n\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n\n    public getDateNames(): string[] {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), {\n                day: 'numeric',\n                timeZone: 'utc'\n            });\n            return range(31, i =>\n                this.stripDirectionalityCharacters(\n                    this._format(dtf, new Date(2017, 0, i + 1))\n                )\n            );\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n\n    public toIso8601(date: Date): string {\n        return date.toISOString();\n    }\n\n    public isEqual(dateLeft: Date, dateRight: Date): boolean {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            return dateLeft.getTime() === dateRight.getTime();\n        } else {\n            return false;\n        }\n    }\n\n    public isSameDay(dateLeft: Date, dateRight: Date): boolean {\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\n            const dateLeftStartOfDay = this.clone(dateLeft);\n            const dateRightStartOfDay = this.clone(dateRight);\n            dateLeftStartOfDay.setHours(0, 0, 0, 0);\n            dateRightStartOfDay.setHours(0, 0, 0, 0);\n            return (\n                dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\n            );\n        } else {\n            return false;\n        }\n    }\n\n    public isValid(date: Date): boolean {\n        return date && !isNaN(date.getTime());\n    }\n\n    public invalid(): Date {\n        return new Date(NaN);\n    }\n\n    public isDateInstance(obj: any): boolean {\n        return obj instanceof Date;\n    }\n\n    public addCalendarYears(date: Date, amount: number): Date {\n        return this.addCalendarMonths(date, amount * 12);\n    }\n\n    public addCalendarMonths(date: Date, amount: number): Date {\n        const result = this.clone(date);\n        amount = Number(amount);\n\n        const desiredMonth = result.getMonth() + amount;\n        const dateWithDesiredMonth = new Date(0);\n        dateWithDesiredMonth.setFullYear(result.getFullYear(), desiredMonth, 1);\n        dateWithDesiredMonth.setHours(0, 0, 0, 0);\n\n        const daysInMonth = this.getNumDaysInMonth(dateWithDesiredMonth);\n        // Set the last day of the new month\n        // if the original date was the last day of the longer month\n        result.setMonth(desiredMonth, Math.min(daysInMonth, result.getDate()));\n        return result;\n    }\n\n    public addCalendarDays(date: Date, amount: number): Date {\n        const result = this.clone(date);\n        amount = Number(amount);\n        result.setDate(result.getDate() + amount);\n        return result;\n    }\n\n    public setHours(date: Date, amount: number): Date {\n        const result = this.clone(date);\n        result.setHours(amount);\n        return result;\n    }\n\n    public setMinutes(date: Date, amount: number): Date {\n        const result = this.clone(date);\n        result.setMinutes(amount);\n        return result;\n    }\n\n    public setSeconds(date: Date, amount: number): Date {\n        const result = this.clone(date);\n        result.setSeconds(amount);\n        return result;\n    }\n\n    public createDate(\n        year: number,\n        month: number,\n        date: number,\n        hours: number = 0,\n        minutes: number = 0,\n        seconds: number = 0\n    ): Date {\n        if (month < 0 || month > 11) {\n            throw Error(\n                `Invalid month index \"${month}\". Month index has to be between 0 and 11.`\n            );\n        }\n\n        if (date < 1) {\n            throw Error(\n                `Invalid date \"${date}\". Date has to be greater than 0.`\n            );\n        }\n\n        if (hours < 0 || hours > 23) {\n            throw Error(\n                `Invalid hours \"${hours}\". Hours has to be between 0 and 23.`\n            );\n        }\n\n        if (minutes < 0 || minutes > 59) {\n            throw Error(\n                `Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`\n            );\n        }\n\n        if (seconds < 0 || seconds > 59) {\n            throw Error(\n                `Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`\n            );\n        }\n\n        const result = this.createDateWithOverflow(\n            year,\n            month,\n            date,\n            hours,\n            minutes,\n            seconds\n        );\n\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        // For example, createDate(2017, 1, 31) would try to create a date 2017/02/31 which is invalid\n        if (result.getMonth() !== month) {\n            throw Error(\n                `Invalid date \"${date}\" for month with index \"${month}\".`\n            );\n        }\n\n        return result;\n    }\n\n    public clone(date: Date): Date {\n        return this.createDate(\n            this.getYear(date),\n            this.getMonth(date),\n            this.getDate(date),\n            this.getHours(date),\n            this.getMinutes(date),\n            this.getSeconds(date)\n        );\n    }\n\n    public now(): Date {\n        return new Date();\n    }\n\n    public format(date: Date, displayFormat: any): string {\n        if (!this.isValid(date)) {\n            throw Error('JSNativeDate: Cannot format invalid date.');\n        }\n\n        if (SUPPORTS_INTL_API) {\n            if (\n                this._clampDate &&\n                (date.getFullYear() < 1 || date.getFullYear() > 9999)\n            ) {\n                date = this.clone(date);\n                date.setFullYear(\n                    Math.max(1, Math.min(9999, date.getFullYear()))\n                );\n            }\n\n            displayFormat = { ...displayFormat, timeZone: 'utc' };\n            const dtf = new Intl.DateTimeFormat(this.getLocale(), displayFormat);\n            return this.stripDirectionalityCharacters(this._format(dtf, date));\n        }\n\n        return this.stripDirectionalityCharacters(date.toDateString());\n    }\n\n    public parse(value: any, parseFormat: any): Date | null {\n        // There is no way using the native JS Date to set the parse format or locale\n        if (typeof value === 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    public deserialize(value: any): Date | null {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                const date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n\n    /**\n     * Creates a date but allows the month and date to overflow.\n     */\n    private createDateWithOverflow(\n        year: number,\n        month: number,\n        date: number,\n        hours: number = 0,\n        minutes: number = 0,\n        seconds: number = 0\n    ): Date {\n        const result = new Date(year, month, date, hours, minutes, seconds);\n\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     */\n    private stripDirectionalityCharacters(str: string) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     */\n    private _format(dtf: Intl.DateTimeFormat, date: Date) {\n        const d = new Date(\n            Date.UTC(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds(),\n                date.getMilliseconds()\n            )\n        );\n        return dtf.format(d);\n    }\n}\n","/**\n * native-date-time-format.class\n */\nimport { OwlDateTimeFormats } from './date-time-format.class';\n\nexport const OWL_NATIVE_DATE_TIME_FORMATS: OwlDateTimeFormats = {\n    parseInput: null,\n    fullPickerInput: {year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric'},\n    datePickerInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    timePickerInput: {hour: 'numeric', minute: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n};\n","/**\n * native-date-time.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { DateTimeAdapter } from './date-time-adapter.class';\nimport { NativeDateTimeAdapter } from './native-date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from './date-time-format.class';\nimport { OWL_NATIVE_DATE_TIME_FORMATS } from './native-date-time-format.class';\n\n@NgModule({\n    imports: [PlatformModule],\n    providers: [\n        {provide: DateTimeAdapter, useClass: NativeDateTimeAdapter},\n    ],\n})\nexport class NativeDateTimeModule {\n}\n\n@NgModule({\n    imports: [NativeDateTimeModule],\n    providers: [{provide: OWL_DATE_TIME_FORMATS, useValue: OWL_NATIVE_DATE_TIME_FORMATS}],\n})\nexport class OwlNativeDateTimeModule {\n}\n","/**\n * moment-date-time-adapter.class\n */\n\nimport { Inject, Injectable, Optional, InjectionToken } from '@angular/core';\nimport * as _moment from 'moment';\nimport { Moment } from 'moment';\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from '../date-time-adapter.class';\n\nconst moment = (_moment as any).default ? (_moment as any).default : _moment;\n\n/** Configurable options for {@see MomentDateAdapter}. */\nexport interface OwlMomentDateTimeAdapterOptions {\n    /**\n     * Turns the use of utc dates on or off.\n     * Changing this will change how the DateTimePicker output value.\n     * {@default false}\n     */\n    useUtc: boolean;\n\n    /**\n     * Turns the use of strict string parsing in moment.\n     * Changing this will change how the DateTimePicker interprets input.\n     * {@default false}\n     */\n    parseStrict: boolean;\n}\n\n/** InjectionToken for moment date adapter to configure options. */\nexport const OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS = new InjectionToken<OwlMomentDateTimeAdapterOptions>(\n    'OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS', {\n        providedIn: 'root',\n        factory: OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY(): OwlMomentDateTimeAdapterOptions {\n    return {\n        useUtc: false,\n        parseStrict: false\n    };\n}\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n\n\n@Injectable()\nexport class MomentDateTimeAdapter extends DateTimeAdapter<Moment> {\n\n    private _localeData: {\n        longMonths: string[],\n        shortMonths: string[],\n        longDaysOfWeek: string[],\n        shortDaysOfWeek: string[],\n        narrowDaysOfWeek: string[],\n        dates: string[],\n    };\n\n    constructor( @Optional() @Inject(OWL_DATE_TIME_LOCALE) private owlDateTimeLocale: string,\n                 @Optional() @Inject(OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS) private options?: OwlMomentDateTimeAdapterOptions ) {\n        super();\n        this.setLocale(owlDateTimeLocale || moment.locale());\n    }\n\n    public setLocale( locale: string ) {\n        super.setLocale(locale);\n\n        const momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n        };\n    }\n\n\n    public getYear( date: Moment ): number {\n        return this.clone(date).year();\n    }\n\n    public getMonth( date: Moment ): number {\n        return this.clone(date).month();\n    }\n\n    public getDay( date: Moment ): number {\n        return this.clone(date).day();\n    }\n\n    public getDate( date: Moment ): number {\n        return this.clone(date).date();\n    }\n\n    public getHours( date: Moment ): number {\n        return this.clone(date).hours();\n    }\n\n    public getMinutes( date: Moment ): number {\n        return this.clone(date).minutes();\n    }\n\n    public getSeconds( date: Moment ): number {\n        return this.clone(date).seconds();\n    }\n\n    public getTime( date: Moment ): number {\n        return this.clone(date).valueOf();\n    }\n\n    public getNumDaysInMonth( date: Moment ): number {\n        return this.clone(date).daysInMonth();\n    }\n\n    public differenceInCalendarDays( dateLeft: Moment, dateRight: Moment ): number {\n        return this.clone(dateLeft).diff(dateRight, 'days');\n    }\n\n    public getYearName( date: Moment ): string {\n        return this.clone(date).format('YYYY');\n    }\n\n    public getMonthNames( style: 'long' | 'short' | 'narrow' ): string[] {\n        return style === 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n\n    public getDayOfWeekNames( style: 'long' | 'short' | 'narrow' ): string[] {\n        if (style === 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style === 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n\n    public getDateNames(): string[] {\n        return this._localeData.dates;\n    }\n\n    public toIso8601( date: Moment ): string {\n        return this.clone(date).format();\n    }\n\n    public isEqual( dateLeft: Moment, dateRight: Moment ): boolean {\n\n        if (dateLeft && dateRight) {\n            return this.clone(dateLeft).isSame(this.clone(dateRight));\n        }\n\n        return dateLeft === dateRight;\n    }\n\n    public isSameDay( dateLeft: Moment, dateRight: Moment ): boolean {\n\n        if (dateLeft && dateRight) {\n            return this.clone(dateLeft).isSame(this.clone(dateRight), 'day');\n        }\n\n        return dateLeft === dateRight;\n    }\n\n    public isValid( date: Moment ): boolean {\n        return this.clone(date).isValid();\n    }\n\n    public invalid(): Moment {\n        return moment.invalid();\n    }\n\n    public isDateInstance( obj: any ): boolean {\n        return moment.isMoment(obj);\n    }\n\n    public addCalendarYears( date: Moment, amount: number ): Moment {\n        return this.clone(date).add({years: amount});\n    }\n\n    public addCalendarMonths( date: Moment, amount: number ): Moment {\n        return this.clone(date).add({months: amount});\n    }\n\n    public addCalendarDays( date: Moment, amount: number ): Moment {\n        return this.clone(date).add({days: amount});\n    }\n\n    public setHours( date: Moment, amount: number ): Moment {\n        return this.clone(date).hours(amount);\n    }\n\n    public setMinutes( date: Moment, amount: number ): Moment {\n        return this.clone(date).minutes(amount);\n    }\n\n    public setSeconds( date: Moment, amount: number ): Moment {\n        return this.clone(date).seconds(amount);\n    }\n\n    public createDate( year: number, month: number, date: number ): Moment;\n    public createDate( year: number, month: number, date: number, hours: number = 0, minutes: number = 0, seconds: number = 0 ): Moment {\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n\n        if (hours < 0 || hours > 23) {\n            throw Error(`Invalid hours \"${hours}\". Hours has to be between 0 and 23.`);\n        }\n\n        if (minutes < 0 || minutes > 59) {\n            throw Error(`Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`);\n        }\n\n        if (seconds < 0 || seconds > 59) {\n            throw Error(`Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`);\n        }\n\n        const result = this.createMoment({year, month, date, hours, minutes, seconds}).locale(this.getLocale());\n\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n\n        return result;\n    }\n\n    public clone( date: Moment ): Moment {\n        return this.createMoment(date).clone().locale(this.getLocale());\n    }\n\n    public now(): Moment {\n        return this.createMoment().locale(this.getLocale());\n    }\n\n    public format( date: Moment, displayFormat: any ): string {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateTimeAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n\n    public parse( value: any, parseFormat: any ): Moment | null {\n        if (value && typeof value === 'string') {\n            return this.createMoment(value, parseFormat, this.getLocale(), this.parseStrict);\n        }\n        return value ? this.createMoment(value).locale(this.getLocale()) : null;\n    }\n\n    get parseStrict() {\n        return this.options && this.options.parseStrict;\n    }\n\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     */\n    deserialize( value: any ): Moment | null {\n        let date;\n        if (value instanceof Date) {\n            date = this.createMoment(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this.createMoment(value, moment.ISO_8601, this.parseStrict).locale(this.getLocale());\n        }\n        if (date && this.isValid(date)) {\n            return date;\n        }\n        return super.deserialize(value);\n    }\n\n    /** Creates a Moment instance while respecting the current UTC settings. */\n    private createMoment(...args: any[]): Moment {\n        return (this.options && this.options.useUtc) ? moment.utc(...args) : moment(...args);\n    }\n}\n","/**\n * moment-date-time-format.class\n */\nimport { OwlDateTimeFormats } from '../date-time-format.class';\n\nexport const OWL_MOMENT_DATE_TIME_FORMATS: OwlDateTimeFormats = {\n    parseInput: 'l LT',\n    fullPickerInput: 'l LT',\n    datePickerInput: 'l',\n    timePickerInput: 'LT',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n};\n","/**\n * moment-date-time.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { MomentDateTimeAdapter, OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS } from './moment-date-time-adapter.class';\nimport { OWL_MOMENT_DATE_TIME_FORMATS } from './moment-date-time-format.class';\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from '../date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from '../date-time-format.class';\n\n@NgModule({\n    providers: [\n        {\n            provide: DateTimeAdapter,\n            useClass: MomentDateTimeAdapter,\n            deps: [OWL_DATE_TIME_LOCALE, OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS]\n        },\n    ],\n})\nexport class MomentDateTimeModule {\n}\n\n@NgModule({\n    imports: [MomentDateTimeModule],\n    providers: [{provide: OWL_DATE_TIME_FORMATS, useValue: OWL_MOMENT_DATE_TIME_FORMATS}],\n})\nexport class OwlMomentDateTimeModule {\n}\n","/**\n * picker\n */\n\nexport { OwlDateTimeModule } from './lib/date-time/date-time.module';\n\nexport { OwlDateTimeIntl } from './lib/date-time/date-time-picker-intl.service';\n\nexport { OwlNativeDateTimeModule } from './lib/date-time/adapter/native-date-time.module';\n\nexport {\n  OWL_DATE_TIME_LOCALE_PROVIDER,\n  OWL_DATE_TIME_LOCALE,\n  DateTimeAdapter,\n\n} from './lib/date-time/adapter/date-time-adapter.class';\n\nexport {\n  MomentDateTimeAdapter,\n  OwlMomentDateTimeAdapterOptions,\n  OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS\n} from './lib/date-time/adapter/moment-adapter/moment-date-time-adapter.class';\n\nexport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from './lib/date-time/adapter/date-time-format.class';\n\nexport { OwlDateTimeInlineComponent } from './lib/date-time/date-time-inline.component';\n\nexport { OwlDateTimeComponent } from './lib/date-time/date-time-picker.component';\n\nexport { OwlMomentDateTimeModule } from './lib/date-time/adapter/moment-adapter/moment-date-time.module';\n\nexport * from './lib/date-time/calendar-body.component';\n\nexport * from './lib/date-time/timer.component';\n\nexport * from './lib/date-time/date-time-picker-trigger.directive';\n\nexport * from './lib/date-time/date-time-picker-input.directive';\n\nexport * from './lib/date-time/calendar-multi-year-view.component';\n\nexport * from './lib/date-time/calendar-year-view.component';\n\nexport * from './lib/date-time/calendar-month-view.component';\n\nexport * from './lib/date-time/calendar.component';\n\nexport * from './lib/date-time/timer.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {OWL_DATE_TIME_LOCALE_FACTORY as ɵb} from './lib/date-time/adapter/date-time-adapter.class';\nexport {OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY as ɵc} from './lib/date-time/adapter/moment-adapter/moment-date-time-adapter.class';\nexport {OWL_MOMENT_DATE_TIME_FORMATS as ɵx} from './lib/date-time/adapter/moment-adapter/moment-date-time-format.class';\nexport {MomentDateTimeModule as ɵh} from './lib/date-time/adapter/moment-adapter/moment-date-time.module';\nexport {NativeDateTimeAdapter as ɵv} from './lib/date-time/adapter/native-date-time-adapter.class';\nexport {OWL_NATIVE_DATE_TIME_FORMATS as ɵw} from './lib/date-time/adapter/native-date-time-format.class';\nexport {NativeDateTimeModule as ɵa} from './lib/date-time/adapter/native-date-time.module';\nexport {OWL_DATETIME_VALUE_ACCESSOR as ɵd} from './lib/date-time/date-time-inline.component';\nexport {OwlDateTimeContainerComponent as ɵr} from './lib/date-time/date-time-picker-container.component';\nexport {owlDateTimePickerAnimations as ɵs} from './lib/date-time/date-time-picker.animations';\nexport {OWL_DTPICKER_SCROLL_STRATEGY as ɵe,OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER as ɵg,OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵf} from './lib/date-time/date-time-picker.component';\nexport {OwlDateTime as ɵq} from './lib/date-time/date-time.class';\nexport {NumberFixedLenPipe as ɵu} from './lib/date-time/numberedfixlen.pipe';\nexport {OwlTimerBoxComponent as ɵt} from './lib/date-time/timer-box.component';\nexport {OwlDialogConfigInterface as ɵp} from './lib/dialog/dialog-config.class';\nexport {OwlDialogContainerComponent as ɵj} from './lib/dialog/dialog-container.component';\nexport {OwlDialogModule as ɵi} from './lib/dialog/dialog.module';\nexport {OWL_DIALOG_DEFAULT_OPTIONS as ɵn,OWL_DIALOG_SCROLL_STRATEGY as ɵk,OWL_DIALOG_SCROLL_STRATEGY_PROVIDER as ɵm,OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵl,OwlDialogService as ɵo} from './lib/dialog/dialog.service';"],"names":["observableOf","OWL_DATETIME_VALUE_ACCESSOR","_moment.default","range"],"mappings":";;;;;;;;;;;;;;;;;IAQA;;;;;QAMa,YAAO,GAAkB,IAAI,OAAO,EAAQ,CAAC;;QAGtD,kBAAa,GAAG,cAAc,CAAC;;QAG/B,oBAAe,GAAG,gBAAgB,CAAC;;QAGnC,kBAAa,GAAG,cAAc,CAAC;;QAG/B,oBAAe,GAAG,gBAAgB,CAAC;;QAGnC,gBAAW,GAAG,YAAY,CAAC;;QAG3B,kBAAa,GAAG,cAAc,CAAC;;QAG/B,mBAAc,GAAG,gBAAgB,CAAC;;QAGlC,mBAAc,GAAG,YAAY,CAAC;;QAG9B,kBAAa,GAAG,eAAe,CAAC;;QAGhC,kBAAa,GAAG,WAAW,CAAC;;QAG5B,uBAAkB,GAAG,mBAAmB,CAAC;;QAGzC,uBAAkB,GAAG,eAAe,CAAC;;QAGrC,2BAAsB,GAAG,sBAAsB,CAAC;;QAGhD,+BAA0B,GAAG,uBAAuB,CAAC;;QAGrD,mBAAc,GAAG,QAAQ,CAAC;;QAG1B,gBAAW,GAAG,KAAK,CAAC;;QAGpB,mBAAc,GAAG,MAAM,CAAC;;QAGxB,iBAAY,GAAG,IAAI,CAAC;;QAGpB,kBAAa,GAAG,IAAI,CAAC;;QAGrB,kBAAa,GAAG,IAAI,CAAC;KACxB;;IAnEY,eAAe;QAD3B,UAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;OACpB,eAAe,CAmE3B;0BA3ED;CAQA;;ACRA;;;AAGA,AAGA;AACA,IAAa,oBAAoB,GAAG,IAAI,cAAc,CAClD,sBAAsB,EACtB;IACI,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,4BAA4B;CACxC,CACJ,CAAC;AAEF;AACA,SAAgB,4BAA4B;IACxC,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC;AAC7B,CAAC;AAED;AACA,IAAa,6BAA6B,GAAG;IACzC,OAAO,EAAE,oBAAoB;IAC7B,WAAW,EAAE,SAAS;CACzB,CAAC;AAEF;IAAA;;QAKc,mBAAc,GAAG,IAAI,OAAO,EAAU,CAAC;;QAM9B,sBAAiB,GAAG,QAAQ,CAAC;;QAG7B,wBAAmB,GAAG,KAAK,CAAC;KA6QlD;IArRG,sBAAI,0CAAa;aAAjB;YACI,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;;;OAAA;;;;;;;IAwLD,iCAAO,GAAP,UAAQ,KAAQ,EAAE,MAAS;QACvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC/C,MAAM,KAAK,CAAC,6CAA6C,CAAC,CAAC;SAC9D;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAEtC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEhE,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,OAAO,CAAC,CAAC,CAAC;SACb;aAAM,IAAI,IAAI,GAAG,CAAC,EAAE;YACjB,OAAO,CAAC,CAAC;SACZ;aAAM;;YAEH,OAAO,IAAI,CAAC;SACf;KACJ;;;;;;;IAQD,qCAAW,GAAX,UAAY,KAAQ,EAAE,MAAS;QAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC/C,MAAM,KAAK,CAAC,6CAA6C,CAAC,CAAC;SAC9D;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACrC,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAEvC,IAAM,IAAI,GAAG,QAAQ,GAAG,SAAS,CAAC;QAElC,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,OAAO,CAAC,CAAC,CAAC;SACb;aAAM,IAAI,IAAI,GAAG,CAAC,EAAE;YACjB,OAAO,CAAC,CAAC;SACZ;aAAM;YACH,OAAO,CAAC,CAAC;SACZ;KACJ;;;;;;;;;;IAWD,qCAAW,GAAX,UAAY,KAAU;QAClB,IACI,KAAK,IAAI,IAAI;aACZ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EACrD;YACE,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;KACzB;;;;IAKD,mCAAS,GAAT,UAAU,MAAc;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC;;;;IAKD,mCAAS,GAAT;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;IAKD,mCAAS,GAAT,UAAU,IAAO,EAAE,GAAc,EAAE,GAAc;QAC7C,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;YACpC,OAAO,GAAG,CAAC;SACd;QACD,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;YACpC,OAAO,GAAG,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACf;IACL,sBAAC;AAAD,CAAC;;ACrTD;;;AAIA,AAYA;AACA,IAAa,qBAAqB,GAAG,IAAI,cAAc,CAAqB,uBAAuB,CAAC;;ACjBpG;;;;IAkLI,8BACY,MAAkB,EAClB,UAA2B,EAC3B,MAAc,EACd,KAAwB,EACZ,eAAmC,EAG/C,eAAmC;QAR/C,iBAaC;QAZW,WAAM,GAAN,MAAM,CAAY;QAClB,eAAU,GAAV,UAAU,CAAiB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAmB;QACZ,oBAAe,GAAf,eAAe,CAAoB;QAG/C,oBAAe,GAAf,eAAe,CAAoB;QAiCvC,eAAU,GAAQ,EAAE,CAAC;;;;QAM7B,cAAS,GAAqC,OAAO,CAAC;;QAUtD,uBAAkB,GAAG,IAAI,YAAY,EAAK,CAAC;;QAI3C,mBAAc,GAAG,IAAI,YAAY,EAAK,CAAC;;QAIvC,kBAAa,GAAG,IAAI,YAAY,EAAQ,CAAC;;;;QAMhC,iBAAY,GAAG,IAAI,YAAY,EAAK,CAAC;;;;QAMrC,kBAAa,GAAG,IAAI,YAAY,EAAK,CAAC;QAIvC,mBAAc,GAAG,YAAY,CAAC,KAAK,CAAC;;;;;;QAOpC,wBAAmB,GAAG,KAAK,CAAC;;;;QAK7B,uBAAkB,GAAG,UAAC,IAAO;YAChC,QACI,CAAC,CAAC,IAAI;iBACL,CAAC,KAAI,CAAC,UAAU,IAAI,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBAC1C,CAAC,KAAI,CAAC,OAAO;oBACV,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACzD,CAAC,KAAI,CAAC,OAAO;oBACV,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAC5D;SACL,CAAA;QA5FG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC;YACpD,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;SAC7B,CAAC,CAAC;KACN;IAnJD,sBAAI,yCAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAY,KAAe;YACvB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEjC,IAAI,CAAC,QAAQ,GAAG,KAAK;kBACf,IAAI,CAAC,eAAe,CAAC,UAAU,CAC3B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CACtC;kBACD,IAAI,CAAC;SACd;;;OAbA;IAeD,sBAAI,yCAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAY,KAAe;YACvB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEjC,IAAI,CAAC,QAAQ,GAAG,KAAK;kBACf,IAAI,CAAC,eAAe,CAAC,UAAU,CAC3B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,EACnC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CACtC;kBACD,IAAI,CAAC;SACd;;;OAbA;IAeD,sBAAI,8CAAY;aAAhB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;aAED,UAAiB,KAAQ;YACrB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;SAC9D;;;OANA;IAQD,sBAAI,0CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,KAAe;YACxB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAC7C;;;OALA;IAOD,sBAAI,2CAAS;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;aAED,UAAc,MAAW;YAAzB,iBAKC;YAJG,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC;gBAC1B,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACxC,OAAO,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN;;;OAPA;IASD,sBAAI,kDAAgB;aAApB;YACI,OAAO,IAAI,CAAC,WAAW;kBACjB,IAAI,CAAC,eAAe,CAAC,MAAM,CACvB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,eAAe,CAAC,cAAc,CACtC;kBACD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;;;OAAA;IAED,sBAAI,mDAAiB;aAArB;YACI,OAAO,IAAI,CAAC,WAAW;kBACjB,IAAI,CAAC,UAAU,CAAC,0BAA0B;kBAC1C,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC;SAChD;;;OAAA;IAED,sBAAI,iDAAe;aAAnB;YACI,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE;gBAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;aACzC;iBAAM,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;gBACrC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;aACxC;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;;;OAAA;IAED,sBAAI,iDAAe;aAAnB;YACI,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE;gBAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;aACzC;iBAAM,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;gBACrC,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;aACxC;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;;;OAAA;IACD,sBAAI,6CAAW;aAAf;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;SAC5B;aAED,UAAgB,IAAsC;YAClD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACnC;;;OALA;IAOD,sBAAI,gDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC;SACvC;;;OAAA;IAED,sBAAI,+CAAa;aAAjB;YACI,QACI,IAAI,CAAC,UAAU,KAAK,OAAO;gBAC3B,IAAI,CAAC,UAAU,KAAK,WAAW;gBAC/B,IAAI,CAAC,UAAU,KAAK,SAAS,EAC/B;SACL;;;OAAA;IAED,sBAAI,mDAAiB;aAArB;YACI,OAAO,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC;SAC9C;;;OAAA;IAED,sBAAI,6CAAW;aAAf;YACI,OAAO,IAAI,CAAC,YAAY,KAAK,OAAO,CAAC;SACxC;;;OAAA;IAKD,sBAAI,oDAAkB;;;;aAAtB;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IA0GM,uCAAQ,GAAf,eAAoB;IAEb,iDAAkB,GAAzB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;KACtC;IAEM,iDAAkB,GAAzB;QACI,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;KACJ;IAEM,0CAAW,GAAlB;QACI,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;KACrC;;;;IAKM,0CAAW,GAAlB;QACI,IAAI,CAAC,WAAW;YACZ,IAAI,CAAC,YAAY,KAAK,OAAO,GAAG,aAAa,GAAG,OAAO,CAAC;KAC/D;;;;IAKM,8CAAe,GAAtB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW;cAC9B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;cAC7D,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACnD;;;;IAKM,0CAAW,GAAlB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW;cAC9B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;cAC5D,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAElE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACnD;IAEM,2CAAY,GAAnB,UAAoB,IAAO;QACvB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO;SACV;QAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;;KAMlC;;;;IAKM,6CAAc,GAArB,UACI,IAAO,EACP,IAAsC;QAEtC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO;KACV;;;;IAKM,uDAAwB,GAA/B,UAAgC,IAAO;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAC9C,IAAI,EACJ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,CACf,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChD,OAAO;KACV;IAEM,2CAAY,GAAnB;QACI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC7B;;;;IAKM,gDAAiB,GAAxB;QACI,QACI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,EACpE;KACL;;;;IAKM,gDAAiB,GAAxB;QACI,QACI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,EACpE;KACL;;;;IAKM,8CAAe,GAAtB;QAAA,iBAWC;QAVG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ;iBACf,YAAY,EAAE;iBACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,aAAa;qBACpB,aAAa,CAAC,8BAA8B,CAAC;qBAC7C,KAAK,EAAE,CAAC;aAChB,CAAC,CAAC;SACV,CAAC,CAAC;KACN;IAEM,wDAAyB,GAAhC,UAAiC,cAAiB;QAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC1C;IAEM,oDAAqB,GAA5B,UAA6B,eAAkB;QAC3C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KAC5C;;;;IAKO,yCAAU,GAAlB,UAAmB,KAAQ,EAAE,KAAQ;QACjC,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE;YAC/B,OAAO,CAAC,EACJ,KAAK;gBACL,KAAK;gBACL,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC;oBAC/B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC;gBACvC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAChC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAC3C,CAAC;SACL;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YACrC,OAAO,CAAC,EACJ,KAAK;gBACL,KAAK;gBACL,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC;oBAC/B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAC1C,CAAC;SACL;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;KACJ;;;;IAKO,2CAAY,GAApB,UAAqB,GAAQ;QACzB,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC;cAC/B,GAAG;cACH,IAAI,CAAC;KACd;;gBA3QmB,UAAU;gBACN,eAAe;gBACnB,MAAM;gBACP,iBAAiB;gBACK,eAAe,uBAAnD,QAAQ;gDACR,QAAQ,YACR,MAAM,SAAC,qBAAqB;;IA7IjC;QADC,KAAK,EAAE;;;uDAGP;IAeD;QADC,KAAK,EAAE;;;uDAGP;IAeD;QADC,KAAK,EAAE;;;4DAGP;IAQD;QADC,KAAK,EAAE;;;wDAGP;IAOD;QADC,KAAK,EAAE;;;yDAGP;IAiGD;QADC,KAAK,EAAE;;4DACyB;IAMjC;QADC,KAAK,EAAE;;gEACe;IAYvB;QADC,KAAK,EAAE;;4DACe;IAWvB;QADC,KAAK,EAAE;;2DAC8C;IAMtD;QADC,KAAK,EAAE;;iEACiB;IAIzB;QADC,MAAM,EAAE;;oEACkC;IAI3C;QADC,MAAM,EAAE;;gEAC8B;IAIvC;QADC,MAAM,EAAE;;+DACgC;IAMzC;QADC,MAAM,EAAE;;8DACqC;IAM9C;QADC,MAAM,EAAE;;+DACsC;IAtNtC,oBAAoB;QAXhC,SAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,QAAQ,EAAE,qBAAqB;YAC/B,8tMAAwC;YAExC,IAAI,EAAE;gBACF,yBAAyB,EAAE,oBAAoB;aAClD;YACD,mBAAmB,EAAE,KAAK;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAClD,CAAC;QA+IO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;yCANd,UAAU;YACN,eAAe;YACnB,MAAM;YACP,iBAAiB;YACK,eAAe;OA9I/C,oBAAoB,CAsZhC;IAAD,2BAAC;CAtZD;;ACzCA;;;;IAsLI,2BACY,MAAc,EACd,MAAkB,EAClB,UAA2B,EAC3B,KAAwB,EACZ,eAAmC;QAJ/C,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAY;QAClB,eAAU,GAAV,UAAU,CAAiB;QAC3B,UAAK,GAAL,KAAK,CAAmB;QACZ,oBAAe,GAAf,eAAe,CAAoB;QArHnD,SAAI,GAAG,KAAK,CAAC;;;;QAkBrB,aAAQ,GAAG,CAAC,CAAC;;;;QAMb,eAAU,GAAG,CAAC,CAAC;;;;QAMf,eAAU,GAAG,CAAC,CAAC;QAwEf,mBAAc,GAAG,IAAI,YAAY,EAAK,CAAC;KAgBnC;IAxJJ,sBAAI,2CAAY;aAAhB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;aAED,UAAiB,KAAQ;YACrB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;SAC9D;;;OANA;IAWD,sBAAI,0CAAW;aAAf;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;SAC5B;aAED,UAAgB,KAAe;YAC3B,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAChD;;;OALA;IAUD,sBAAI,0CAAW;aAAf;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;SAC5B;aAED,UAAgB,KAAe;YAC3B,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAChD;;;OALA;IAuCD,sBAAI,wCAAS;aAAb;YACI,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC3D;;;OAAA;IAOD,sBAAI,2CAAY;;;;;;aAAhB;YACI,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YAE3B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACnB,OAAO,KAAK,CAAC;aAChB;iBAAM;gBACH,IAAI,KAAK,KAAK,CAAC,EAAE;oBACb,KAAK,GAAG,EAAE,CAAC;oBACX,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACrB;qBAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;oBAChC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACrB;qBAAM,IAAI,KAAK,KAAK,EAAE,EAAE;oBACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBACpB;qBAAM,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE,EAAE;oBACjC,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;oBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBACpB;gBAED,OAAO,KAAK,CAAC;aAChB;SACJ;;;OAAA;IAED,sBAAI,0CAAW;aAAf;YACI,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;;;OAAA;IAED,sBAAI,0CAAW;aAAf;YACI,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;;;OAAA;IAED,sBAAI,gDAAiB;aAArB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;SACtC;;;OAAA;IAED,sBAAI,kDAAmB;aAAvB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;SACxC;;;OAAA;IAED,sBAAI,kDAAmB;aAAvB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;SACxC;;;OAAA;IAED,sBAAI,oDAAqB;aAAzB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC;SAC1C;;;OAAA;IAED,sBAAI,kDAAmB;aAAvB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;SACxC;;;OAAA;IAED,sBAAI,oDAAqB;aAAzB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC;SAC1C;;;OAAA;IAED,sBAAI,gDAAiB;aAArB;YACI,OAAO,IAAI,CAAC,IAAI;kBACV,IAAI,CAAC,UAAU,CAAC,aAAa;kBAC7B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;SACvC;;;OAAA;IAKD,sBAAI,8CAAe;aAAnB;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,sBAAI,gDAAiB;aAArB;YACI,OAAO,CAAC,CAAC,CAAC;SACb;;;OAAA;IAUM,oCAAQ,GAAf,eAAoB;;;;IAKb,iCAAK,GAAZ;QAAA,iBASC;QARG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ;iBACf,YAAY,EAAE;iBACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACrC,CAAC,CAAC;SACV,CAAC,CAAC;KACN;;;;;IAMM,gDAAoB,GAA3B,UAA4B,KAAa;QACrC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,EAAE;YAC5D,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,KAAK,EAAE,EAAE;YACvD,KAAK,GAAG,CAAC,CAAC;SACb;QAED,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC5B;IAEM,wCAAY,GAAnB,UAAoB,KAAa;QAC7B,IAAM,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAClE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAC7B;IAEM,0CAAc,GAArB,UAAsB,OAAe;QACjC,IAAM,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAC7B;IAEM,0CAAc,GAArB,UAAsB,OAAe;QACjC,IAAM,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAC7B;IAEM,uCAAW,GAAlB,UAAmB,KAAU;QACzB,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAEvB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3B,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;SACtB;aAAM;YACH,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;SACtB;QAED,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,EAAE;YAC3B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAC5B;QAED,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;;;;IAKM,yCAAa,GAApB;QACI,QACI,CAAC,IAAI,CAAC,WAAW;YACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EACxD;KACL;;;;IAKM,2CAAe,GAAtB;QACI,QACI,CAAC,IAAI,CAAC,WAAW;YACjB,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAC1D;KACL;;;;IAKM,2CAAe,GAAtB;QACI,QACI,CAAC,IAAI,CAAC,WAAW;YACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAC5D;KACL;;;;IAKM,6CAAiB,GAAxB;QACI,QACI,CAAC,IAAI,CAAC,WAAW;YACjB,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAC9D;KACL;;;;IAKM,2CAAe,GAAtB;QACI,QACI,CAAC,IAAI,CAAC,WAAW;YACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAC5D;KACL;;;;IAKM,6CAAiB,GAAxB;QACI,QACI,CAAC,IAAI,CAAC,WAAW;YACjB,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAC9D;KACL;;;;;;;IAQO,wCAAY,GAApB,UAAqB,MAAc,EAAE,YAAe;QAChD,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;QACxE,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC7D;;;;;;;IAQO,0CAAc,GAAtB,UAAuB,MAAc,EAAE,YAAe;QAClD,IAAM,OAAO,GACT,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;QAChE,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAC1C,IAAI,CAAC,YAAY,EACjB,OAAO,CACV,CAAC;QACF,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC7D;;;;;;;IAQO,0CAAc,GAAtB,UAAuB,MAAc,EAAE,YAAe;QAClD,IAAM,OAAO,GACT,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;QAChE,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAC1C,IAAI,CAAC,YAAY,EACjB,OAAO,CACV,CAAC;QACF,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAC7D;;;;IAKO,wCAAY,GAApB,UAAqB,GAAQ;QACzB,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC;cAC/B,GAAG;cACH,IAAI,CAAC;KACd;;gBAzLmB,MAAM;gBACN,UAAU;gBACN,eAAe;gBACpB,iBAAiB;gBACK,eAAe,uBAAnD,QAAQ;;IAvJb;QADC,KAAK,EAAE;;;yDAGP;IAWD;QADC,KAAK,EAAE;;;wDAGP;IAUD;QADC,KAAK,EAAE;;;wDAGP;IAaD;QADC,KAAK,EAAE;;+DACkB;IAM1B;QADC,KAAK,EAAE;;0DACa;IAMrB;QADC,KAAK,EAAE;;uDACK;IAMb;QADC,KAAK,EAAE;;yDACO;IAMf;QADC,KAAK,EAAE;;yDACO;IAwEf;QADC,MAAM,EAAE;;6DAC8B;IA5I9B,iBAAiB;QAZ7B,SAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,qBAAqB;YAC/B,k4DAAqC;YAErC,mBAAmB,EAAE,KAAK;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,IAAI,EAAE;gBACF,sBAAsB,EAAE,iBAAiB;gBACzC,iBAAiB,EAAE,mBAAmB;aACzC;;SACJ,CAAC;QA4JO,WAAA,QAAQ,EAAE,CAAA;yCAJK,MAAM;YACN,UAAU;YACN,eAAe;YACpB,iBAAiB;YACK,eAAe;OA3J/C,iBAAiB,CAiV7B;IAAD,wBAAC;CAjVD;;AChCA;;;AAGA,IAWa,2BAA2B,GAGpC;IAEA,eAAe,EAAE,OAAO,CAAC,iBAAiB,EAAE;QACxC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,aAAa,EAAC,CAAC,CAAC;QAC5D,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,aAAa,EAAC,CAAC,CAAC;QAC7D,UAAU,CAAC,eAAe,EAAE,KAAK,CAAC;YAC9B,KAAK,CAAC,eAAe,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAC1D,OAAO,CAAC,wCAAwC,CAAC;SACpD,CAAC,CAAC;QACH,UAAU,CAAC,eAAe,EAAE,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;KAC5E,CAAC;IAEF,YAAY,EAAE,OAAO,CAAC,cAAc,EAAE;QAClC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;QACnC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;QAClC,UAAU,CAAC,eAAe,EAAE,OAAO,CAAC,8CAA8C,CAAC,CAAC;KACvF,CAAC;CACL;;AClCD;;;;IA2MI,uCAAqB,KAAwB,EACvB,MAAkB,EAClB,UAA2B,EAChB,eAAmC;QAH/C,UAAK,GAAL,KAAK,CAAmB;QACvB,WAAM,GAAN,MAAM,CAAY;QAClB,eAAU,GAAV,UAAU,CAAiB;QAChB,oBAAe,GAAf,eAAe,CAAoB;QAjJ7D,wBAAmB,GAAG,CAAC,CAAC;;;;QASvB,gBAAW,GAAG,IAAI,OAAO,EAAO,CAAC;;;;QASjC,qBAAgB,GAAG,IAAI,OAAO,EAAO,CAAC;QAMtC,kBAAa,GAAG,IAAI,OAAO,EAAO,CAAC;KA0H1C;IAvID,sBAAI,2DAAgB;aAApB;YACI,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;SAC1C;;;OAAA;IAOD,sBAAI,gEAAqB;aAAzB;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;SAC/C;;;OAAA;IAID,sBAAI,6DAAkB;aAAtB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;SAC5C;;;OAAA;IAQD,sBAAI,uDAAY;aAAhB;YACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;SACjC;aAED,UAAiB,KAAQ;YACrB,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CACnD,KAAK,EACL,IAAI,CAAC,MAAM,CAAC,WAAW,EACvB,IAAI,CAAC,MAAM,CAAC,WAAW,CAC1B,CAAC;aACL;YACD,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;SAC7B;;;OAXA;IAaD,sBAAI,qDAAU;aAAd;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;SACjC;;;OAAA;IAED,sBAAI,sDAAW;aAAf;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;SACzC;;;OAAA;IAED,sBAAI,mDAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;SACtC;;;OAAA;IAKD,sBAAI,oDAAS;;;;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;SACzC;;;OAAA;IAKD,sBAAI,kDAAO;;;;aAAX;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;SACvC;;;OAAA;IAKD,sBAAI,6DAAkB;;;;aAAtB;YACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACvC,OAAO,KAAK;kBACN,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;kBAC5D,EAAE,CAAC;SACZ;;;OAAA;IAKD,sBAAI,2DAAgB;;;;aAApB;YACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACvC,OAAO,KAAK;kBACN,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;kBAC5D,EAAE,CAAC;SACZ;;;OAAA;IAOD,sBAAI,6DAAkB;;;;;;aAAtB;YACI,QACI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ;iBAClC,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,UAAU;oBAClC,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,CAAC,EAC1C;SACL;;;OAAA;IAED,sBAAI,uDAAY;aAAhB;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;SACpC;;;OAAA;IAED,sBAAI,8DAAmB;aAAvB;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,sBAAI,mEAAwB;aAA5B;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,CAAC;SAC7C;;;OAAA;IAED,sBAAI,oEAAyB;aAA7B;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,CAAC;SAC9C;;;OAAA;IAED,sBAAI,oEAAyB;aAA7B;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,CAAC;SAC9C;;;OAAA;IAED,sBAAI,sEAA2B;aAA/B;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SAC/B;;;OAAA;IAED,sBAAI,2DAAgB;aAApB;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;SACzB;;;OAAA;IAED,sBAAI,kEAAuB;aAA3B;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,GAAG,EAAE,GAAG,OAAO,CAAC;SAC7D;;;OAAA;IAQM,gDAAQ,GAAf;QACI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;YACpC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/E;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7E;SACJ;KACJ;IAEM,0DAAkB,GAAzB;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;KACrB;IAEM,uDAAe,GAAtB;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;KACtB;IAEM,oEAA4B,GAAnC,UAAoC,KAAqB;QACrD,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC9B,IAAI,OAAO,KAAK,OAAO,EAAE;YACrB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC7B;KACJ;IAEM,oDAAY,GAAnB,UAAoB,IAAO;QACvB,IAAI,MAAM,CAAC;QAEX,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;YAC5B,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,MAAM,EAAE;gBACR,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC9B;iBAAM;;gBAEH,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;oBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/B;aACJ;YACD,OAAO;SACV;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAC3B,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,MAAM,EAAE;gBACR,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACrD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC9B;SACJ;KACJ;IAEM,oDAAY,GAAnB,UAAoB,IAAO;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAErD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACjD,OAAO;SACV;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACtC,OAAO;SACV;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAC3B,IAAM,SAAS,YAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;;YAI7C,IACI,CAAC,IAAI,CAAC,mBAAmB,KAAK,CAAC;gBAC3B,SAAS,CAAC,CAAC,CAAC;gBACZ,IAAI,CAAC,eAAe,CAAC,OAAO,CACxB,IAAI,CAAC,YAAY,EACjB,SAAS,CAAC,CAAC,CAAC,CACf,KAAK,CAAC;iBACV,IAAI,CAAC,mBAAmB,KAAK,CAAC;oBAC3B,SAAS,CAAC,CAAC,CAAC;oBACZ,IAAI,CAAC,eAAe,CAAC,OAAO,CACxB,IAAI,CAAC,YAAY,EACjB,SAAS,CAAC,CAAC,CAAC,CACf,KAAK,CAAC,CAAC,CAAC,EACf;gBACE,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;gBACjC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;aACpC;iBAAM;gBACH,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;aAC3D;YAED,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE;YACD,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACjC;KACJ;;;;IAKM,uDAAe,GAAtB,UAAuB,KAAU;QAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,OAAO;KACV;;;;IAKM,oDAAY,GAAnB,UAAoB,KAAU;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACjD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO;SACV;QAED,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,OAAO;KACV;;;;IAKM,8DAAsB,GAA7B,UAA8B,KAAU,EAAE,KAAa;QACnD,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACnC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;KAC3B;;;;IAKM,gEAAwB,GAA/B,UACI,KAAU,EACV,IAAS,EACT,KAAa;QAEb,QAAQ,KAAK,CAAC,OAAO;YACjB,KAAK,UAAU,CAAC;YAChB,KAAK,WAAW,CAAC;YACjB,KAAK,QAAQ,CAAC;YACd,KAAK,UAAU;gBACX,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,sBAAsB,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACjD,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,MAAM;YAEV,KAAK,KAAK;gBACN,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;gBACnC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,MAAM;YAEV;gBACI,OAAO;SACd;KACJ;;;;IAKO,8DAAsB,GAA9B,UAA+B,KAAa;QACxC,IACI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO;YAClC,IAAI,CAAC,mBAAmB,KAAK,KAAK,EACpC;YACE,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YAEjC,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACjE,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,QAAQ,EAAE;gBACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aAC5D;SACJ;QACD,OAAO;KACV;IAEO,kDAAU,GAAlB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;QACtE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3E;;;;;IAMO,gEAAwB,GAAhC,UAAiC,IAAO;QACpC,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAC5D,OAAO,IAAI,CAAC;SACf;QAED,OAAO,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;KAChD;;;;IAKO,+DAAuB,GAA/B,UAAgC,IAAO;QACnC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAElC,IAAM,MAAM,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;QAErD,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,IAAI,CAAC;SACf;;;;QAKD,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;YACpC,IACI,IAAI,CAAC,MAAM,CAAC,SAAS;gBACrB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM;gBAC5B,CAAC,EAAE;gBACH,IAAI;gBACJ,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAClE;gBACE,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;oBAC1C,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAChC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,EACrC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAChD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAClD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC3D;qBAAM,IAAI,IAAI,CAAC,aAAa,EAAE;oBAC3B,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAChC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,EACrC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,EACjD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,EACnD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;iBAC5D;qBAAM;oBACH,EAAE,GAAG,MAAM,CAAC;iBACf;gBACD,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;aAChC;iBAAM;gBACH,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;oBAC9C,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAClC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,EACrC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAClD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EACpD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CACvD,CAAC;iBACL;qBAAM,IAAI,IAAI,CAAC,eAAe,EAAE;oBAC7B,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAClC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,EACrC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,EACnD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,EACrD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;iBAC9D;qBAAM;oBACH,IAAI,GAAG,MAAM,CAAC;iBACjB;gBACD,EAAE,GAAG,IAAI,CAAC;gBACV,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;aAChC;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,WAAW,EAAE;YAC/C,IAAI,GAAG,MAAM,CAAC;;YAGd,IAAI,EAAE,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE;gBAClD,EAAE,GAAG,IAAI,CAAC;aACb;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE;YAC7C,EAAE,GAAG,MAAM,CAAC;;YAGZ,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE;gBACpD,IAAI,GAAG,IAAI,CAAC;aACf;SACJ;QAED,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KACrB;;;;;;;;IASO,kEAA0B,GAAlC,UAAmC,IAAO;QACtC,IAAI,MAAM,CAAC;;QAGX,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,MAAM,EAAE;YACnC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CACpC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,EAClC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,EACnC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,EAClC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAChD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,EAClD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CACrD,CAAC;YACF,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CACnC,MAAM,EACN,IAAI,CAAC,MAAM,CAAC,WAAW,EACvB,IAAI,CAAC,MAAM,CAAC,WAAW,CAC1B,CAAC;SACL;aAAM;YACH,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC7C;;QAGD,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;KAC9D;;;;IAKO,mDAAW,GAAnB;QACI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE;YACrC,OAAO;SACV;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;SACnC;aAAM,IAAI,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SACtB;KACJ;;gBAhV2B,iBAAiB;gBACf,UAAU;gBACN,eAAe;gBACC,eAAe,uBAAnD,QAAQ;;IAtJtB;QADC,SAAS,CAAC,oBAAoB,CAAC;kCACtB,oBAAoB;mEAAI;IAElC;QADC,SAAS,CAAC,iBAAiB,CAAC;kCACtB,iBAAiB;gEAAI;IALnB,6BAA6B;QAtBzC,SAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,QAAQ,EAAE,yBAAyB;YACnC,qjIAA0D;YAE1D,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE;gBACR,2BAA2B,CAAC,eAAe;gBAC3C,2BAA2B,CAAC,YAAY;aAC3C;YACD,IAAI,EAAE;gBACF,yBAAyB,EAAE,sCAAsC;gBACjE,0BAA0B,EAAE,qBAAqB;gBACjD,gCAAgC,EAAE,0BAA0B;gBAC5D,iCAAiC,EAAE,2BAA2B;gBAC9D,iCAAiC,EAAE,2BAA2B;gBAC9D,mCAAmC,EAAE,6BAA6B;gBAClE,WAAW,EAAE,kBAAkB;gBAC/B,oBAAoB,EAAE,yBAAyB;aAClD;;SACJ,CAAC;QA0JgB,WAAA,QAAQ,EAAE,CAAA;yCAHI,iBAAiB;YACf,UAAU;YACN,eAAe;YACC,eAAe;OAzJxD,6BAA6B,CAuezC;IAAD,oCAAC;CAveD;;ACvCA,IAAI,YAAY,GAAG,CAAC,CAAC;AASrB;IA2KI,qBAC0B,eAAmC,EAG/C,eAAmC;QAJjD,iBAuBC;QAtByB,oBAAe,GAAf,eAAe,CAAoB;QAG/C,oBAAe,GAAf,eAAe,CAAoB;;;;QA3KzC,sBAAiB,GAAG,KAAK,CAAC;;;;QAa1B,iBAAY,GAAG,KAAK,CAAC;;;;QAc7B,cAAS,GAAqC,OAAO,CAAC;;;;QAK9C,cAAS,GAAG,CAAC,CAAC;;;;QAad,gBAAW,GAAG,CAAC,CAAC;;;;QAahB,gBAAW,GAAG,CAAC,CAAC;;;;QA+BhB,qBAAgB,GAAG,KAAK,CAAC;;;;QA8D1B,oBAAe,GAAG,UAAC,QAAW;YACjC,QACI,CAAC,CAAC,QAAQ;iBACT,CAAC,KAAI,CAAC,cAAc,IAAI,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;iBACtD,CAAC,KAAI,CAAC,WAAW;oBACd,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAI,CAAC,WAAW,CAAC;wBACpD,CAAC,CAAC;iBACT,CAAC,KAAI,CAAC,WAAW;oBACd,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EACpE;SACL,CAAC;QAYE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,MAAM,KAAK,CACP,iGAAiG;gBAC7F,mGAAmG;gBACnG,wBAAwB,CAC/B,CAAC;SACL;QAED,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,MAAM,KAAK,CACP,uGAAuG;gBACnG,mGAAmG;gBACnG,wBAAwB,CAC/B,CAAC;SACL;QAED,IAAI,CAAC,GAAG,GAAG,mBAAiB,YAAY,EAAI,CAAC;KAChD;IA5LD,sBAAI,yCAAgB;aAApB;YACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;SACjC;aAED,UAAqB,GAAY;YAC7B,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;SACvD;;;OAJA;IAWD,sBAAI,oCAAW;aAAf;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;SAC5B;aAED,UAAgB,GAAY;YACxB,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;SAClD;;;OAJA;IAiBD,sBAAI,iCAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,GAAW;YACpB,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACjD;;;OAJA;IAWD,sBAAI,mCAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,GAAW;YACtB,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACnD;;;OAJA;IAWD,sBAAI,mCAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,GAAW;YACtB,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACnD;;;OAJA;IAWD,sBAAI,uCAAc;aAAlB;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;SAC/B;aAED,UAAmB,KAAa;YAC5B,KAAK,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;gBACxB,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;aACpC;iBAAM;gBACH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAChC;SACJ;;;OATA;IAgBD,sBAAI,wCAAe;aAAnB;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAChC;aAED,UAAoB,GAAY;YAC5B,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;SACtD;;;OAJA;IAOD,sBAAI,2BAAE;aAAN;YACI,OAAO,IAAI,CAAC,GAAG,CAAC;SACnB;;;OAAA;IAsCD,sBAAI,qCAAY;aAAhB;YACI,OAAO,IAAI,CAAC,UAAU,KAAK,MAAM;kBAC3B,IAAI,CAAC,eAAe,CAAC,eAAe;kBACpC,IAAI,CAAC,UAAU,KAAK,UAAU;sBAC1B,IAAI,CAAC,eAAe,CAAC,eAAe;sBACpC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;SAClD;;;OAAA;IAiBD,sBAAI,iCAAQ;aAAZ;YACI,OAAO,KAAK,CAAC;SAChB;;;OAAA;IA2BS,kCAAY,GAAtB,UAAuB,GAAQ;QAC3B,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC;cAC/B,GAAG;cACH,IAAI,CAAC;KACd;;gBA7B0C,eAAe,uBAArD,QAAQ;gDACR,QAAQ,YACR,MAAM,SAAC,qBAAqB;;IAxKjC;QADC,KAAK,EAAE;;;uDAGP;IAWD;QADC,KAAK,EAAE;;;kDAGP;IAUD;QADC,KAAK,EAAE;;kDAC8C;IAOtD;QADC,KAAK,EAAE;;;+CAGP;IAWD;QADC,KAAK,EAAE;;;iDAGP;IAWD;QADC,KAAK,EAAE;;;iDAGP;IAWD;QADC,KAAK,EAAE;;;qDAGP;IAgBD;QADC,KAAK,EAAE;;;sDAGP;IAjGiB,WAAW;QADhC,SAAS,EAAE;QA6KH,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;yCAFS,eAAe;OA5KxC,WAAW,CA0MhC;IAAD,kBAAC;CA1MD;;ACjBA,IAAI,QAAQ,GAAG,CAAC,CAAC;AAkHjB;IAgGI;;;;QA5FO,oBAAe,GAAkB,IAAI,CAAC;;;;QAKtC,cAAS,GAAG,IAAI,CAAC;;QAGjB,gBAAW,GAAG,IAAI,CAAC;;QAQnB,SAAI,GAAQ,IAAI,CAAC;;QAGjB,iBAAY,GAAG,KAAK,CAAC;;;;QAUrB,SAAI,GAA6B,QAAQ,CAAC;;;;QAK1C,cAAS,GAAsB,EAAE,CAAC;;;;QAKlC,UAAK,GAAe,IAAI,CAAC;;;;QAKzB,kBAAa,GAAsB,EAAE,CAAC;;;;QAKtC,sBAAiB,GAAG,IAAI,CAAC;;QAGzB,UAAK,GAAG,EAAE,CAAC;;QAGX,WAAM,GAAG,EAAE,CAAC;;;;;QAkBZ,aAAQ,GAAoB,MAAM,CAAC;;;;;QAenC,mBAAc,GAAmB,IAAI,kBAAkB,EAAE,CAAC;QAK7D,IAAI,CAAC,EAAE,GAAG,gBAAc,QAAQ,EAAI,CAAC;KACxC;IACL,sBAAC;AAAD,CAAC,IAAA;;AC/MD;IAqBI,sBAAqB,UAAsB,EACtB,SAAsC,EAC9B,EAAU,EAC1B,QAAmB;QAHhC,iBAuCC;QAvCoB,eAAU,GAAV,UAAU,CAAY;QACtB,cAAS,GAAT,SAAS,CAA6B;QAC9B,OAAE,GAAF,EAAE,CAAQ;QAnB/B,kBAAa,GAAG,IAAI,OAAO,EAAO,CAAC;QAEnC,gBAAW,GAAG,IAAI,OAAO,EAAO,CAAC;QAEjC,kBAAa,GAAG,IAAI,OAAO,EAAO,CAAC;;QAGnC,oBAAe,GAAkB,YAAY,CAAC,KAAK,CAAC;;QAQrD,iBAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC;QAOrD,IAAI,CAAC,SAAS,CAAC,qBAAqB;aAC/B,IAAI,CACD,MAAM,CAAC,UAAE,KAAqB,IAAM,OAAA,KAAK,CAAC,SAAS,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,GAAA,CAAC,EAC5F,IAAI,CAAC,CAAC,CAAC,CACV;aACA,SAAS,CAAC;YACP,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACxB,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC/B,CAAC,CAAC;QAEP,IAAI,CAAC,SAAS,CAAC,qBAAqB;aAC/B,IAAI,CACD,MAAM,CAAC,UAAE,KAAqB,IAAM,OAAA,KAAK,CAAC,SAAS,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,GAAA,CAAC,EAC3F,IAAI,CAAC,CAAC,CAAC,CACV;aACA,SAAS,CAAC;YACP,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC1B,KAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;YACnC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC9B,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SACjC,CAAC,CAAC;QAEP,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;aAC1B,IAAI,CAAC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,OAAO,KAAK,MAAM,IAAI,CAAC,KAAI,CAAC,YAAY,GAAA,CAAC,CAAC;aACrE,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;QAEnC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,SAAS,CAAC;gBACtC,IAAI,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE;oBACzC,KAAI,CAAC,KAAK,EAAE,CAAC;iBAChB;aACJ,CAAC,CAAC;SACN;KACJ;IAEM,4BAAK,GAAZ,UAAc,YAAkB;QAAhC,iBAeC;QAdG,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;QAE3B,IAAI,CAAC,SAAS,CAAC,qBAAqB;aAC/B,IAAI,CACD,MAAM,CAAC,UAAE,KAAqB,IAAM,OAAA,KAAK,CAAC,SAAS,KAAK,OAAO,GAAA,CAAC,EAChE,IAAI,CAAC,CAAC,CAAC,CACV;aACA,SAAS,CAAC;YACP,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACtC,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC9B,KAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;SACpC,CAAC,CAAC;QAEP,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC;KACvC;;;;IAKM,oCAAa,GAApB;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;KAC1C;;;;IAKM,oCAAa,GAApB;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;KAC1C;;;;;IAMM,qCAAc,GAArB,UAAuB,QAAyB;QAC5C,IAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE5C,IAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC/C,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACjF;aAAM;YACH,QAAQ,CAAC,kBAAkB,EAAE,CAAC;SACjC;QAED,IAAI,QAAQ,KAAK,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC/C,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAChF;aAAM;YACH,QAAQ,CAAC,gBAAgB,EAAE,CAAC;SAC/B;QAED,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KACf;;;;;;IAOD,iCAAU,GAAV,UAAY,KAAsB,EAAE,MAAuB;QAA/C,sBAAA,EAAA,cAAsB;QAAE,uBAAA,EAAA,eAAuB;QACvD,IAAI,CAAC,mBAAmB,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC;KACf;IAEM,kCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;KACrC;IAEM,gCAAS,GAAhB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;KAC1C;IAEM,kCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC5C;IAEM,kCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC5C;;IAGO,0CAAmB,GAA3B;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,gBAA0C,CAAC;KACjF;IACL,mBAAC;AAAD,CAAC,IAAA;;AChKD;;;AAmCA,IAAM,UAAU,GAAG;IACf,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,0DAA0D;CACxE,CAAC;AACF,IAAM,cAAc,GAAG;IACnB,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,0DAA0D;IACrE,eAAe,EAAE,mBAAmB;CACvC,CAAC;AAoDF;IAAiD,+CAAgB;IAgE7D,qCACY,cAAiC,EACjC,UAAsB,EACtB,gBAAkC,EAGlC,QAAa;QANzB,YAQI,iBAAO,SACV;QARW,oBAAc,GAAd,cAAc,CAAmB;QACjC,gBAAU,GAAV,UAAU,CAAY;QACtB,sBAAgB,GAAhB,gBAAgB,CAAkB;QAGlC,cAAQ,GAAR,QAAQ,CAAK;QAnEzB,kBAAY,GAA2B,IAAI,CAAC;;QAMrC,oBAAc,GAAkB,IAAI,CAAC;;QAGrC,2BAAqB,GAAG,IAAI,YAAY,EAAkB,CAAC;QAE3D,iBAAW,GAAG,KAAK,CAAC;QAOnB,WAAK,GAA8B,OAAO,CAAC;;QAG3C,YAAM,GAAQ;YAClB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,KAAK;YACR,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,KAAK;YACT,KAAK,EAAE,CAAC;SACX,CAAC;;;QAIM,yCAAmC,GAAuB,IAAI,CAAC;;KAuCtE;IAxDD,sBAAI,+CAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;;;OAAA;IAiBD,sBAAI,gEAAuB;aAA3B;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,sBAAI,mEAA0B;aAA9B;YACI,OAAO,CAAC,CAAC,CAAC;SACb;;;OAAA;IAED,sBAAI,6DAAoB;aAAxB;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;SAC1B;;;OAAA;IAED,sBAAI,+DAAsB;aAA1B;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC;SACpC;;;OAAA;IAED,sBAAI,yEAAgC;aAApC;YACI,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;;;OAAA;IAED,sBAAI,0EAAiC;aAArC;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,IAAI,CAAC;SAC/C;;;OAAA;IAED,sBAAI,oEAA2B;aAA/B;YACI,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;SACrD;;;OAAA;IAaM,8CAAQ,GAAf,eAAoB;;;;IAKb,2DAAqB,GAA5B,UACI,MAA0B;QAE1B,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE;YACjC,MAAM,KAAK,CACP,uEAAuE,CAC1E,CAAC;SACL;QAED,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,OAAO,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;KAC1D;IAEM,0DAAoB,GAA3B,UACI,MAAyB;QAEzB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC9C;IAEM,+CAAS,GAAhB,UAAiB,MAAgC;QAC7C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,MAAM,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;SACnC;KACJ;IAEM,sDAAgB,GAAvB,UAAyB,KAAqB;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1C;IAEM,qDAAe,GAAtB,UAAwB,KAAqB;QACzC,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,EAAE;YAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;aAAM,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;YACjC,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAED,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;IAEM,wDAAkB,GAAzB;QACI,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;KACtC;;;;;IAMO,yDAAmB,GAA3B,UAA4B,KAAU;QAClC,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QAED,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC9B,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAE9B,IAAM,EAAE,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;QACjC,IAAM,EAAE,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;QAClC,IAAM,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;QACvB,IAAM,EAAE,GAAG,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;QACvC,IAAM,EAAE,GAAG,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC;QAExC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAM,CAAC,OAAI,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAM,CAAC,OAAI,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,EAAE,GAAM,EAAE,GAAG,GAAG,MAAG,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAM,EAAE,GAAG,GAAG,MAAG,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;QAEtB,OAAO;KACV;;;;IAKO,kEAA4B,GAApC;QAAA,iBAOC;QANG,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,mCAAmC,GAAG,IAAI,CAAC,QAAQ;iBACnD,aAA4B,CAAC;YAElC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;SACvE;KACJ;IAEO,+CAAS,GAAjB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CACzC,IAAI,CAAC,UAAU,CAAC,aAAa,CAChC,CAAC;SACL;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC;SACjD;KACJ;IAEO,kDAAY,GAApB;QACI,IAAM,OAAO,GAAG,IAAI,CAAC,mCAAmC,CAAC;;QAGzD,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;YAChD,OAAO,CAAC,KAAK,EAAE,CAAC;SACnB;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SAC5B;KACJ;;gBA9H2B,iBAAiB;gBACrB,UAAU;gBACJ,gBAAgB;gDACzC,QAAQ,YACR,MAAM,SAAC,QAAQ;;IAlEpB;QADC,SAAS,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAC/B,eAAe;qEAAe;IAHnC,2BAA2B;QAlDvC,SAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,2DAAgD;YAChD,UAAU,EAAE;gBACR,OAAO,CAAC,YAAY,EAAE;oBAClB,UAAU,CACN,eAAe,EACf;wBACI,KAAK,CAAC,cAAc,CAAC;wBACrB,OAAO,CAAC,sCAAsC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;wBAC3D,OAAO,CACH,OAAO,EACP,SAAS,CAAC;4BACN,KAAK,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;4BAC3C,KAAK,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;4BAChD,KAAK,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;4BAC/C,KAAK,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;yBAChD,CAAC,CACL;wBACD,YAAY,EAAE;qBACjB,EACD;wBACI,MAAM,EAAE;4BACJ,CAAC,EAAE,KAAK;4BACR,CAAC,EAAE,KAAK;4BACR,EAAE,EAAE,KAAK;4BACT,EAAE,EAAE,KAAK;4BACT,KAAK,EAAE,CAAC;yBACX;qBACJ,CACJ;oBACD,UAAU,CACN,eAAe,EACf,CAAC,YAAY,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EACjD,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,CAC3D;iBACJ,CAAC;aACL;YACD,IAAI,EAAE;gBACF,qBAAqB,EAAE,0BAA0B;gBACjD,oBAAoB,EAAE,yBAAyB;gBAC/C,8BAA8B,EAAE,yBAAyB;gBACzD,iBAAiB,EAAE,4BAA4B;gBAC/C,WAAW,EAAE,sBAAsB;gBACnC,aAAa,EAAE,wBAAwB;gBACvC,wBAAwB,EAAE,kCAAkC;gBAC5D,yBAAyB,EAAE,mCAAmC;gBAC9D,eAAe,EAAE,6BAA6B;aACjD;SACJ,CAAC;QAqEO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;yCAJO,iBAAiB;YACrB,UAAU;YACJ,gBAAgB;OAnErC,2BAA2B,CAgMvC;IAAD,kCAAC;CAAA,CAhMgD,gBAAgB;;AC/FjE;;;AAKA;;;;;;;AAOA,SAAgB,YAAY,CAAC,IAAS;;IAAE,iBAAiB;SAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;QAAjB,gCAAiB;;IACrD,IAAI,IAAI,IAAI,IAAI,EAAE;QACd,MAAM,SAAS,CAAC,4CAA4C,CAAC,CAAC;KACjE;;QAED,KAAqB,IAAA,YAAA,SAAA,OAAO,CAAA,gCAAA,qDAAE;YAAzB,IAAM,MAAM,oBAAA;YACb,IAAI,MAAM,IAAI,IAAI,EAAE;gBAChB,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;oBACtB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;wBAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;qBAC3B;iBACJ;aACJ;SACJ;;;;;;;;;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;;AC5BD;;GAEG;;ACFH;;;AAkCO,IAAM,eAAe,GAAG,IAAI,cAAc,CAAM,eAAe,CAAC,CAAC;AAExE;;;AAGA,IAAa,0BAA0B,GAAG,IAAI,cAAc,CAE1D,4BAA4B,CAAC,CAAC;AAEhC,SAAgB,2CAA2C,CACvD,OAAgB;IAEhB,IAAM,EAAE,GAAG,cAAM,OAAA,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAA,CAAC;IAClD,OAAO,EAAE,CAAC;AACd,CAAC;AAED;AACA,IAAa,mCAAmC,GAAG;IAC/C,OAAO,EAAE,0BAA0B;IACnC,IAAI,EAAE,CAAC,OAAO,CAAC;IACf,UAAU,EAAE,2CAA2C;CAC1D,CAAC;AAEF;;;AAGA,IAAa,0BAA0B,GAAG,IAAI,cAAc,CACxD,4BAA4B,CAC/B,CAAC;AAGF;IA0CI,0BACY,OAAgB,EAChB,QAAkB,EACN,QAAkB,EACF,cAAmB,EAG/C,cAAwC,EAGxC,YAA8B,EAC9B,gBAAkC;QAX9C,iBAiBC;QAhBW,YAAO,GAAP,OAAO,CAAS;QAChB,aAAQ,GAAR,QAAQ,CAAU;QACN,aAAQ,GAAR,QAAQ,CAAU;QAI9B,mBAAc,GAAd,cAAc,CAA0B;QAGxC,iBAAY,GAAZ,YAAY,CAAkB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QApDtC,uBAAkB,GAAG,IAAI,GAAG,EAA0B,CAAC;QAEvD,4BAAuB,GAAwB,EAAE,CAAC;QAClD,0BAAqB,GAAG,IAAI,OAAO,EAAqB,CAAC;QACzD,+BAA0B,GAAG,IAAI,OAAO,EAAQ,CAAC;;;;;QA4BzD,mBAAc,GAAmB,KAAK,CAClC;YACI,OAAA,KAAI,CAAC,uBAAuB,CAAC,MAAM;kBAC7B,KAAI,CAAC,eAAe;kBACpB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SAAA,CAC5D,CAAC;QAiBE,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,YAAY,IAAI,QAAQ,EAAE;YAC3B,QAAQ,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,EAAE,GAAA,CAAC,CAAC;SAC7C;KACJ;IAnDD,sBAAI,yCAAW;;aAAf;YACI,OAAO,IAAI,CAAC,YAAY;kBAClB,IAAI,CAAC,YAAY,CAAC,WAAW;kBAC7B,IAAI,CAAC,uBAAuB,CAAC;SACtC;;;OAAA;IAGD,sBAAI,uCAAS;;aAAb;YACI,OAAO,IAAI,CAAC,YAAY;kBAClB,IAAI,CAAC,YAAY,CAAC,SAAS;kBAC3B,IAAI,CAAC,qBAAqB,CAAC;SACpC;;;OAAA;IAED,sBAAI,6CAAe;aAAnB;YACI,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;YACjC,OAAO,MAAM;kBACP,MAAM,CAAC,eAAe;kBACtB,IAAI,CAAC,0BAA0B,CAAC;SACzC;;;OAAA;IAmCM,+BAAI,GAAX,UACI,sBAAyD,EACzD,MAAiC;QAFrC,iBAiCC;QA7BG,MAAM,GAAG,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAE1D,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;YAC5C,MAAM,KAAK,CACP,sBACI,MAAM,CAAC,EAAE,qDACoC,CACpD,CAAC;SACL;QAED,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACvE,IAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CACtC,sBAAsB,EACtB,eAAe,EACf,UAAU,EACV,MAAM,CACT,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC1B,IAAI,CAAC,2CAA2C,EAAE,CAAC;SACtD;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjC,SAAS;aACJ,WAAW,EAAE;aACb,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAA,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,OAAO,SAAS,CAAC;KACpB;;;;IAKM,mCAAQ,GAAf;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAEhC,OAAO,CAAC,EAAE,EAAE;YACR,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;SAC/B;KACJ;;;;;IAMM,wCAAa,GAApB,UAAqB,EAAU;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,KAAK,EAAE,GAAA,CAAC,CAAC;KAC5D;IAEO,8CAAmB,GAA3B,UACI,sBAAyD,EACzD,eAA4C,EAC5C,UAAsB,EACtB,MAAgC;QAEhC,IAAM,SAAS,GAAG,IAAI,YAAY,CAC9B,UAAU,EACV,eAAe,EACf,MAAM,CAAC,EAAE,EACT,IAAI,CAAC,QAAQ,CAChB,CAAC;QAEF,IAAI,MAAM,CAAC,WAAW,EAAE;YACpB,UAAU,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC;gBACjC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;oBACzB,SAAS,CAAC,KAAK,EAAE,CAAC;iBACrB;aACJ,CAAC,CAAC;SACN;QAED,IAAI,sBAAsB,YAAY,WAAW,EAAE;SAClD;aAAM;YACH,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAChC,MAAM,EACN,SAAS,EACT,eAAe,CAClB,CAAC;YACF,IAAM,UAAU,GAAG,eAAe,CAAC,qBAAqB,CACpD,IAAI,eAAe,CAAC,sBAAsB,EAAE,SAAS,EAAE,QAAQ,CAAC,CACnE,CAAC;YACF,SAAS,CAAC,iBAAiB,GAAG,UAAU,CAAC,QAAQ,CAAC;SACrD;QAED,SAAS;aACJ,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;aACvC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAErC,OAAO,SAAS,CAAC;KACpB;IAEO,yCAAc,GAAtB,UACI,MAAgC,EAChC,SAA0B,EAC1B,eAA4C;QAE5C,IAAM,YAAY,GACd,MAAM;YACN,MAAM,CAAC,gBAAgB;YACvB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QACrC,IAAM,eAAe,GAAG,IAAI,OAAO,EAAE,CAAC;QAEtC,eAAe,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC7C,eAAe,CAAC,GAAG,CAAC,2BAA2B,EAAE,eAAe,CAAC,CAAC;QAClE,eAAe,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAElD,OAAO,IAAI,cAAc,CACrB,YAAY,IAAI,IAAI,CAAC,QAAQ,EAC7B,eAAe,CAClB,CAAC;KACL;IAEO,wCAAa,GAArB,UAAsB,MAAgC;QAClD,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KAC7C;IAEO,gDAAqB,GAA7B,UACI,UAAsB,EACtB,MAAgC;QAEhC,IAAM,eAAe,GAAG,IAAI,eAAe,CACvC,2BAA2B,EAC3B,MAAM,CAAC,gBAAgB,CAC1B,CAAC;QACF,IAAM,YAAY,GAEd,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACvC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAExC,OAAO,YAAY,CAAC,QAAQ,CAAC;KAChC;IAEO,2CAAgB,GAAxB,UAAyB,YAAsC;QAC3D,IAAM,KAAK,GAAG,IAAI,aAAa,CAAC;YAC5B,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE;YAClD,cAAc,EACV,YAAY,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE;YACxD,UAAU,EAAE,YAAY,CAAC,SAAS;YAClC,WAAW,EAAE,YAAY,CAAC,WAAW;YACrC,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,SAAS,EAAE,YAAY,CAAC,SAAS;YACjC,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,SAAS,EAAE,YAAY,CAAC,SAAS;SACpC,CAAC,CAAC;QAEH,IAAI,YAAY,CAAC,aAAa,EAAE;YAC5B,KAAK,CAAC,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;SACpD;QAED,OAAO,KAAK,CAAC;KAChB;IAEO,2CAAgB,GAAxB,UAAyB,SAA4B;QACjD,IAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAE9D,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACZ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;;;YAGlC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC1B,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAC,aAAa,EAAE,OAAO;oBACnD,IAAI,aAAa,EAAE;wBACf,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;qBACtD;yBAAM;wBACH,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;qBAC1C;iBACJ,CAAC,CAAC;gBAEH,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;gBAChC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;aAC/B;SACJ;KACJ;;;;IAKO,sEAA2C,GAAnD;QACI,IAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC;;QAGrE,IAAI,gBAAgB,CAAC,aAAa,EAAE;YAChC,IAAM,QAAQ,GAAG,gBAAgB,CAAC,aAAa,CAAC,QAAQ,CAAC;YAEzD,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC3C,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAE5B,IACI,OAAO,KAAK,gBAAgB;oBAC5B,OAAO,CAAC,QAAQ,KAAK,QAAQ;oBAC7B,OAAO,CAAC,QAAQ,KAAK,OAAO;oBAC5B,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,EACpC;oBACE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CACvB,OAAO,EACP,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CACtC,CAAC;oBACF,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;iBAC/C;aACJ;SACJ;KACJ;;gBAhOoB,OAAO;gBACN,QAAQ;gBACI,QAAQ,uBAArC,QAAQ;gDACR,MAAM,SAAC,0BAA0B;gDACjC,QAAQ,YACR,MAAM,SAAC,0BAA0B;gBAIZ,gBAAgB,uBAFrC,QAAQ,YACR,QAAQ;gBAEiB,gBAAgB;;IArDrC,gBAAgB;QAD5B,UAAU,EAAE;QA8CJ,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,0BAA0B,CAAC,CAAA;QAClC,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,0BAA0B,CAAC,CAAA;QAElC,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA;yCARM,OAAO;YACN,QAAQ;YACI,QAAQ,kBAOhB,gBAAgB;YACZ,gBAAgB;OArDrC,gBAAgB,CA4Q5B;IAAD,uBAAC;CA5QD,IA4QC;AAED;;;;;;AAMA,SAAS,mBAAmB,CACxB,MAAiC,EACjC,cAAyC;IAEzC,OAAO,YAAY,CAAC,IAAI,eAAe,EAAE,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;AACvE,CAAC;;AC1VD;;;AAkDA;AACA,IAAa,4BAA4B,GAAG,IAAI,cAAc,CAE5D,8BAA8B,CAAC,CAAC;AAElC;AACA,SAAgB,6CAA6C,CACzD,OAAgB;IAEhB,IAAM,EAAE,GAAG,cAAM,OAAA,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAA,CAAC;IAClD,OAAO,EAAE,CAAC;AACd,CAAC;AAED;AACA,IAAa,qCAAqC,GAAG;IACjD,OAAO,EAAE,4BAA4B;IACrC,IAAI,EAAE,CAAC,OAAO,CAAC;IACf,UAAU,EAAE,6CAA6C;CAC5D,CAAC;AAUF;IAA6C,wCAAc;IAsPvD,8BACW,OAAgB,EACf,gBAAkC,EAClC,aAA+B,EAC/B,MAAc,EACZ,cAAiC,EACrB,eAAmC,EACnB,qBAA0B,EAGtD,eAAmC,EAGrC,QAAa;QAbzB,YAeI,kBAAM,eAAe,EAAE,eAAe,CAAC,SAE1C;QAhBU,aAAO,GAAP,OAAO,CAAS;QACf,sBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAa,GAAb,aAAa,CAAkB;QAC/B,YAAM,GAAN,MAAM,CAAQ;QACZ,oBAAc,GAAd,cAAc,CAAmB;QACrB,qBAAe,GAAf,eAAe,CAAoB;QAI/C,qBAAe,GAAf,eAAe,CAAoB;QAGrC,cAAQ,GAAR,QAAQ,CAAK;;QA/PlB,mBAAa,GAAsB,EAAE,CAAC;;QAItC,gBAAU,GAAsB,EAAE,CAAC;;;;;;;QAoElC,iBAAW,GAAe,MAAM,CAAC;;;;QAkBzC,iBAAW,GAAe,OAAO,CAAC;;QAgC1B,aAAO,GAAG,KAAK,CAAC;;;;QAqBxB,uBAAiB,GAAG,IAAI,YAAY,EAAO,CAAC;;;;QAM5C,qBAAe,GAAG,IAAI,YAAY,EAAO,CAAC;;;;;QAO1C,kBAAY,GAAG,IAAI,YAAY,EAAK,CAAC;;;;;QAOrC,mBAAa,GAAG,IAAI,YAAY,EAAK,CAAC;;;;QAK/B,2BAAqB,GAAG,IAAI,YAAY,EAAW,CAAC;;;;QAKpD,oBAAc,GAAG,IAAI,YAAY,EAAW,CAAC;QAQ5C,gBAAU,GAAG,YAAY,CAAC,KAAK,CAAC;QAChC,yBAAmB,GAAG,YAAY,CAAC,KAAK,CAAC;QACzC,8BAAwB,GAAG,YAAY,CAAC,KAAK,CAAC;QAC9C,2BAAqB,GAAG,YAAY,CAAC,KAAK,CAAC;;QAG3C,8BAAwB,GAAuB,IAAI,CAAC;QAiBpD,gBAAU,GAAQ,EAAE,CAAC;QAsDzB,KAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;;KACtD;IA1PD,sBAAI,yCAAO;aAAX;;;YAGI,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;YAED,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,QAAQ,EAAE;oBACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC;iBACtC;qBAAM,IACH,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,OAAO;oBACpC,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,WAAW,EAC1C;oBACE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;iBAC1C;qBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,SAAS,EAAE;oBAC/C,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;iBAC1C;aACJ;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;aAED,UAAY,IAAc;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAC7B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CACzC,CAAC;SACL;;;OANA;IAWD,sBAAI,uCAAK;aAAT;YACI,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YAED,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,QAAQ,EAAE;oBACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC;iBACtC;qBAAM,IACH,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,OAAO;oBACpC,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,WAAW,EAC1C;oBACE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;iBAC1C;aACJ;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;aAED,UAAU,IAAc;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAC3B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CACzC,CAAC;SACL;;;OANA;IAgBD,sBAAI,4CAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,GAAe;YAC1B,IAAI,GAAG,KAAK,IAAI,CAAC,WAAW,EAAE;gBAC1B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;gBACvB,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;iBAC1C;aACJ;SACJ;;;OATA;IAgBD,sBAAI,4CAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,IAAgB;YAC3B,IAAI,IAAI,KAAK,OAAO,EAAE;gBAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B;iBAAM;gBACH,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;aAC/B;SACJ;;;OARA;IAaD,sBAAI,0CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ;kBAC9C,IAAI,CAAC,QAAQ,CAAC,QAAQ;kBACtB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;SAC1B;aAED,UAAa,KAAc;YACvB,KAAK,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE;gBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC;SACJ;;;OARA;IAaD,sBAAI,wCAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;aAED,UAAW,GAAY;YACnB,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;SACpC;;;OAJA;IAgED,sBAAI,yCAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;;;OAAA;IAGD,sBAAI,0CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,KAAe;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC;;;OALA;IAQD,sBAAI,2CAAS;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;aAED,UAAc,MAAW;YACrB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC;;;OALA;IAQD,sBAAI,6CAAW;;aAAf;YACI,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;SAC7C;;;OAAA;IAGD,sBAAI,6CAAW;;aAAf;YACI,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;SAC7C;;;OAAA;IAED,sBAAI,gDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;SACxD;;;OAAA;IAED,sBAAI,4CAAU;aAAd;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;SACnC;;;OAAA;IAED,sBAAI,gDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;SACvC;;;OAAA;IAED,sBAAI,+CAAa;aAAjB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;SACtC;;;OAAA;IAuBM,uCAAQ,GAAf,eAAoB;IAEb,0CAAW,GAAlB;QACI,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;QAE/B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SAC3B;KACJ;IAEM,4CAAa,GAApB,UAAqB,KAAmC;QAAxD,iBAiBC;QAhBG,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,MAAM,KAAK,CACP,kEAAkE,CACrE,CAAC;SACL;QAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CACjD,UAAC,KAAqB;YAClB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACtB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;iBAAM;gBACH,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;SACJ,CACJ,CAAC;KACL;IAEM,mCAAI,GAAX;QAAA,iBAoDC;QAnDG,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC/B,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,MAAM,KAAK,CACP,+DAA+D,CAClE,CAAC;SACL;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;SAC/D;;QAGD,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;SACvC;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;SACzC;;;QAID,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC3C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC5C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC3C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC5C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC9C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CACjD,CAAC;SACL;QAED,IAAI,CAAC,UAAU,KAAK,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAExE,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC;;QAGnC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CACtE;YACI,KAAI,CAAC,KAAK,EAAE,CAAC;SAChB,CACJ,CAAC;;QAGF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,SAAS,CAChF,UAAC,KAAU;YACP,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC7B,CACJ,CAAC;KACL;;;;IAKM,qCAAM,GAAb,UAAc,IAAa;QACvB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,IAAI,CAAC,SAAS,YAAO,IAAI,CAAC,CAAC;SAC9B;aAAM;YACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;;;;;;;;;;QAWD,IACI,IAAI,CAAC,UAAU,KAAK,QAAQ;YAC5B,IAAI,CAAC,UAAU,KAAK,UAAU;aAC7B,CAAC,IAAI,CAAC,UAAU,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ;iBAC1C,IAAI,CAAC,UAAU,KAAK,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACrD,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACnD,IAAI,CAAC,UAAU,KAAK,OAAO;oBACxB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7B;YACE,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;KACJ;;;;IAKM,yCAAU,GAAjB,UAAkB,cAAiB;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC1C;;;;IAKM,0CAAW,GAAlB,UAAmB,eAAkB;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KAC5C;;;;IAKM,oCAAK,GAAZ;QAAA,iBA0DC;QAzDG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;SACV;QAED,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE;YAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SAC1B;QAED,IACI,IAAI,CAAC,qBAAqB;YAC1B,IAAI,CAAC,qBAAqB,CAAC,UAAU,EACvC;YACE,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;SACvC;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;YACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAC/B,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;YAC5C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;SACxC;QAED,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5B,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;YACzC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;SACrC;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;QAED,IAAM,aAAa,GAAG;YAClB,IAAI,KAAI,CAAC,OAAO,EAAE;gBACd,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClC,KAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;aACxC;SACJ,CAAC;QAEF,IACI,IAAI,CAAC,wBAAwB;YAC7B,OAAO,IAAI,CAAC,wBAAwB,CAAC,KAAK,KAAK,UAAU,EAC3D;;;;;;YAME,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;YACtC,UAAU,CAAC,aAAa,CAAC,CAAC;SAC7B;aAAM;YACH,aAAa,EAAE,CAAC;SACnB;KACJ;;;;IAKM,4CAAa,GAApB,UAAqB,KAAW;QAC5B,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAM,QAAQ,GACV,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;YAChE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC7C;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACnD;QAED,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,OAAO;KACV;;;;IAKO,2CAAY,GAApB;QAAA,iBAsBC;QArBG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CACpC,6BAA6B,EAC7B;YACI,SAAS,EAAE,KAAK;YAChB,aAAa;gBACT,2BAA2B;eACxB,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CACrC;YACD,SAAS,YAAG,eAAe,GAAK,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7D,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,cAAc,EACV,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,qBAAqB,EAAE;SAC1D,CACJ,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;QAExD,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;YACjC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;KAC9D;;;;IAKO,0CAAW,GAAnB;QAAA,iBAiCC;QAhCG,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC7B,IAAI,CAAC,qBAAqB,GAAG,IAAI,eAAe,CAE9C,6BAA6B,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC3D;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE;YAC9B,IAAM,YAAY,GAEd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,QAAQ,CAAC;;YAG7C,IAAI,CAAC,MAAM,CAAC,QAAQ;iBACf,YAAY,EAAE;iBACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC;gBACP,KAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;aAClC,CAAC,CAAC;;YAGP,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB;iBAC/D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC;gBACP,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB,CAAC,CAAC;SACV;KACJ;IAEO,0CAAW,GAAnB;QAAA,iBA6BC;QA5BG,IAAM,aAAa,GAAG,IAAI,aAAa,CAAC;YACpC,gBAAgB,EAAE,IAAI,CAAC,2BAA2B,EAAE;YACpD,WAAW,EAAE,IAAI;YACjB,aAAa;gBACT,kCAAkC;eAC/B,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CACrC;YACD,cAAc,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,qBAAqB,EAAE;YACnE,UAAU,YAAG,cAAc,GAAK,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAChE,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAEnD,KAAK,CACD,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,EAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAC3B,IAAI,CAAC,QAAQ;aACR,aAAa,EAAE;aACf,IAAI,CACD,MAAM,CACF,UAAA,KAAK;YACD,OAAA,KAAK,CAAC,OAAO,KAAK,MAAM;iBACvB,KAAI,CAAC,QAAQ;oBACV,KAAK,CAAC,MAAM;oBACZ,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAC;SAAA,CACtC,CACJ,CACR,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;KACnC;;;;IAKO,0DAA2B,GAAnC;QACI,OAAO,IAAI,CAAC,OAAO;aACd,QAAQ,EAAE;aACV,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;aAC7C,qBAAqB,CAAC,mBAAmB,CAAC;aAC1C,sBAAsB,CAAC,KAAK,CAAC;aAC7B,QAAQ,CAAC,KAAK,CAAC;aACf,aAAa,CAAC;YACX;gBACI,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,QAAQ;gBACjB,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,QAAQ;aACrB;YACD;gBACI,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,QAAQ;gBACjB,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,QAAQ;aACrB;YACD;gBACI,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,CAAC,GAAG;aAChB;YACD;gBACI,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,CAAC,GAAG;aAChB;SACJ,CAAC,CAAC;KACV;;gBAvXmB,OAAO;gBACG,gBAAgB;gBACnB,gBAAgB;gBACvB,MAAM;gBACI,iBAAiB;gBACJ,eAAe,uBAArD,QAAQ;gDACR,MAAM,SAAC,4BAA4B;gDACnC,QAAQ,YACR,MAAM,SAAC,qBAAqB;gDAE5B,QAAQ,YACR,MAAM,SAAC,QAAQ;;IA9PpB;QADC,KAAK,EAAE;;+DACqC;IAI7C;QADC,KAAK,EAAE;;4DACkC;IAK1C;QADC,KAAK,EAAE;;;uDAsBP;IAWD;QADC,KAAK,EAAE;;;qDAkBP;IAgBD;QADC,KAAK,EAAE;;;0DAGP;IAgBD;QADC,KAAK,EAAE;;;0DAGP;IAaD;QADC,KAAK,EAAE;;;wDAKP;IAaD;QADC,KAAK,EAAE;;;sDAGP;IAWD;QADC,KAAK,EAAE;;gEAC8B;IAMtC;QADC,MAAM,EAAE;;mEACmC;IAM5C;QADC,MAAM,EAAE;;iEACiC;IAO1C;QADC,MAAM,EAAE;;8DAC4B;IAOrC;QADC,MAAM,EAAE;;+DAC6B;IAvK7B,oBAAoB;QARhC,SAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,aAAa;YACvB,YAAgD;YAEhD,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,mBAAmB,EAAE,KAAK;;SAC7B,CAAC;QA6PO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,4BAA4B,CAAC,CAAA;QACpC,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;QAE7B,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;yCAXD,OAAO;YACG,gBAAgB;YACnB,gBAAgB;YACvB,MAAM;YACI,iBAAiB;YACJ,eAAe;OA5PjD,oBAAoB,CA+mBhC;IAAD,2BAAC;CAAA,CA/mB4C,WAAW;;AC9ExD;;;;IA6CI,qCAAuB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAFhD,iBAAY,GAAG,YAAY,CAAC,KAAK,CAAC;KAGzC;IAfD,sBAAI,iDAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,KAAK,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;SACnF;aAED,UAAc,KAAc;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;;;OAJA;IAMD,sBAAI,kEAAyB;aAA7B;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;;;OAAA;IAOM,8CAAQ,GAAf;KACC;IAEM,iDAAW,GAAlB,UAAoB,OAAsB;QACtC,IAAI,OAAO,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;KACJ;IAEM,wDAAkB,GAAzB;QACI,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;IAEM,iDAAW,GAAlB;QACI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACnC;IAEM,uDAAiB,GAAxB,UAA0B,KAAY;QAClC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;KACJ;IAEO,uDAAiB,GAAzB;QAAA,iBAaC;QAZG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAEhC,IAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO;YACxD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,GAAGA,EAAY,EAAE,CAAC;QAE1D,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ;YAChC,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAGA,EAAY,EAAE,CAAC;QAElD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,EAAE,aAAa,CAAC;aACnD,SAAS,CAAC;YACP,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC,CAAC,CAAC;KACV;;gBAxCsC,iBAAiB;;IAlB3B;QAA5B,KAAK,CAAC,oBAAoB,CAAC;kCAAW,oBAAoB;iEAAI;IAI/D;QADC,KAAK,EAAE;;;+DAGP;IARQ,2BAA2B;QAPvC,SAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,IAAI,EAAE;gBACF,SAAS,EAAE,2BAA2B;gBACtC,iCAAiC,EAAE,2BAA2B;aACjE;SACJ,CAAC;yCAqByC,iBAAiB;OApB/C,2BAA2B,CA6DvC;IAAD,kCAAC;CA7DD;;ACzBA;;;IAuCa,2BAA2B,GAAQ;IAC5C,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,yBAAyB,GAAA,CAAC;IACxD,KAAK,EAAE,IAAI;CACd,CAAC;AAEF,IAAa,uBAAuB,GAAQ;IACxC,OAAO,EAAE,aAAa;IACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,yBAAyB,GAAA,CAAC;IACxD,KAAK,EAAE,IAAI;CACd,CAAC;AAqBF;IAkYI,mCACY,MAAkB,EAClB,QAAmB,EAEnB,eAAmC,EAEnC,eAAmC;QAN/C,iBA0BC;QAzBW,WAAM,GAAN,MAAM,CAAY;QAClB,aAAQ,GAAR,QAAQ,CAAW;QAEnB,oBAAe,GAAf,eAAe,CAAoB;QAEnC,oBAAe,GAAf,eAAe,CAAoB;;;;QAvSvC,gBAAW,GAAe,QAAQ,CAAC;;;;QAuB3C,mBAAc,GAAG,GAAG,CAAC;QAwBb,YAAO,GAAQ,EAAE,CAAC;;;;QAgC1B,mBAAc,GAAG,IAAI,YAAY,EAAO,CAAC;;;;QAMzC,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;QAqBhC,gBAAW,GAAiB,YAAY,CAAC,KAAK,CAAC;QAC/C,cAAS,GAAiB,YAAY,CAAC,KAAK,CAAC;QAE7C,mBAAc,GAAG,IAAI,CAAC;QAEtB,kBAAa,GAAa,eAAQ,CAAC;QACnC,mBAAc,GAAa,eAAQ,CAAC;QACpC,sBAAiB,GAAa,eAAQ,CAAC;;QAGvC,mBAAc,GAAgB;YAClC,OAAO,KAAI,CAAC,cAAc;kBACpB,IAAI;kBACJ,EAAE,gBAAgB,EAAE,EAAE,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE,CAAC;SACzE,CAAA;;QAGO,iBAAY,GAAgB,UAChC,OAAwB;YAExB,IAAI,KAAI,CAAC,cAAc,EAAE;gBACrB,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,CAClC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAClD,CAAC;gBACF,OAAO,CAAC,KAAI,CAAC,GAAG;oBACZ,CAAC,YAAY;oBACb,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC;sBACvD,IAAI;sBACJ,EAAE,cAAc,EAAE,EAAE,GAAG,EAAE,KAAI,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,CAAC;aACrE;iBAAM,IAAI,KAAI,CAAC,aAAa,IAAI,OAAO,CAAC,KAAK,EAAE;gBAC5C,IAAM,gBAAgB,GAAG,KAAI,CAAC,YAAY,CACtC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;gBACF,IAAM,cAAc,GAAG,KAAI,CAAC,YAAY,CACpC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;gBACF,OAAO,CAAC,KAAI,CAAC,GAAG;oBACZ,CAAC,gBAAgB;oBACjB,CAAC,cAAc;oBACf,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,IAAI,CAAC;sBAC3D,IAAI;sBACJ;wBACI,cAAc,EAAE;4BACZ,GAAG,EAAE,KAAI,CAAC,GAAG;4BACb,MAAM,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC;yBAC7C;qBACJ,CAAC;aACX;SACJ,CAAA;;QAGO,iBAAY,GAAgB,UAChC,OAAwB;YAExB,IAAI,KAAI,CAAC,cAAc,EAAE;gBACrB,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,CAClC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAClD,CAAC;gBACF,OAAO,CAAC,KAAI,CAAC,GAAG;oBACZ,CAAC,YAAY;oBACb,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC;sBACvD,IAAI;sBACJ,EAAE,cAAc,EAAE,EAAE,GAAG,EAAE,KAAI,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,CAAC;aACrE;iBAAM,IAAI,KAAI,CAAC,aAAa,IAAI,OAAO,CAAC,KAAK,EAAE;gBAC5C,IAAM,gBAAgB,GAAG,KAAI,CAAC,YAAY,CACtC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;gBACF,IAAM,cAAc,GAAG,KAAI,CAAC,YAAY,CACpC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;gBACF,OAAO,CAAC,KAAI,CAAC,GAAG;oBACZ,CAAC,gBAAgB;oBACjB,CAAC,cAAc;oBACf,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAI,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,CAAC;sBACzD,IAAI;sBACJ;wBACI,cAAc,EAAE;4BACZ,GAAG,EAAE,KAAI,CAAC,GAAG;4BACb,MAAM,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC;yBAC7C;qBACJ,CAAC;aACX;SACJ,CAAA;;QAGO,oBAAe,GAAgB,UACnC,OAAwB;YAExB,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,CAClC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAClD,CAAC;YACF,OAAO,CAAC,KAAI,CAAC,eAAe;gBACxB,CAAC,YAAY;gBACb,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC;kBAChC,IAAI;kBACJ,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;SACrC,CAAA;;;;;QAMO,mBAAc,GAAgB,UAClC,OAAwB;YAExB,IAAI,KAAI,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACvC,OAAO,IAAI,CAAC;aACf;YAED,IAAM,gBAAgB,GAAG,KAAI,CAAC,YAAY,CACtC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;YACF,IAAM,cAAc,GAAG,KAAI,CAAC,YAAY,CACpC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;YAEF,OAAO,CAAC,gBAAgB;gBACpB,CAAC,cAAc;gBACf,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,gBAAgB,EAAE,cAAc,CAAC,IAAI,CAAC;kBACjE,IAAI;kBACJ,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC;SACpC,CAAA;;;;;QAMO,2BAAsB,GAAgB,UAC1C,OAAwB;YAExB,IAAI,KAAI,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE;gBACzD,OAAO,IAAI,CAAC;aACf;YAED,IAAM,gBAAgB,GAAG,KAAI,CAAC,YAAY,CACtC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;YACF,IAAM,cAAc,GAAG,KAAI,CAAC,YAAY,CACpC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC;YAEF,OAAO,CAAC,gBAAgB;gBACpB,CAAC,cAAc;kBACb,EAAE,wBAAwB,EAAE,CAAC,gBAAgB,EAAE,cAAc,CAAC,EAAE;kBAChE,IAAI,CAAC;SACd,CAAA;;QAGO,cAAS,GAAuB,UAAU,CAAC,OAAO,CAAC;YACvD,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,YAAY;YACjB,IAAI,CAAC,YAAY;YACjB,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,sBAAsB;SAC9B,CAAC,CAAC;;QAGI,gBAAW,GAAG,IAAI,YAAY,EAAkB,CAAC;;QAGjD,mBAAc,GAAG,IAAI,YAAY,EAAW,CAAC;QA6BhD,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,MAAM,KAAK,CACP,gGAAgG;gBAC5F,mGAAmG;gBACnG,wBAAwB,CAC/B,CAAC;SACL;QAED,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,MAAM,KAAK,CACP,uGAAuG;gBACnG,mGAAmG;gBACnG,wBAAwB,CAC/B,CAAC;SACL;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC;YAC1D,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC;SAC3B,CAAC,CAAC;KACN;IA9YD,sBAAI,+CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,KAAU;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC;YACvC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;;;OALA;IAWD,sBAAI,kDAAW;;;;aAAf,UAAgB,KAA8B;YAC1C,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;SACtC;;;OAAA;IAMD,sBAAI,wDAAiB;;;;aAArB,UAAsB,MAAmC;YACrD,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;YAC9B,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;;;OAAA;IAGD,sBAAI,qDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;SAC/B;;;OAAA;IAKD,sBAAI,+CAAQ;aAAZ;YACI,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;SAC3B;aAED,UAAa,KAAc;YACvB,IAAM,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;YAE1C,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;gBAC7B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtC;;YAGD,IAAI,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;;;;gBAI1B,OAAO,CAAC,IAAI,EAAE,CAAC;aAClB;SACJ;;;OAlBA;IAuBD,sBAAI,0CAAG;aAAP;YACI,OAAO,IAAI,CAAC,IAAI,CAAC;SACpB;aAED,UAAQ,KAAe;YACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;;;OALA;IAUD,sBAAI,0CAAG;aAAP;YACI,OAAO,IAAI,CAAC,IAAI,CAAC;SACpB;aAED,UAAQ,KAAe;YACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;;;OALA;IAYD,sBAAI,iDAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,IAAgB;YAC3B,IACI,IAAI,KAAK,QAAQ;gBACjB,IAAI,KAAK,OAAO;gBAChB,IAAI,KAAK,WAAW;gBACpB,IAAI,KAAK,SAAS,EACpB;gBACE,MAAM,KAAK,CAAC,8CAA8C,CAAC,CAAC;aAC/D;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;;;OAbA;IAuBD,sBAAI,4CAAK;aAAT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;aAED,UAAU,KAAe;YACrB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACpE,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACjC,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;YAGpB,IAAI,CAAC,sBAAsB,EAAE,CAAC;;YAG9B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;gBAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAChC;SACJ;;;OAhBA;IAoBD,sBAAI,6CAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;aAED,UAAW,MAAW;YAAtB,iBAoBC;YAnBG,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC;oBACvB,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBACxC,OAAO,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;iBAC/B,CAAC,CAAC;gBACH,IAAI,CAAC,cAAc;oBACf,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;yBAChD,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4BACb,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1D;iBAAM;gBACH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC9B;;YAGD,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAE9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACvC;;;OAtBA;IAoCD,sBAAI,iDAAU;aAAd;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;;;OAAA;IAED,sBAAI,qDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,CAAC;SACxC;;;OAAA;IAED,sBAAI,oDAAa;aAAjB;YACI,QACI,IAAI,CAAC,WAAW,KAAK,OAAO;gBAC5B,IAAI,CAAC,WAAW,KAAK,WAAW;gBAChC,IAAI,CAAC,WAAW,KAAK,SAAS,EAChC;SACL;;;OAAA;IAwKD,sBAAI,mEAA4B;aAAhC;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,sBAAI,+DAAwB;aAA5B;YACI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAC;SAC7D;;;OAAA;IAED,sBAAI,iDAAU;aAAd;YACI,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACrE;;;OAAA;IAED,sBAAI,iDAAU;aAAd;YACI,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACrE;;;OAAA;IAED,sBAAI,+DAAwB;aAA5B;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;;;OAAA;IA8BM,4CAAQ,GAAf;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,MAAM,KAAK,CACP,yFAAyF,CAC5F,CAAC;SACL;KACJ;IAEM,sDAAkB,GAAzB;QAAA,iBAuBC;QAtBG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,SAAS,CAC5D,UAAC,SAAkB;YACf,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBAC1B,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;aAC3B;iBAAM;gBACH,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC;aAC1B;YAED,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC9B,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;gBACrB,MAAM,EAAE,KAAI;gBACZ,KAAK,EAAE,SAAS;gBAChB,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa;aACnC,CAAC,CAAC;YACH,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,KAAI;gBACZ,KAAK,EAAE,SAAS;gBAChB,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa;aACnC,CAAC,CAAC;SACN,CACJ,CAAC;KACL;IAEM,+CAAW,GAAlB;QACI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAClC;IAEM,8CAAU,GAAjB,UAAkB,KAAU;QACxB,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACvB;KACJ;IAEM,oDAAgB,GAAvB,UAAwB,EAAO;QAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KAC3B;IAEM,qDAAiB,GAAxB,UAAyB,EAAO;QAC5B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC5B;IAEM,oDAAgB,GAAvB,UAAwB,UAAmB;QACvC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC9B;IAEM,4CAAQ,GAAf,UAAgB,CAAkB;QAC9B,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KACpD;IAEM,6DAAyB,GAAhC,UAAiC,EAAc;QAC3C,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC/B;;;;IAKM,uDAAmB,GAA1B,UAA2B,KAAoB;QAC3C,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;YAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;KACJ;IAEM,oDAAgB,GAAvB,UAAwB,KAAY;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAEM,qDAAiB,GAAxB,UAAyB,KAAU;QAC/B,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;SACvC;aAAM,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,EAAE;YACrC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;SACtC;aAAM;YACH,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC;SAC5C;KACJ;IAEM,sDAAkB,GAAzB,UAA0B,KAAU;QAEhC,IAAI,CAAC,CAAC;QACN,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3B,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;SACnB;QAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACrB,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;SACnC,CAAC,CAAC;KACN;;;;IAKM,0DAAsB,GAA7B;QACI,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,OAAO,EACP,IAAI,CAAC,MAAM;kBACL,IAAI,CAAC,eAAe,CAAC,MAAM,CACvB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,QAAQ,CAAC,YAAY,CAC7B;kBACD,EAAE,CACX,CAAC;SACL;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAE3B,IAAM,aAAa,GAAG,IAAI;sBACpB,IAAI,CAAC,eAAe,CAAC,MAAM,CACvB,IAAI,EACJ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAC7B;sBACD,EAAE,CAAC;gBACT,IAAM,WAAW,GAAG,EAAE;sBAChB,IAAI,CAAC,eAAe,CAAC,MAAM,CACvB,EAAE,EACF,IAAI,CAAC,QAAQ,CAAC,YAAY,CAC7B;sBACD,EAAE,CAAC;gBAET,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,EAAE;oBAChC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,OAAO,EACP,IAAI,CACP,CAAC;iBACL;qBAAM;oBACH,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,EAAE;wBAC9B,IAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,OAAO,EACP,aAAa;4BACT,GAAG;4BACH,IAAI,CAAC,cAAc;4BACnB,GAAG;4BACH,WAAW,CAClB,CAAC;qBACL;yBAAM,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;wBACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,OAAO,EACP,aAAa,CAChB,CAAC;qBACL;yBAAM,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;wBACvC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,OAAO,EACP,WAAW,CACd,CAAC;qBACL;iBACJ;aACJ;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,OAAO,EACP,EAAE,CACL,CAAC;aACL;SACJ;QAED,OAAO;KACV;;;;IAKO,0DAAsB,GAA9B,UAA+B,MAA+B;QAC1D,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACrC;KACJ;;;;IAKO,gDAAY,GAApB,UAAqB,GAAQ;QACzB,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC;cAC/B,GAAG;cACH,IAAI,CAAC;KACd;;;;;;;IAQO,qEAAiC,GAAzC,UACI,UAAkB,EAClB,QAAW;QAEX,IAAI,UAAU,EAAE;YACZ,IAAM,CAAC,GAAG,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;YACjD,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAC1C,CAAC,EACD,IAAI,CAAC,eAAe,CAAC,eAAe,CACvC,CAAC;YACF,OAAO,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC;SACxC;aAAM;YACH,OAAO,IAAI,CAAC;SACf;KACJ;;;;IAKO,2DAAuB,GAA/B,UAAgC,UAAkB;QAC9C,IAAI,KAAK,GAAG,UAAU,CAAC;QACvB,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,OAAO,EAAE;YACtC,KAAK,GAAG,IAAI,CAAC,iCAAiC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACrE;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CACnC,KAAK,EACL,IAAI,CAAC,eAAe,CAAC,UAAU,CAClC,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtE,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;;;QAInC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,MAAM,KAAK,IAAI,EAAE;YAC3D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,IAAI;gBACZ,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;aACnC,CAAC,CAAC;SACN;KACJ;;;;IAKO,gEAA4B,GAApC,UAAqC,UAAkB;QACnD,IAAM,aAAa,GACf,IAAI,CAAC,WAAW,KAAK,WAAW;cAC1B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;cACf,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,OAAO,EAAE;YACtC,UAAU,GAAG,IAAI,CAAC,iCAAiC,CAC/C,UAAU,EACV,aAAa,CAChB,CAAC;SACL;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CACnC,UAAU,EACV,IAAI,CAAC,eAAe,CAAC,UAAU,CAClC,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtE,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;;QAGnC,IACI,CAAC,IAAI,CAAC,WAAW,KAAK,WAAW;YAC7B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzC,MAAM;aACT,IAAI,CAAC,WAAW,KAAK,SAAS;gBAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAC,EACb;YACE,OAAO;SACV;QAED,IAAI,CAAC,OAAO;YACR,IAAI,CAAC,WAAW,KAAK,WAAW;kBAC1B,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;kBACzB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACpB,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,IAAI,CAAC,OAAO;YACnB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;SACnC,CAAC,CAAC;KACN;;;;IAKO,0DAAsB,GAA9B,UAA+B,UAAkB;QAC7C,IAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACxD,IAAI,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAE5B,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,OAAO,EAAE;YACtC,UAAU,GAAG,IAAI,CAAC,iCAAiC,CAC/C,UAAU,EACV,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CACjB,CAAC;YACF,QAAQ,GAAG,IAAI,CAAC,iCAAiC,CAC7C,QAAQ,EACR,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CACjB,CAAC;SACL;QAED,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CACjC,UAAU,EACV,IAAI,CAAC,eAAe,CAAC,UAAU,CAClC,CAAC;QACF,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAC/B,QAAQ,EACR,IAAI,CAAC,eAAe,CAAC,UAAU,CAClC,CAAC;QACF,IAAI,CAAC,cAAc;YACf,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC;iBAC3C,CAAC,EAAE,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC/B,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;;QAG3B,IACI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACxC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aACrC,IAAI,KAAK,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,EAChC;YACE,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,IAAI;gBACZ,KAAK,EAAE,IAAI,CAAC,OAAO;gBACnB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;aACnC,CAAC,CAAC;SACN;KACJ;;;;IAKO,+CAAW,GAAnB,UAAoB,KAAe,EAAE,MAAgB;QACjD,IAAI,KAAK,IAAI,MAAM,EAAE;YACjB,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;SAC5D;QAED,OAAO,KAAK,KAAK,MAAM,CAAC;KAC3B;;gBAvYmB,UAAU;gBACR,SAAS;gBAEF,eAAe,uBADvC,QAAQ;gDAER,QAAQ,YAAI,MAAM,SAAC,qBAAqB;;IAzX7C;QADC,KAAK,EAAE;;;6DAGP;IAWD;QADC,KAAK,EAAE;kCACe,oBAAoB;yCAApB,oBAAoB;gEAE1C;IAMD;QADC,KAAK,EAAE;;;sEAIP;IASD;QADC,KAAK,EAAE;;gEACmB;IA0B3B;QADC,KAAK,EAAE;;;wDAGP;IAUD;QADC,KAAK,EAAE;;;wDAGP;IAYD;QADC,KAAK,EAAE;;;+DAGP;IAmBD;QADC,KAAK,EAAE;;qEACa;IAIrB;QADC,KAAK,EAAE;;;0DAGP;IAoBD;QADC,KAAK,EAAE;;;2DAGP;IA4BD;QADC,MAAM,EAAE;;qEACgC;IAMzC;QADC,MAAM,EAAE;;oEAC+B;IAtL/B,yBAAyB;QAnBrC,SAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,kBAAkB;YAC5B,IAAI,EAAE;gBACF,WAAW,EAAE,6BAA6B;gBAC1C,QAAQ,EAAE,0BAA0B;gBACpC,SAAS,EAAE,2BAA2B;gBACtC,UAAU,EAAE,4BAA4B;gBACxC,sBAAsB,EAAE,8BAA8B;gBACtD,kBAAkB,EAAE,0BAA0B;gBAC9C,YAAY,EAAE,YAAY;gBAC1B,YAAY,EAAE,YAAY;gBAC1B,YAAY,EAAE,0BAA0B;aAC3C;YACD,SAAS,EAAE;gBACP,2BAA2B;gBAC3B,uBAAuB;aAC1B;SACJ,CAAC;QAsYO,WAAA,QAAQ,EAAE,CAAA;QAEV,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;yCAJ1B,UAAU;YACR,SAAS;YAEF,eAAe;OAtYnC,yBAAyB,CA2wBrC;IAAD,gCAAC;CA3wBD;;ACtEA;;;;IAkBI,sBACW,KAAa,EACb,YAAoB,EACpB,SAAiB,EACjB,OAAgB,EAChB,GAAoB,EACpB,SAAsB;QADtB,oBAAA,EAAA,WAAoB;QACpB,0BAAA,EAAA,cAAsB;QALtB,UAAK,GAAL,KAAK,CAAQ;QACb,iBAAY,GAAZ,YAAY,CAAQ;QACpB,cAAS,GAAT,SAAS,CAAQ;QACjB,YAAO,GAAP,OAAO,CAAS;QAChB,QAAG,GAAH,GAAG,CAAiB;QACpB,cAAS,GAAT,SAAS,CAAa;KAC7B;IACR,mBAAC;AAAD,CAAC,IAAA;;IA8EG,kCAAoB,MAAkB,EAAU,MAAc;QAA1C,WAAM,GAAN,MAAM,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;;;;QA5D9D,eAAU,GAAG,CAAC,CAAC;;;;QAYf,YAAO,GAAG,CAAC,CAAC;;;;QAMZ,cAAS,GAAG,CAAC,CAAC;;;;QAwBE,WAAM,GAAG,IAAI,YAAY,EAAgB,CAAC;KAkBQ;IAhBlE,sBAAI,4DAAsB;aAA1B;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,sBAAI,oDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC;SACvC;;;OAAA;IAED,sBAAI,mDAAa;aAAjB;YACI,QACI,IAAI,CAAC,UAAU,KAAK,OAAO;gBAC3B,IAAI,CAAC,UAAU,KAAK,WAAW;gBAC/B,IAAI,CAAC,UAAU,KAAK,SAAS,EAC/B;SACL;;;OAAA;IAIM,2CAAQ,GAAf,eAAoB;IAEb,6CAAU,GAAjB,UAAkB,IAAkB;QAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAEM,+CAAY,GAAnB,UAAoB,QAAgB,EAAE,QAAgB;QAClD,IAAM,UAAU,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACtD,OAAO,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC;KACzC;;;;IAKM,6CAAU,GAAjB,UAAkB,KAAa;QAC3B,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1D,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,OAAO,KAAK,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SAC3C;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACzC,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAEvC,OAAO,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,OAAO,CAAC;SACnD;KACJ;;;;IAKM,4CAAS,GAAhB,UAAiB,KAAa;QAC1B,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACzC,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAEvC,IAAI,SAAS,KAAK,IAAI,IAAI,OAAO,KAAK,IAAI,EAAE;gBACxC,OAAO,KAAK,IAAI,SAAS,IAAI,KAAK,IAAI,OAAO,CAAC;aACjD;iBAAM;gBACH,OAAO,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,OAAO,CAAC;aACnD;SACJ;KACJ;;;;IAKM,8CAAW,GAAlB,UAAmB,KAAa;QAC5B,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACzC,OAAO,SAAS,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;SACpD;KACJ;;;;IAKM,4CAAS,GAAhB,UAAiB,KAAa;QAC1B,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACvC,OAAO,OAAO,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO,CAAC;SAChD;KACJ;;;;IAKM,kDAAe,GAAtB;QAAA,iBAWC;QAVG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ;iBACf,YAAY,EAAE;iBACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,aAAa;qBACpB,aAAa,CAAC,8BAA8B,CAAC;qBAC7C,KAAK,EAAE,CAAC;aAChB,CAAC,CAAC;SACV,CAAC,CAAC;KACN;;gBAnF2B,UAAU;gBAAkB,MAAM;;IA5D9D;QADC,KAAK,EAAE;;gEACO;IAMf;QADC,KAAK,EAAE;;0DACe;IAMvB;QADC,KAAK,EAAE;;6DACI;IAMZ;QADC,KAAK,EAAE;;+DACM;IAMd;QADC,KAAK,EAAE;;gEACW;IAMnB;QADC,KAAK,EAAE;;oEACiB;IAMzB;QADC,KAAK,EAAE;;gEACe;IAMvB;QADC,MAAM,EAAE;;4DACiD;IA/CjD,wBAAwB;QAXpC,SAAS,CAAC;YACP,QAAQ,EAAE,+BAA+B;YACzC,QAAQ,EAAE,yBAAyB;YACnC,iyCAA6C;YAE7C,IAAI,EAAE;gBACF,8BAA8B,EAAE,wBAAwB;aAC3D;YACD,mBAAmB,EAAE,KAAK;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAClD,CAAC;yCAkE8B,UAAU,EAAkB,MAAM;OAjErD,wBAAwB,CAqJpC;IAAD,+BAAC;CArJD;;ACvCA;;;AA0CA,IAAM,aAAa,GAAG,CAAC,CAAC;AACxB,IAAM,cAAc,GAAG,CAAC,CAAC;AAazB;IA6OI,+BACY,KAAwB,EACZ,eAAmC,EAG/C,eAAmC;QAJnC,UAAK,GAAL,KAAK,CAAmB;QACZ,oBAAe,GAAf,eAAe,CAAoB;QAG/C,oBAAe,GAAf,eAAe,CAAoB;;;;QA5O/C,oBAAe,GAAG,KAAK,CAAC;QAEhB,4BAAuB,GAAG,IAAI,CAAC;;;;;QAM/B,oBAAe,GAAG,uBAAuB,CAC7C,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CACnC,CAAC;;;;QAsBM,gBAAW,GAAe,QAAQ,CAAC;QA+BnC,eAAU,GAAQ,EAAE,CAAC;QA4HrB,cAAS,GAAiB,YAAY,CAAC,KAAK,CAAC;QAE7C,cAAS,GAAG,KAAK,CAAC;;;;;QAanB,kBAAa,GAAa,EAAE,CAAC;;;;QAS3B,mBAAc,GAAG,IAAI,YAAY,EAAY,CAAC;;;;QAM9C,kBAAa,GAAG,IAAI,YAAY,EAAQ,CAAC;;QAIzC,uBAAkB,GAAoB,IAAI,YAAY,EAAK,CAAC;KAgBjE;IAjOJ,sBAAI,iDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;SAC/B;aAED,UAAmB,GAAW;YAC1B,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,eAAe,EAAE;gBACtD,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;gBAC3B,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;gBAErC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;iBAC7B;aACJ;SACJ;;;OAbA;IAoBD,sBAAI,6CAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,GAAe;YAC1B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;aAC7B;SACJ;;;OARA;IAaD,sBAAI,2CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,KAAe;YACxB,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAE1C,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC9D,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;;;OAVA;IAcD,sBAAI,4CAAS;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;aAED,UAAc,MAAW;YAAzB,iBAMC;YALG,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC;gBAC1B,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACxC,OAAO,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC/B,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;;;OARA;IAYD,sBAAI,+CAAY;aAAhB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;aAED,UAAiB,KAAQ;YACrB,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;YACrC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;YAE3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CACnD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAChD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,EACjD,CAAC,CACJ,CAAC;YAEF,IACI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC;gBAChD,IAAI,CAAC,SAAS,EAChB;gBACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;;;OApBA;IA2BD,sBAAI,6CAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,MAA4B;YACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC1B,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;aAC7B;SACJ;;;OARA;IAaD,sBAAI,0CAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAY,KAAe;YACvB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;aAC7B;SACJ;;;OATA;IAcD,sBAAI,0CAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAY,KAAe;YACvB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEzC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;aAC7B;SACJ;;;OAVA;IAaD,sBAAI,2CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;;;OAAA;IAGD,sBAAI,uCAAI;aAAR;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;;OAAA;IAED,sBAAI,6CAAU;aAAd;YACI,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,QACI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;oBAC/C,IAAI,CAAC,cAAc;oBACnB,CAAC,EACH;aACL;SACJ;;;OAAA;IAED,sBAAI,iDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC;SACvC;;;OAAA;IAED,sBAAI,gDAAa;aAAjB;YACI,QACI,IAAI,CAAC,UAAU,KAAK,OAAO;gBAC3B,IAAI,CAAC,UAAU,KAAK,WAAW;gBAC/B,IAAI,CAAC,UAAU,KAAK,SAAS,EAC/B;SACL;;;OAAA;IA4CD,sBAAI,oDAAiB;aAArB;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAUM,wCAAQ,GAAf;QAAA,iBAaC;QAZG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CACzD,UAAA,MAAM;YACF,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,uBAAuB;kBAC5C,uBAAuB,CAAC,MAAM,CAAC;kBAC/B,KAAI,CAAC,cAAc,CAAC;YAC1B,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;SAC7B,CACJ,CAAC;KACL;IAEM,kDAAkB,GAAzB;QACI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;IAEM,2CAAW,GAAlB;QACI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;;;;IAKM,kDAAkB,GAAzB,UAA0B,IAAkB;;;;QAIxC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;YACrD,OAAO;SACV;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;;;;IAKO,0CAAU,GAAlB,UAAmB,IAAY;QAC3B,IAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC;QAC1B,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CACjD,IAAI,CAAC,gBAAgB,EACrB,QAAQ,CACX,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC7B;;;;IAKM,qDAAqB,GAA5B,UAA6B,KAAoB;QAC7C,IAAI,MAAM,CAAC;QACX,QAAQ,KAAK,CAAC,OAAO;;YAEjB,KAAK,UAAU;gBACX,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CACzC,IAAI,CAAC,YAAY,EACjB,CAAC,CAAC,CACL,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,WAAW;gBACZ,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CACzC,IAAI,CAAC,YAAY,EACjB,CAAC,CACJ,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,QAAQ;gBACT,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CACzC,IAAI,CAAC,YAAY,EACjB,CAAC,CAAC,CACL,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,UAAU;gBACX,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CACzC,IAAI,CAAC,YAAY,EACjB,CAAC,CACJ,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,IAAI;gBACL,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CACzC,IAAI,CAAC,YAAY,EACjB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CACtD,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,GAAG;gBACJ,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CACzC,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC;oBACrD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CACtD,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,OAAO;gBACR,MAAM,GAAG,KAAK,CAAC,MAAM;sBACf,IAAI,CAAC,eAAe,CAAC,gBAAgB,CACjC,IAAI,CAAC,YAAY,EACjB,CAAC,CAAC,CACL;sBACD,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAClC,IAAI,CAAC,YAAY,EACjB,CAAC,CAAC,CACL,CAAC;gBACR,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,SAAS;gBACV,MAAM,GAAG,KAAK,CAAC,MAAM;sBACf,IAAI,CAAC,eAAe,CAAC,gBAAgB,CACjC,IAAI,CAAC,YAAY,EACjB,CAAC,CACJ;sBACD,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAClC,IAAI,CAAC,YAAY,EACjB,CAAC,CACJ,CAAC;gBACR,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,KAAK;gBACN,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACxD,IAAI,CAAC,UAAU,CACX,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAClD,CAAC;iBACL;gBACD,MAAM;YACV;gBACI,OAAO;SACd;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;;;;IAKO,gDAAgB,GAAxB;QACI,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACpE,IAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACtE,IAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAE3C,IAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC;YACtC,OAAO,EAAE,IAAI,MAAA,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;SACvE,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,QAAQ;aACpB,KAAK,CAAC,cAAc,CAAC;aACrB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;QAE/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAErD,OAAO;KACV;;;;IAKO,gDAAgB,GAAxB;QACI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,OAAO;SACV;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;QAGtB,IAAM,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CACnD,IAAI,CAAC,gBAAgB,CACxB,CAAC;QACF,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;;;QAI3C,IAAI,QAAQ,GACR,CAAC;aACA,CAAC,mBAAmB,IAAI,aAAa,GAAG,cAAc,CAAC;gBACpD,aAAa,CAAC,CAAC;;QAGvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEzC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACrC,IAAM,IAAI,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAC7C,IAAI,CAAC,gBAAgB,EACrB,QAAQ,CACX,CAAC;gBACF,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;gBAGrD,IACI,IAAI,CAAC,eAAe,CAAC,SAAS,CAC1B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,EAC1B,IAAI,CACP,EACH;oBACE,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,CAAC,CAAC;iBACjC;gBAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACpB,QAAQ,IAAI,CAAC,CAAC;aACjB;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;IAKO,8CAAc,GAAtB,UAAuB,IAAO,EAAE,QAAgB;;QAE5C,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CACtD,IAAI,CAAC,YAAY,CACpB,CAAC;QACF,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;QAEnD,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CACzC,IAAI,EACJ,IAAI,CAAC,eAAe,CAAC,aAAa,CACrC,CAAC;;QAGF,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;QAGzC,IAAM,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC;QAC9B,IAAM,GAAG,GAAG,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,WAAW,CAAC;QACnD,IAAM,SAAS,GAAG,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEpE,OAAO,IAAI,YAAY,CACnB,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,OAAO,EACP,GAAG,EACH,SAAS,CACZ,CAAC;KACL;;;;IAKO,6CAAa,GAArB,UAAsB,IAAO;QACzB,QACI,CAAC,CAAC,IAAI;aACL,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC1C,CAAC,IAAI,CAAC,OAAO;gBACV,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACzD,CAAC,IAAI,CAAC,OAAO;gBACV,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAC5D;KACL;;;;IAKO,4CAAY,GAApB,UAAqB,GAAQ;QACzB,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC;cAC/B,GAAG;cACH,IAAI,CAAC;KACd;;;;IAKM,2CAAW,GAAlB,UAAmB,QAAW,EAAE,SAAY;QACxC,OAAO,CAAC,EACJ,QAAQ;YACR,SAAS;YACT,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC;YACvC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC;gBAClC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBACnC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC/C,CAAC;KACL;;;;;;IAOO,gDAAgB,GAAxB;QAAA,iBA6BC;QA5BG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACxB,OAAO;SACV;QAED,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,EAAE;YACtC,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,wBAAwB,CACzD,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,gBAAgB,CACxB,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;YACpC,OAAO;SACV;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,EAAE;YACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ;gBAC5C,IAAI,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBACxC,IAAM,OAAO,GAAG,KAAI,CAAC,eAAe,CAAC,wBAAwB,CACzD,QAAQ,EACR,KAAI,CAAC,gBAAgB,CACxB,CAAC;oBACF,OAAO,OAAO,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,OAAO,IAAI,CAAC;iBACf;aACJ,CAAC,CAAC;SACN;KACJ;IAEO,+CAAe,GAAvB;QACI,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;KAC1C;;gBAjWkB,iBAAiB;gBACK,eAAe,uBAAnD,QAAQ;gDACR,QAAQ,YACR,MAAM,SAAC,qBAAqB;;IA3OjC;QADC,KAAK,EAAE;;kEACgB;IAYxB;QADC,KAAK,EAAE;;;+DAGP;IAoBD;QADC,KAAK,EAAE;;;2DAGP;IAaD;QADC,KAAK,EAAE;;;yDAGP;IAcD;QADC,KAAK,EAAE;;;0DAGP;IAYD;QADC,KAAK,EAAE;;;6DAGP;IA2BD;QADC,KAAK,EAAE;;;2DAGP;IAaD;QADC,KAAK,EAAE;;;wDAGP;IAcD;QADC,KAAK,EAAE;;;wDAGP;IAsED;QADC,MAAM,EAAE;;iEAC8C;IAMvD;QADC,MAAM,EAAE;;gEACyC;IAIlD;QADC,MAAM,EAAE;kCACoB,YAAY;qEAA4B;IAIrE;QADC,SAAS,CAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCACrC,wBAAwB;kEAAC;IAvOjC,qBAAqB;QAXjC,SAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;YACpC,QAAQ,EAAE,aAAa;YACvB,u7BAAmD;YAEnD,IAAI,EAAE;gBACF,8BAA8B,EAAE,mBAAmB;aACtD;YACD,mBAAmB,EAAE,KAAK;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAClD,CAAC;QAgPO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;yCAHf,iBAAiB;YACK,eAAe;OA/O/C,qBAAqB,CAglBjC;IAAD,4BAAC;CAhlBD;;ACxDA;;;AAyCA,IAAM,eAAe,GAAG,EAAE,CAAC;AAC3B,IAAM,cAAc,GAAG,CAAC,CAAC;AAazB;IAmLI,8BACY,KAAwB,EACZ,eAAmC,EAG/C,eAAmC;QAJnC,UAAK,GAAL,KAAK,CAAmB;QACZ,oBAAe,GAAf,eAAe,CAAoB;QAG/C,oBAAe,GAAf,eAAe,CAAoB;;;;QAnLvC,gBAAW,GAAe,QAAQ,CAAC;QA2BnC,eAAU,GAAQ,EAAE,CAAC;QA2GrB,cAAS,GAAiB,YAAY,CAAC,KAAK,CAAC;QAE7C,cAAS,GAAG,KAAK,CAAC;;;;;QAQnB,mBAAc,GAAa,EAAE,CAAC;;;;QAM5B,WAAM,GAAG,IAAI,YAAY,EAAK,CAAC;;;;QAM/B,kBAAa,GAAG,IAAI,YAAY,EAAK,CAAC;;QAItC,uBAAkB,GAAoB,IAAI,YAAY,EAAK,CAAC;;QAI5D,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;QAiBhE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KACjE;IApLD,sBAAI,4CAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,GAAe;YAC1B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;aAC7B;SACJ;;;OARA;IAaD,sBAAI,0CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,KAAe;YACxB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;;;OANA;IAUD,sBAAI,2CAAS;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;aAED,UAAc,MAAW;YACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;aAClD;YAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;;;OAVA;IAcD,sBAAI,8CAAY;aAAhB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;aAED,UAAiB,KAAQ;YACrB,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;YACrC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa;gBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;YAE3D,IACI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC;gBAChD,IAAI,CAAC,SAAS,EAChB;gBACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;SACJ;;;OAdA;IAqBD,sBAAI,4CAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,MAA4B;YACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC1B,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;SACJ;;;OAPA;IAYD,sBAAI,yCAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAY,KAAe;YACvB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;SACJ;;;OARA;IAaD,sBAAI,yCAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAY,KAAe;YACvB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;SACJ;;;OARA;IAaD,sBAAI,wCAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;;;OAAA;IAED,sBAAI,4CAAU;aAAd;YACI,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC5D;SACJ;;;OAAA;IAED,sBAAI,gDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC;SACvC;;;OAAA;IAED,sBAAI,+CAAa;aAAjB;YACI,QACI,IAAI,CAAC,UAAU,KAAK,OAAO;gBAC3B,IAAI,CAAC,UAAU,KAAK,WAAW;gBAC/B,IAAI,CAAC,UAAU,KAAK,SAAS,EAC/B;SACL;;;OAAA;IAsCD,sBAAI,mDAAiB;aAArB;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAYM,uCAAQ,GAAf;QAAA,iBAKC;QAJG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC;YAC1D,KAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;SAC7B,CAAC,CAAC;KACN;IAEM,iDAAkB,GAAzB;QACI,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;IAEM,0CAAW,GAAlB;QACI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;;;;IAKM,iDAAkB,GAAzB,UAA0B,IAAkB;QACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;;;;IAKO,0CAAW,GAAnB,UAAoB,KAAa;QAC7B,IAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CACpD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAC/C,KAAK,EACL,CAAC,CACJ,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE1C,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CACtD,gBAAgB,CACnB,CAAC;QACF,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAC1C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAC/C,KAAK,EACL,IAAI,CAAC,GAAG,CACJ,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAClD,EACD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAChD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,EAClD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CACrD,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC5B;;;;IAKM,oDAAqB,GAA5B,UAA6B,KAAoB;QAC7C,IAAI,MAAM,CAAC;QACX,QAAQ,KAAK,CAAC,OAAO;;YAEjB,KAAK,UAAU;gBACX,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAC3C,IAAI,CAAC,YAAY,EACjB,CAAC,CAAC,CACL,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,WAAW;gBACZ,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAC3C,IAAI,CAAC,YAAY,EACjB,CAAC,CACJ,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,QAAQ;gBACT,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAC3C,IAAI,CAAC,YAAY,EACjB,CAAC,CAAC,CACL,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,UAAU;gBACX,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAC3C,IAAI,CAAC,YAAY,EACjB,CAAC,CACJ,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,IAAI;gBACL,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAC3C,IAAI,CAAC,YAAY,EACjB,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CACpD,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,GAAG;gBACJ,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAC3C,IAAI,CAAC,YAAY,EACjB,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CACxD,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,OAAO;gBACR,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAC1C,IAAI,CAAC,YAAY,EACjB,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAC1B,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,SAAS;gBACV,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAC1C,IAAI,CAAC,YAAY,EACjB,KAAK,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,CACxB,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,KAAK;gBACN,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CACnD,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;gBAC1B,MAAM;YACV;gBACI,OAAO;SACd;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;;;;IAKO,gDAAiB,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,OAAO;SACV;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CACxC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAC7B,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACvD,IAAM,GAAG,GAAG,EAAE,CAAC;YAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;gBACrC,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9C,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACvB;YAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1B;QAED,OAAO;KACV;;;;IAKO,8CAAe,GAAvB,UAAwB,KAAa;QACjC,IAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CACpD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAC/C,KAAK,EACL,CAAC,CACJ,CAAC;QACF,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CACzC,gBAAgB,EAChB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAC1C,CAAC;QACF,IAAM,SAAS,GAAG,eAAe,GAAG,KAAK,CAAC;QAC1C,OAAO,IAAI,YAAY,CACnB,KAAK,EACL,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EACtB,SAAS,EACT,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAC1B,KAAK,EACL,SAAS,CACZ,CAAC;KACL;;;;IAKO,6CAAc,GAAtB,UAAuB,KAAa;QAChC,IAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CACpD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAC/C,KAAK,EACL,CAAC,CACJ,CAAC;;;QAIF,KACI,IAAI,IAAI,GAAG,gBAAgB,EAC3B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,KAAK,EAC7C,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,EACtD;YACE,IACI,CAAC,CAAC,IAAI;iBACL,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBAC1C,CAAC,IAAI,CAAC,OAAO;oBACV,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACzD,CAAC,IAAI,CAAC,OAAO;oBACV,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAC5D;gBACE,OAAO,IAAI,CAAC;aACf;SACJ;QAED,OAAO,KAAK,CAAC;KAChB;;;;;IAMO,oDAAqB,GAA7B,UAA8B,IAAc;QACxC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAClE,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAC3C,IAAI,EACJ,IAAI,CAAC,aAAa,CACrB,CAAC;;;;YAKF,IAAI,MAAM,GAAG,CAAC,EAAE;gBACZ,OAAO,CAAC,CAAC,CAAC;aACb;iBAAM,IAAI,MAAM,GAAG,CAAC,EAAE;gBACnB,OAAO,EAAE,CAAC;aACb;iBAAM;gBACH,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC9C;SACJ;aAAM;YACH,OAAO,IAAI,CAAC;SACf;KACJ;;;;;;IAOO,gDAAiB,GAAzB;QACI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,EAAE;YACtC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtE;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,EAAE;YACtC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAC/C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CACpB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAC/C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CACpB,CAAC;SACL;KACJ;;;;IAKO,0CAAW,GAAnB,UAAoB,QAAW,EAAE,SAAY;QACzC,OAAO,CAAC,EACJ,QAAQ;YACR,SAAS;YACT,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC;gBAClC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAC9C,CAAC;KACL;;;;IAKO,2CAAY,GAApB,UAAqB,GAAQ;QACzB,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC;cAC/B,GAAG;cACH,IAAI,CAAC;KACd;IAEO,8CAAe,GAAvB;QACI,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;KAC1C;;gBAvTkB,iBAAiB;gBACK,eAAe,uBAAnD,QAAQ;gDACR,QAAQ,YACR,MAAM,SAAC,qBAAqB;;IAhLjC;QADC,KAAK,EAAE;;;0DAGP;IAaD;QADC,KAAK,EAAE;;;wDAGP;IAUD;QADC,KAAK,EAAE;;;yDAGP;IAcD;QADC,KAAK,EAAE;;;4DAGP;IAqBD;QADC,KAAK,EAAE;;;0DAGP;IAYD;QADC,KAAK,EAAE;;;uDAGP;IAaD;QADC,KAAK,EAAE;;;uDAGP;IAmDD;QADC,MAAM,EAAE;;wDAC+B;IAMxC;QADC,MAAM,EAAE;;+DACsC;IAI/C;QADC,MAAM,EAAE;kCACoB,YAAY;oEAA4B;IAIrE;QADC,MAAM,EAAE;kCACe,YAAY;+DAAgC;IAIpE;QADC,SAAS,CAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCACrC,wBAAwB;iEAAC;IA7KjC,oBAAoB;QAXhC,SAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;YACnC,QAAQ,EAAE,cAAc;YACxB,sqBAAkD;YAElD,IAAI,EAAE;gBACF,8BAA8B,EAAE,mBAAmB;aACtD;YACD,mBAAmB,EAAE,KAAK;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAClD,CAAC;QAsLO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;yCAHf,iBAAiB;YACK,eAAe;OArL/C,oBAAoB,CA4ehC;IAAD,2BAAC;CA5eD;;ACvDA;;;IA+Ba,aAAa,GAAG,CAAC,CAAC;AAC/B,IAAa,SAAS,GAAG,CAAC,CAAC;AAc3B;IA0LI,mCAAqB,KAAwB,EACxB,UAA2B,EACf,eAAmC;QAF/C,UAAK,GAAL,KAAK,CAAmB;QACxB,eAAU,GAAV,UAAU,CAAiB;QACf,oBAAe,GAAf,eAAe,CAAoB;;;;QAvL5D,gBAAW,GAAe,QAAQ,CAAC;QA+BnC,eAAU,GAAQ,EAAE,CAAC;QA4FrB,cAAS,GAAG,KAAK,CAAC;;;;QAkCP,WAAM,GAAG,IAAI,YAAY,EAAK,CAAC;;;;QAK/B,iBAAY,GAAG,IAAI,YAAY,EAAK,CAAC;;QAGrC,uBAAkB,GAAoB,IAAI,YAAY,EAAK,CAAC;;QAG5D,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;KAgB7E;IAtLD,sBAAI,iDAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAgB,GAAe;YAC3B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;aAC7B;SACJ;;;OARA;IAaD,sBAAI,+CAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAc,KAAe;YACzB,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAE1C,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC9D,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;;;OAVA;IAcD,sBAAI,gDAAS;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;aAED,UAAe,MAAW;YAA1B,iBAMC;YALG,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,UAAE,CAAC;gBAC5B,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACxC,OAAO,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;aAC/B,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;;;OARA;IAYD,sBAAI,mDAAY;aAAhB;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;aAED,UAAkB,KAAQ;YACtB,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;YACrC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;YAE5E,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa;gBAC/B,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE;gBACrD,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;;;OAXA;IAkBD,sBAAI,iDAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAgB,MAA8B;YAC1C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC1B,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;;;OAPA;IAYD,sBAAI,8CAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAa,KAAe;YACxB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;;;OARA;IAaD,sBAAI,8CAAO;aAAX;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;aAED,UAAa,KAAe;YACxB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;;;OARA;IAWD,sBAAI,gDAAS;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;;;OAAA;IAGD,sBAAI,4CAAK;aAAT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;;;OAAA;IAGD,sBAAI,oDAAa;aAAjB;YACI,OAAO,IAAI,CAAC,cAAc,CAAC;SAC9B;;;OAAA;IAID,sBAAI,qDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC;SACvC;;;OAAA;IAED,sBAAI,oDAAa;aAAjB;YACI,OAAO,IAAI,CAAC,UAAU,KAAK,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,WAAW;mBAC9D,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC;SACxC;;;OAAA;IAED,sBAAI,iDAAU;aAAd;YACI,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC;aACzF;SACJ;;;OAAA;IAED,sBAAI,kDAAW;aAAf;YACI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvC,OAAU,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,WAAM,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,YAAc,CAAC;aAC9G;SACJ;;;OAAA;IAED,sBAAI,sDAAe;aAAnB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;SAC7C;;;OAAA;IAED,sBAAI,sDAAe;aAAnB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC;SAC7C;;;OAAA;IAqBD,sBAAI,wDAAiB;aAArB;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,sBAAI,iEAA0B;aAA9B;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAOM,4CAAQ,GAAf;KACC;IAEM,sDAAkB,GAAzB;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;;;;IAKM,sDAAkB,GAAzB,UAA2B,IAAkB;QACzC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;IAEO,8CAAU,GAAlB,UAAoB,IAAY;QAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpE,IAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CACpD,IAAI,EACJ,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAChD,CAAC,CACJ,CAAC;QACF,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;QAC7E,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAC5C,IAAI,EACJ,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAChD,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EACtE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAChD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,EAClD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CACrD,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC9B;;;;IAKM,gDAAY,GAAnB,UAAqB,KAAU;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG,SAAS,GAAG,aAAa,CAAC,CAAC;QAC9G,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;;;;IAKM,gDAAY,GAAnB,UAAqB,KAAU;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,GAAG,aAAa,CAAC,CAAC;QACzG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;IAEM,oDAAgB,GAAvB;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1E,IAAM,MAAM,GAAG,gBAAgB,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC;QAE9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAChC,IAAM,GAAG,GAAG,EAAE,CAAC;YAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAM,IAAI,GAAG,gBAAgB,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC;gBACjE,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC3C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtB;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,OAAO;KAEV;;IAGM,mDAAe,GAAtB;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO,IAAI,CAAC;SACf;QACD,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAClF;;IAGM,+CAAW,GAAlB;QACI,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAClF;IAEM,yDAAqB,GAA5B,UAA8B,KAAoB;QAC9C,IAAI,MAAM,CAAC;QACX,QAAQ,KAAK,CAAC,OAAO;;YAEjB,KAAK,UAAU;gBACX,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,WAAW;gBACZ,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBACtE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,QAAQ;gBACT,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;gBACvF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,UAAU;gBACX,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;gBAClF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,IAAI;gBACL,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAC7D,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC;gBACrF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,GAAG;gBACJ,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAC7D,CAAC,aAAa,GAAG,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gBACtH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,OAAO;gBACR,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC;gBACvJ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;;YAGV,KAAK,SAAS;gBACV,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,MAAM,GAAG,EAAE,IAAI,aAAa,GAAG,SAAS,CAAC,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC;gBACjJ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM;YAEV,KAAK,KAAK;gBACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;gBAC1B,MAAM;YAEV;gBACI,OAAO;SACd;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;;;;IAKO,kDAAc,GAAtB,UAAwB,IAAY;QAChC,IAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpE,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QACpE,IAAM,SAAS,GAAG,cAAc,GAAG,IAAI,CAAC;QACxC,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;KACzG;IAEO,oDAAgB,GAAxB;QAAA,iBAiBC;QAfG,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,EAAE;YACtC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxE;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,EAAE;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAE,QAAQ;gBAC/C,IAAI,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBACxC,OAAO,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;iBACjD;qBAAM;oBACH,OAAO,IAAI,CAAC;iBACf;aACJ,CAAC,CAAC;SACN;KACJ;;IAGO,iDAAa,GAArB,UAAuB,IAAY;;QAE/B,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI;aAClC,IAAI,CAAC,OAAO,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAClE,IAAI,CAAC,OAAO,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;YACrE,OAAO,KAAK,CAAC;SAChB;;QAGD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,OAAO,IAAI,CAAC;SACf;QAED,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;QAGhE,KAAK,IAAI,IAAI,GAAG,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,EACnE,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YACvD,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC;aACf;SACJ;QAED,OAAO,KAAK,CAAC;KAChB;IAEO,kDAAc,GAAtB,UAAwB,KAAQ,EAAE,KAAQ;QACtC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC;YAChF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC;KACrF;;;;IAKO,gDAAY,GAApB,UAAsB,GAAQ;QAC1B,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC;KACvG;IAEO,mDAAe,GAAvB;QACI,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;KAC1C;;gBAtO2B,iBAAiB;gBACZ,eAAe;gBACE,eAAe,uBAAnD,QAAQ;;IArLtB;QADC,KAAK,EAAE;;;+DAGP;IAaD;QADC,KAAK,EAAE;;;6DAGP;IAcD;QADC,KAAK,EAAE;;;8DAGP;IAYD;QADC,KAAK,EAAE;;;iEAGP;IAkBD;QADC,KAAK,EAAE;;;+DAGP;IAYD;QADC,KAAK,EAAE;;;4DAGP;IAaD;QADC,KAAK,EAAE;;;4DAGP;IA2DS;QAAT,MAAM,EAAE;;6DAAyC;IAKxC;QAAT,MAAM,EAAE;;mEAA+C;IAG9C;QAAT,MAAM,EAAE;kCAA8B,YAAY;yEAA4B;IAGrE;QAAT,MAAM,EAAE;kCAAyB,YAAY;oEAAgC;IAGvB;QAAtD,SAAS,CAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAAkB,wBAAwB;sEAAC;IAhLxF,yBAAyB;QAZrC,SAAS,CAAC;YACP,QAAQ,EAAE,+BAA+B;YACzC,kwFAAwD;YAExD,IAAI,EAAE;gBACF,8BAA8B,EAAE,mBAAmB;gBACnD,yCAAyC,EAAE,4BAA4B;aAC1E;YACD,mBAAmB,EAAE,KAAK;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAClD,CAAC;QA8LgB,WAAA,QAAQ,EAAE,CAAA;yCAFI,iBAAiB;YACZ,eAAe;YACE,eAAe;OA5LxD,yBAAyB,CAiarC;IAAD,gCAAC;CAjaD;;AC9CA;;;;IA+EI;QA9CS,gBAAW,GAAG,KAAK,CAAC;QAsBpB,SAAI,GAAG,CAAC,CAAC;QAIR,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QAEzC,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QAE3C,gBAAW,GAAG,IAAI,OAAO,EAAU,CAAC;QAEpC,mBAAc,GAAG,YAAY,CAAC,KAAK,CAAC;QAYpC,+BAA0B,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAG3E;IAbD,sBAAI,8CAAY;aAAhB;YACI,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC;SACtC;;;OAAA;IAED,sBAAI,oDAAkB;aAAtB;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IASM,uCAAQ,GAAf;QAAA,iBAWC;QAVG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACvC,YAAY,CAAC,GAAG,CAAC,EACjB,oBAAoB,EAAE,CACzB,CAAC,SAAS,CAAC,UAAE,GAAW;YACrB,IAAI,GAAG,EAAE;gBACL,IAAM,UAAU,GAAG,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAChD,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;aACxC;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACnC;IAEM,0CAAW,GAAlB;QACI,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;KACrC;IAEM,2CAAY,GAAnB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5C;IAEM,6CAAc,GAArB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5C;IAEM,gDAAiB,GAAxB,UAAyB,GAAW;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC9B;IAEM,uCAAQ,GAAf,UAAgB,KAAa;QACzB,IAAI,KAAK,EAAE;YACP,IAAM,UAAU,GAAG,oBAAoB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;SACxC;KACJ;IAEO,0CAAW,GAAnB,UAAqB,KAAa;QAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;IAEO,kDAAmB,GAA3B,UAA6B,KAAa;QACtC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE;YACtC,OAAO;SACV;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;IAEO,qDAAsB,GAA9B,UAAgC,KAAU;QACtC,KAAK,GAAG,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;QAC9B,IAAM,KAAK,GAAG,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAEjE,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;SACF;aAAM,IAAI,KAAK,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;gBACzB,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF;QAED,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,EAAE,IAAI,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;KAC/E;IAEO,uDAAwB,GAAhC;QACI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAC1C,SAAS,IAAI,QAAQ,GAAG,OAAO,GAAG,YAAY,EAC9C,IAAI,CAAC,0BAA0B,CAAC,CAAC;KACxC;IAEO,yDAA0B,GAAlC;QACI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,mBAAmB,CAC7C,SAAS,IAAI,QAAQ,GAAG,OAAO,GAAG,YAAY,EAC9C,IAAI,CAAC,0BAA0B,CAAC,CAAC;KACxC;IA5HQ;QAAR,KAAK,EAAE;;6DAAqB;IAEpB;QAAR,KAAK,EAAE;;gEAAwB;IAEvB;QAAR,KAAK,EAAE;;+DAAwB;IAEvB;QAAR,KAAK,EAAE;;kEAA0B;IAEzB;QAAR,KAAK,EAAE;;iEAA0B;IAMzB;QAAR,KAAK,EAAE;;0DAAkB;IAEjB;QAAR,KAAK,EAAE;;uDAAe;IAEd;QAAR,KAAK,EAAE;;qDAAa;IAEZ;QAAR,KAAK,EAAE;;qDAAa;IAEZ;QAAR,KAAK,EAAE;;sDAAU;IAET;QAAR,KAAK,EAAE;;4DAAoB;IAElB;QAAT,MAAM,EAAE;;6DAA0C;IAEzC;QAAT,MAAM,EAAE;;6DAA0C;IAenD;QADC,SAAS,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCACtB,UAAU;4DAAC;IA7CtB,oBAAoB;QAZhC,SAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,yBAAyB;YACnC,42FAAyC;YAEzC,mBAAmB,EAAE,KAAK;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,IAAI,EAAE;gBACF,0BAA0B,EAAE,oBAAoB;aACnD;;SACJ,CAAC;;OAEW,oBAAoB,CA+HhC;IAAD,2BAAC;CA/HD;;AC/BA;;;;IASA;KAiBC;IAhBG,sCAAS,GAAT,UAAW,GAAW,EAAE,GAAW;QAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE/B,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;YAChD,OAAO,GAAG,CAAC;SACd;QAED,IAAI,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAElC,OAAO,SAAS,CAAC,MAAM,GAAG,MAAM,EAAE;YAC9B,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;SAC/B;QAED,OAAO,SAAS,CAAC;KACpB;IAhBQ,kBAAkB;QAH9B,IAAI,CAAC;YACF,IAAI,EAAE,gBAAgB;SACzB,CAAC;OACW,kBAAkB,CAiB9B;IAAD,yBAAC;CAjBD;;ACTA;;;IA+BaC,6BAA2B,GAAQ;IAC5C,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,0BAA0B,GAAA,CAAC;IACzD,KAAK,EAAE,IAAI;CACd,CAAC;AAaF;IAAmD,8CAAc;IA6O7D,oCACc,cAAiC,EACrB,eAAmC,EAG/C,eAAmC;QALjD,YAOI,kBAAM,eAAe,EAAE,eAAe,CAAC,SAC1C;QAPa,oBAAc,GAAd,cAAc,CAAmB;QACrB,qBAAe,GAAf,eAAe,CAAoB;QAG/C,qBAAe,GAAf,eAAe,CAAoB;;;;;;;QAvOzC,iBAAW,GAAe,MAAM,CAAC;QAYjC,eAAS,GAAG,KAAK,CAAC;QAUlB,iBAAW,GAAe,QAAQ,CAAC;QA0HnC,aAAO,GAAQ,EAAE,CAAC;;;;;QA0B1B,kBAAY,GAAG,IAAI,YAAY,EAAK,CAAC;;;;;QAOrC,mBAAa,GAAG,IAAI,YAAY,EAAK,CAAC;QAY9B,gBAAU,GAAQ,EAAE,CAAC;QAkCrB,mBAAa,GAAa,eAAS,CAAC;QACpC,oBAAc,GAAa,eAAS,CAAC;;KAU5C;IAxOD,sBAAI,kDAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,GAAe;YAC1B,IAAI,GAAG,KAAK,IAAI,CAAC,WAAW,EAAE;gBAC1B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;aAC1B;SACJ;;;OANA;IAUD,sBAAI,gDAAQ;aAAZ;YACI,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;SAC3B;aAED,UAAa,KAAc;YACvB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;SACjD;;;OAJA;IAQD,sBAAI,kDAAU;aAAd;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;SAC3B;aAED,UAAe,IAAgB;YAC3B,IACI,IAAI,KAAK,QAAQ;gBACjB,IAAI,KAAK,OAAO;gBAChB,IAAI,KAAK,WAAW;gBACpB,IAAI,KAAK,SAAS,EACpB;gBACE,MAAM,KAAK,CAAC,8CAA8C,CAAC,CAAC;aAC/D;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;;;OAbA;IAkBD,sBAAI,+CAAO;aAAX;YACI,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;YAED,IAAI,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;gBAC9B,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;aAC7B;iBAAM,IACH,IAAI,CAAC,UAAU,KAAK,OAAO;gBAC3B,IAAI,CAAC,UAAU,KAAK,WAAW,EACjC;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;aACjC;iBAAM,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;gBACtC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;aACjC;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;aAED,UAAY,IAAc;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAC7B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CACzC,CAAC;SACL;;;OANA;IAWD,sBAAI,6CAAK;aAAT;YACI,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YAED,IAAI,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;gBAC9B,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;aAC7B;iBAAM,IACH,IAAI,CAAC,UAAU,KAAK,OAAO;gBAC3B,IAAI,CAAC,UAAU,KAAK,WAAW,EACjC;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;aACjC;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;aAED,UAAU,IAAc;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAC3B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CACzC,CAAC;SACL;;;OANA;IAUD,sBAAI,sDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,eAAe,CAAC;SAC/B;aAED,UAAmB,MAAmC;YAClD,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;SACjC;;;OAJA;IASD,sBAAI,mDAAW;aAAf;YACI,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;SAC5B;aAGD,UAAgB,KAAe;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC;;;OANA;IAWD,sBAAI,mDAAW;aAAf;YACI,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;SAC5B;aAGD,UAAgB,KAAe;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC;;;OANA;IAUD,sBAAI,6CAAK;aAAT;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;aAED,UAAU,KAAe;YACrB,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChD,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB;;;OAPA;IAWD,sBAAI,8CAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;aAED,UAAW,MAAW;YAAtB,iBAaC;YAZG,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC;oBACjB,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBACxC,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBACzB,OAAO,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iBACnD,CAAC,CAAC;gBACH,IAAI,CAAC,OAAO,YAAO,MAAM,CAAC,CAAC;gBAC3B,IAAI,CAAC,SAAS,YAAO,MAAM,CAAC,CAAC;aAChC;iBAAM;gBACH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACvB;SACJ;;;OAfA;IAgCD,sBAAI,gDAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,KAAe;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC;;;OALA;IAQD,sBAAI,iDAAS;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SAC1B;aAED,UAAc,MAAW;YACrB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC;;;OALA;IAOD,sBAAI,8CAAM;aAAV;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,sBAAI,kDAAU;aAAd;YACI,OAAO,QAAQ,CAAC;SACnB;;;OAAA;IAED,sBAAI,sDAAc;aAAlB;YACI,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,CAAC;SACxC;;;OAAA;IAED,sBAAI,qDAAa;aAAjB;YACI,QACI,IAAI,CAAC,WAAW,KAAK,OAAO;gBAC5B,IAAI,CAAC,WAAW,KAAK,WAAW;gBAChC,IAAI,CAAC,WAAW,KAAK,SAAS,EAChC;SACL;;;OAAA;IAED,sBAAI,wDAAgB;aAApB;YACI,OAAO,IAAI,CAAC;SACf;;;OAAA;IAeM,6CAAQ,GAAf;QACI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;KAChC;IAEM,+CAAU,GAAjB,UAAkB,KAAU;QACxB,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CACtC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CACrC,CAAC;SACL;KACJ;IAEM,qDAAgB,GAAvB,UAAwB,EAAO;QAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KAC3B;IAEM,sDAAiB,GAAxB,UAAyB,EAAO;QAC5B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC5B;IAEM,qDAAgB,GAAvB,UAAwB,UAAmB;QACvC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC9B;IAEM,2CAAM,GAAb,UAAc,IAAa;QACvB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO;SACV;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,IAAI,CAAC,MAAM,YAAO,IAAI,CAAC,CAAC;SAC3B;aAAM;YACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACrB;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;;;;IAKM,+CAAU,GAAjB,UAAkB,cAAiB;QAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC1C;;;;IAKM,gDAAW,GAAlB,UAAmB,eAAkB;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KAC5C;;gBA/D6B,iBAAiB;gBACJ,eAAe,uBAArD,QAAQ;gDACR,QAAQ,YACR,MAAM,SAAC,qBAAqB;;IA9OjC;QADC,SAAS,CAAC,6BAA6B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAChD,6BAA6B;iEAAI;IAU5C;QADC,KAAK,EAAE;;;gEAGP;IAUD;QADC,KAAK,EAAE;;;8DAGP;IAQD;QADC,KAAK,EAAE;;;gEAGP;IAkBD;QADC,KAAK,EAAE;;;6DAkBP;IAWD;QADC,KAAK,EAAE;;;2DAgBP;IAUD;QADC,KAAK,CAAC,mBAAmB,CAAC;;;oEAG1B;IAcD;QADC,KAAK,CAAC,KAAK,CAAC;;;iEAIZ;IAUD;QADC,KAAK,CAAC,KAAK,CAAC;;;iEAIZ;IAID;QADC,KAAK,EAAE;;;2DAGP;IAWD;QADC,KAAK,EAAE;;;4DAGP;IAsBD;QADC,MAAM,EAAE;;oEAC4B;IAOrC;QADC,MAAM,EAAE;;qEAC6B;IA5L7B,0BAA0B;QAXtC,SAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,+DAAgD;YAEhD,IAAI,EAAE;gBACF,uBAAuB,EAAE,kBAAkB;aAC9C;YACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,mBAAmB,EAAE,KAAK;YAC1B,SAAS,EAAE,CAACA,6BAA2B,CAAC;;SAC3C,CAAC;QAgPO,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;yCAHJ,iBAAiB;YACJ,eAAe;OA/OjD,0BAA0B,CA8StC;IAAD,iCAAC;CAAA,CA9SkD,WAAW;;AChD9D;;;;IA0BA;KACC;IADY,eAAe;QAd3B,QAAQ,CAAC;YACN,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,YAAY,CAAC;YAChE,OAAO,EAAE,EAAE;YACX,YAAY,EAAE;gBACV,2BAA2B;aAC9B;YACD,SAAS,EAAE;gBACP,mCAAmC;gBACnC,gBAAgB;aACnB;YACD,eAAe,EAAE;gBACb,2BAA2B;aAC9B;SACJ,CAAC;OACW,eAAe,CAC3B;IAAD,sBAAC;CADD;;AC1BA;;;;IA4DA;KACC;IADY,iBAAiB;QApC7B,QAAQ,CAAC;YACN,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,UAAU,CAAC;YACnE,OAAO,EAAE;gBACL,oBAAoB;gBACpB,iBAAiB;gBACjB,2BAA2B;gBAC3B,yBAAyB;gBACzB,oBAAoB;gBACpB,0BAA0B;gBAC1B,yBAAyB;gBACzB,oBAAoB;gBACpB,qBAAqB;aACxB;YACD,YAAY,EAAE;gBACV,2BAA2B;gBAC3B,yBAAyB;gBACzB,oBAAoB;gBACpB,6BAA6B;gBAC7B,yBAAyB;gBACzB,oBAAoB;gBACpB,qBAAqB;gBACrB,iBAAiB;gBACjB,oBAAoB;gBACpB,oBAAoB;gBACpB,wBAAwB;gBACxB,kBAAkB;gBAClB,0BAA0B;aAC7B;YACD,SAAS,EAAE;gBACP,eAAe;gBACf,qCAAqC;aACxC;YACD,eAAe,EAAE;gBACb,6BAA6B;aAChC;SACJ,CAAC;OACW,iBAAiB,CAC7B;IAAD,wBAAC;CADD;;AC5DA;;;AAWA;AACA,IAAM,mBAAmB,GAAG;IACxB,IAAI,EAAE;QACF,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACb;IACD,KAAK,EAAE;QACH,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;KACR;IACD,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACvE,CAAC;AAEF;AACA,IAAM,yBAAyB,GAAG;IAC9B,IAAI,EAAE;QACF,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,UAAU;QACV,QAAQ;QACR,UAAU;KACb;IACD,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACxD,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CAC9C,CAAC;SAGmC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAA;AADvD;AACA,IAAM,kBAAkB,GAAG,KAAK,CAAC,EAAE,KAAqB,CAAC;AAEzD;AACA,IAAM,iBAAiB,GAAG,OAAO,IAAI,KAAK,WAAW,CAAC;AAEtD;;;;;AAKA,IAAM,cAAc,GAAG,iFAAiF,CAAC;AAEzG;AACA,SAAS,KAAK,CAAI,MAAc,EAAE,aAAmC;IACjE,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;KACrC;IACD,OAAO,WAAW,CAAC;AACvB,CAAC;AAGD;IAA2C,yCAAqB;IAY5D,+BAGY,iBAAyB,EACjC,QAAkB;QAJtB,YAMI,iBAAO,SAMV;QATW,uBAAiB,GAAjB,iBAAiB,CAAQ;QAIjC,iBAAM,SAAS,aAAC,iBAAiB,CAAC,CAAC;;QAGnC,KAAI,CAAC,gBAAgB,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC1C,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC;;KACvD;IAEM,uCAAO,GAAd,UAAe,IAAU;QACrB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;KAC7B;IAEM,wCAAQ,GAAf,UAAgB,IAAU;QACtB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KAC1B;IAEM,sCAAM,GAAb,UAAc,IAAU;QACpB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;KACxB;IAEM,uCAAO,GAAd,UAAe,IAAU;QACrB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;KACzB;IAEM,wCAAQ,GAAf,UAAgB,IAAU;QACtB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KAC1B;IAEM,0CAAU,GAAjB,UAAkB,IAAU;QACxB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC5B;IAEM,0CAAU,GAAjB,UAAkB,IAAU;QACxB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAC5B;IAEM,uCAAO,GAAd,UAAe,IAAU;QACrB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;KACzB;IAEM,iDAAiB,GAAxB,UAAyB,IAAU;QAC/B,IAAM,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EACvB,CAAC,CACJ,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;KACxC;IAEM,wDAAwB,GAA/B,UAAgC,QAAc,EAAE,SAAe;QAC3D,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACnD,IAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EACtB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CACzB,CAAC;YACF,IAAM,mBAAmB,GAAG,IAAI,CAAC,UAAU,CACvC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EACvB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EACxB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAC1B,CAAC;YAEF,IAAM,aAAa,GACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;gBAChC,kBAAkB,CAAC,iBAAiB,EAAE;oBAClC,IAAI,CAAC,mBAAmB,CAAC;YACjC,IAAM,cAAc,GAChB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;gBACjC,mBAAmB,CAAC,iBAAiB,EAAE;oBACnC,IAAI,CAAC,mBAAmB,CAAC;YACjC,OAAO,IAAI,CAAC,KAAK,CACb,CAAC,aAAa,GAAG,cAAc,IAAI,IAAI,CAAC,iBAAiB,CAC5D,CAAC;SACL;aAAM;YACH,OAAO,IAAI,CAAC;SACf;KACJ;IAEM,2CAAW,GAAlB,UAAmB,IAAU;QACzB,IAAI,iBAAiB,EAAE;YACnB,IAAM,GAAG,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClD,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,KAAK;aAClB,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;SACtE;QACD,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;KACrC;IAEM,6CAAa,GAApB,UAAqB,KAAkC;QAAvD,iBAaC;QAZG,IAAI,iBAAiB,EAAE;YACnB,IAAM,KAAG,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClD,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,KAAK;aAClB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC,EAAE,EAAE,UAAA,CAAC;gBACd,OAAA,KAAI,CAAC,6BAA6B,CAC9B,KAAI,CAAC,OAAO,CAAC,KAAG,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAC1C;aAAA,CACJ,CAAC;SACL;QACD,OAAO,mBAAmB,CAAC,KAAK,CAAC,CAAC;KACrC;IAEM,iDAAiB,GAAxB,UAAyB,KAAkC;QAA3D,iBAcC;QAbG,IAAI,iBAAiB,EAAE;YACnB,IAAM,KAAG,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClD,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,KAAK;aAClB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC,CAAC,EAAE,UAAA,CAAC;gBACb,OAAA,KAAI,CAAC,6BAA6B,CAC9B,KAAI,CAAC,OAAO,CAAC,KAAG,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAC9C;aAAA,CACJ,CAAC;SACL;QAED,OAAO,yBAAyB,CAAC,KAAK,CAAC,CAAC;KAC3C;IAEM,4CAAY,GAAnB;QAAA,iBAaC;QAZG,IAAI,iBAAiB,EAAE;YACnB,IAAM,KAAG,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAClD,GAAG,EAAE,SAAS;gBACd,QAAQ,EAAE,KAAK;aAClB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC,EAAE,EAAE,UAAA,CAAC;gBACd,OAAA,KAAI,CAAC,6BAA6B,CAC9B,KAAI,CAAC,OAAO,CAAC,KAAG,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAC9C;aAAA,CACJ,CAAC;SACL;QACD,OAAO,kBAAkB,CAAC;KAC7B;IAEM,yCAAS,GAAhB,UAAiB,IAAU;QACvB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;KAC7B;IAEM,uCAAO,GAAd,UAAe,QAAc,EAAE,SAAe;QAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACnD,OAAO,QAAQ,CAAC,OAAO,EAAE,KAAK,SAAS,CAAC,OAAO,EAAE,CAAC;SACrD;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;KACJ;IAEM,yCAAS,GAAhB,UAAiB,QAAc,EAAE,SAAe;QAC5C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACnD,IAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAClD,kBAAkB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,QACI,kBAAkB,CAAC,OAAO,EAAE,KAAK,mBAAmB,CAAC,OAAO,EAAE,EAChE;SACL;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;KACJ;IAEM,uCAAO,GAAd,UAAe,IAAU;QACrB,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KACzC;IAEM,uCAAO,GAAd;QACI,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;KACxB;IAEM,8CAAc,GAArB,UAAsB,GAAQ;QAC1B,OAAO,GAAG,YAAY,IAAI,CAAC;KAC9B;IAEM,gDAAgB,GAAvB,UAAwB,IAAU,EAAE,MAAc;QAC9C,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC;KACpD;IAEM,iDAAiB,GAAxB,UAAyB,IAAU,EAAE,MAAc;QAC/C,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAExB,IAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC;QAChD,IAAM,oBAAoB,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QACzC,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;QACxE,oBAAoB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1C,IAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;;;QAGjE,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACvE,OAAO,MAAM,CAAC;KACjB;IAEM,+CAAe,GAAtB,UAAuB,IAAU,EAAE,MAAc;QAC7C,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC;QAC1C,OAAO,MAAM,CAAC;KACjB;IAEM,wCAAQ,GAAf,UAAgB,IAAU,EAAE,MAAc;QACtC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxB,OAAO,MAAM,CAAC;KACjB;IAEM,0CAAU,GAAjB,UAAkB,IAAU,EAAE,MAAc;QACxC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1B,OAAO,MAAM,CAAC;KACjB;IAEM,0CAAU,GAAjB,UAAkB,IAAU,EAAE,MAAc;QACxC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1B,OAAO,MAAM,CAAC;KACjB;IAEM,0CAAU,GAAjB,UACI,IAAY,EACZ,KAAa,EACb,IAAY,EACZ,KAAiB,EACjB,OAAmB,EACnB,OAAmB;QAFnB,sBAAA,EAAA,SAAiB;QACjB,wBAAA,EAAA,WAAmB;QACnB,wBAAA,EAAA,WAAmB;QAEnB,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;YACzB,MAAM,KAAK,CACP,2BAAwB,KAAK,gDAA4C,CAC5E,CAAC;SACL;QAED,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,KAAK,CACP,oBAAiB,IAAI,uCAAmC,CAC3D,CAAC;SACL;QAED,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;YACzB,MAAM,KAAK,CACP,qBAAkB,KAAK,0CAAsC,CAChE,CAAC;SACL;QAED,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE,EAAE;YAC7B,MAAM,KAAK,CACP,uBAAoB,OAAO,yCAAqC,CACnE,CAAC;SACL;QAED,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE,EAAE;YAC7B,MAAM,KAAK,CACP,uBAAoB,OAAO,4CAAwC,CACtE,CAAC;SACL;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,sBAAsB,CACtC,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,KAAK,EACL,OAAO,EACP,OAAO,CACV,CAAC;;;QAIF,IAAI,MAAM,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;YAC7B,MAAM,KAAK,CACP,oBAAiB,IAAI,kCAA2B,KAAK,QAAI,CAC5D,CAAC;SACL;QAED,OAAO,MAAM,CAAC;KACjB;IAEM,qCAAK,GAAZ,UAAa,IAAU;QACnB,OAAO,IAAI,CAAC,UAAU,CAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CACxB,CAAC;KACL;IAEM,mCAAG,GAAV;QACI,OAAO,IAAI,IAAI,EAAE,CAAC;KACrB;IAEM,sCAAM,GAAb,UAAc,IAAU,EAAE,aAAkB;QACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,MAAM,KAAK,CAAC,2CAA2C,CAAC,CAAC;SAC5D;QAED,IAAI,iBAAiB,EAAE;YACnB,IACI,IAAI,CAAC,UAAU;iBACd,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,EACvD;gBACE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACxB,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAClD,CAAC;aACL;YAED,aAAa,yBAAQ,aAAa,KAAE,QAAQ,EAAE,KAAK,GAAE,CAAC;YACtD,IAAM,GAAG,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,aAAa,CAAC,CAAC;YACrE,OAAO,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;SACtE;QAED,OAAO,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KAClE;IAEM,qCAAK,GAAZ,UAAa,KAAU,EAAE,WAAgB;;QAErC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1B;QACD,OAAO,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;KACrD;;;;;;IAOM,2CAAW,GAAlB,UAAmB,KAAU;QACzB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,CAAC,KAAK,EAAE;gBACR,OAAO,IAAI,CAAC;aACf;;;YAGD,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC5B,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACpB,OAAO,IAAI,CAAC;iBACf;aACJ;SACJ;QACD,OAAO,iBAAM,WAAW,YAAC,KAAK,CAAC,CAAC;KACnC;;;;IAKO,sDAAsB,GAA9B,UACI,IAAY,EACZ,KAAa,EACb,IAAY,EACZ,KAAiB,EACjB,OAAmB,EACnB,OAAmB;QAFnB,sBAAA,EAAA,SAAiB;QACjB,wBAAA,EAAA,WAAmB;QACnB,wBAAA,EAAA,WAAmB;QAEnB,IAAM,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAEpE,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;YACzB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;SACnD;QACD,OAAO,MAAM,CAAC;KACjB;;;;;;IAOO,6DAA6B,GAArC,UAAsC,GAAW;QAC7C,OAAO,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;KAC7C;;;;;;;;IASO,uCAAO,GAAf,UAAgB,GAAwB,EAAE,IAAU;QAChD,IAAM,CAAC,GAAG,IAAI,IAAI,CACd,IAAI,CAAC,GAAG,CACJ,IAAI,CAAC,WAAW,EAAE,EAClB,IAAI,CAAC,QAAQ,EAAE,EACf,IAAI,CAAC,OAAO,EAAE,EACd,IAAI,CAAC,QAAQ,EAAE,EACf,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,eAAe,EAAE,CACzB,CACJ,CAAC;QACF,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KACxB;;6CA/YI,QAAQ,YACR,MAAM,SAAC,oBAAoB;gBAElB,QAAQ;;IAhBb,qBAAqB;QADjC,UAAU,EAAE;QAcJ,WAAA,QAAQ,EAAE,CAAA;QACV,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;iDAEnB,QAAQ;OAhBb,qBAAqB,CA6ZjC;IAAD,4BAAC;CAAA,CA7Z0C,eAAe;;IC7E7C,4BAA4B,GAAuB;IAC5D,UAAU,EAAE,IAAI;IAChB,eAAe,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAC;IACxG,eAAe,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAC;IACpE,eAAe,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAC;IACrD,cAAc,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAC;IACjD,aAAa,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAC;IAC/D,kBAAkB,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC;CACvD;;ACbD;;;;IAiBA;KACC;IADY,oBAAoB;QANhC,QAAQ,CAAC;YACN,OAAO,EAAE,CAAC,cAAc,CAAC;YACzB,SAAS,EAAE;gBACP,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,qBAAqB,EAAC;aAC9D;SACJ,CAAC;OACW,oBAAoB,CAChC;IAAD,2BAAC;CADD,IACC;WAI0D,4BAA4B;AAEvF;IAAA;KACC;IADY,uBAAuB;QAJnC,QAAQ,CAAC;YACN,OAAO,EAAE,CAAC,oBAAoB,CAAC;YAC/B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,MAA8B,EAAC,CAAC;SACxF,CAAC;OACW,uBAAuB,CACnC;IAAD,8BAAC;CADD;;ACxBA;;;AASA,IAAM,MAAM,GAAIC,gBAAuB,GAAIA,gBAAuB,GAAG,OAAO,CAAC;AAmB7E;AACA,IAAa,oCAAoC,GAAG,IAAI,cAAc,CAClE,sCAAsC,EAAE;IACpC,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,4CAA4C;CACxD,CAAC,CAAC;AAEP;AACA,SAAgB,4CAA4C;IACxD,OAAO;QACH,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,KAAK;KACrB,CAAC;AACN,CAAC;AAED;AACA,SAASC,OAAK,CAAI,MAAc,EAAE,aAAmC;IACjE,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;KACrC;IACD,OAAO,WAAW,CAAC;AACvB,CAAC;AAID;IAA2C,yCAAuB;IAW9D,+BAA+D,iBAAyB,EACT,OAAyC;QADxH,YAEI,iBAAO,SAEV;QAJ8D,uBAAiB,GAAjB,iBAAiB,CAAQ;QACT,aAAO,GAAP,OAAO,CAAkC;QAEpH,KAAI,CAAC,SAAS,CAAC,iBAAiB,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;;KACxD;IAEM,yCAAS,GAAhB,UAAkB,MAAc;QAAhC,iBAYC;QAXG,iBAAM,SAAS,YAAC,MAAM,CAAC,CAAC;QAExB,IAAM,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG;YACf,UAAU,EAAE,gBAAgB,CAAC,MAAM,EAAE;YACrC,WAAW,EAAE,gBAAgB,CAAC,WAAW,EAAE;YAC3C,cAAc,EAAE,gBAAgB,CAAC,QAAQ,EAAE;YAC3C,eAAe,EAAE,gBAAgB,CAAC,aAAa,EAAE;YACjD,gBAAgB,EAAE,gBAAgB,CAAC,WAAW,EAAE;YAChD,KAAK,EAAEA,OAAK,CAAC,EAAE,EAAE,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAA,CAAC;SACvE,CAAC;KACL;IAGM,uCAAO,GAAd,UAAgB,IAAY;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;KAClC;IAEM,wCAAQ,GAAf,UAAiB,IAAY;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;KACnC;IAEM,sCAAM,GAAb,UAAe,IAAY;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;KACjC;IAEM,uCAAO,GAAd,UAAgB,IAAY;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;KAClC;IAEM,wCAAQ,GAAf,UAAiB,IAAY;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;KACnC;IAEM,0CAAU,GAAjB,UAAmB,IAAY;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;KACrC;IAEM,0CAAU,GAAjB,UAAmB,IAAY;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;KACrC;IAEM,uCAAO,GAAd,UAAgB,IAAY;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;KACrC;IAEM,iDAAiB,GAAxB,UAA0B,IAAY;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;KACzC;IAEM,wDAAwB,GAA/B,UAAiC,QAAgB,EAAE,SAAiB;QAChE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;KACvD;IAEM,2CAAW,GAAlB,UAAoB,IAAY;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC1C;IAEM,6CAAa,GAApB,UAAsB,KAAkC;QACpD,OAAO,KAAK,KAAK,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;KACxF;IAEM,iDAAiB,GAAxB,UAA0B,KAAkC;QACxD,IAAI,KAAK,KAAK,MAAM,EAAE;YAClB,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;SAC1C;QACD,IAAI,KAAK,KAAK,OAAO,EAAE;YACnB,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;SAC3C;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;KAC5C;IAEM,4CAAY,GAAnB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;KACjC;IAEM,yCAAS,GAAhB,UAAkB,IAAY;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;KACpC;IAEM,uCAAO,GAAd,UAAgB,QAAgB,EAAE,SAAiB;QAE/C,IAAI,QAAQ,IAAI,SAAS,EAAE;YACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;SAC7D;QAED,OAAO,QAAQ,KAAK,SAAS,CAAC;KACjC;IAEM,yCAAS,GAAhB,UAAkB,QAAgB,EAAE,SAAiB;QAEjD,IAAI,QAAQ,IAAI,SAAS,EAAE;YACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;SACpE;QAED,OAAO,QAAQ,KAAK,SAAS,CAAC;KACjC;IAEM,uCAAO,GAAd,UAAgB,IAAY;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;KACrC;IAEM,uCAAO,GAAd;QACI,OAAO,MAAM,CAAC,OAAO,EAAE,CAAC;KAC3B;IAEM,8CAAc,GAArB,UAAuB,GAAQ;QAC3B,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC/B;IAEM,gDAAgB,GAAvB,UAAyB,IAAY,EAAE,MAAc;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;KAChD;IAEM,iDAAiB,GAAxB,UAA0B,IAAY,EAAE,MAAc;QAClD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;KACjD;IAEM,+CAAe,GAAtB,UAAwB,IAAY,EAAE,MAAc;QAChD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;KAC/C;IAEM,wCAAQ,GAAf,UAAiB,IAAY,EAAE,MAAc;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KACzC;IAEM,0CAAU,GAAjB,UAAmB,IAAY,EAAE,MAAc;QAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KAC3C;IAEM,0CAAU,GAAjB,UAAmB,IAAY,EAAE,MAAc;QAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KAC3C;IAGM,0CAAU,GAAjB,UAAmB,IAAY,EAAE,KAAa,EAAE,IAAY,EAAE,KAAiB,EAAE,OAAmB,EAAE,OAAmB;QAA3D,sBAAA,EAAA,SAAiB;QAAE,wBAAA,EAAA,WAAmB;QAAE,wBAAA,EAAA,WAAmB;QACrH,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;YACzB,MAAM,KAAK,CAAC,2BAAwB,KAAK,gDAA4C,CAAC,CAAC;SAC1F;QAED,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,MAAM,KAAK,CAAC,oBAAiB,IAAI,uCAAmC,CAAC,CAAC;SACzE;QAED,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;YACzB,MAAM,KAAK,CAAC,qBAAkB,KAAK,0CAAsC,CAAC,CAAC;SAC9E;QAED,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE,EAAE;YAC7B,MAAM,KAAK,CAAC,uBAAoB,OAAO,yCAAqC,CAAC,CAAC;SACjF;QAED,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,EAAE,EAAE;YAC7B,MAAM,KAAK,CAAC,uBAAoB,OAAO,4CAAwC,CAAC,CAAC;SACpF;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,OAAO,SAAA,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;;QAGxG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YACnB,MAAM,KAAK,CAAC,oBAAiB,IAAI,kCAA2B,KAAK,QAAI,CAAC,CAAC;SAC1E;QAED,OAAO,MAAM,CAAC;KACjB;IAEM,qCAAK,GAAZ,UAAc,IAAY;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KACnE;IAEM,mCAAG,GAAV;QACI,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KACvD;IAEM,sCAAM,GAAb,UAAe,IAAY,EAAE,aAAkB;QAC3C,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,MAAM,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACrE;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACrC;IAEM,qCAAK,GAAZ,UAAc,KAAU,EAAE,WAAgB;QACtC,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACpC,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SACpF;QACD,OAAO,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC;KAC3E;IAED,sBAAI,8CAAW;aAAf;YACI,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;SACnD;;;OAAA;;;;;;IAOD,2CAAW,GAAX,UAAa,KAAU;QACnB,IAAI,IAAI,CAAC;QACT,IAAI,KAAK,YAAY,IAAI,EAAE;YACvB,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SACnC;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,CAAC,KAAK,EAAE;gBACR,OAAO,IAAI,CAAC;aACf;YACD,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;SAC/F;QACD,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,OAAO,IAAI,CAAC;SACf;QACD,OAAO,iBAAM,WAAW,YAAC,KAAK,CAAC,CAAC;KACnC;;IAGO,4CAAY,GAApB;QAAqB,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAC/B,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG,OAAV,MAAM,WAAQ,IAAI,KAAI,MAAM,wBAAI,IAAI,EAAC,CAAC;KACxF;;6CAjOa,QAAQ,YAAI,MAAM,SAAC,oBAAoB;gDACvC,QAAQ,YAAI,MAAM,SAAC,oCAAoC;;IAZ5D,qBAAqB;QADjC,UAAU,EAAE;QAYK,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;QACxC,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,oCAAoC,CAAC,CAAA;;OAZ7D,qBAAqB,CA6OjC;IAAD,4BAAC;CAAA,CA7O0C,eAAe;;ICjD7C,4BAA4B,GAAuB;IAC5D,UAAU,EAAE,MAAM;IAClB,eAAe,EAAE,MAAM;IACvB,eAAe,EAAE,GAAG;IACpB,eAAe,EAAE,IAAI;IACrB,cAAc,EAAE,UAAU;IAC1B,aAAa,EAAE,IAAI;IACnB,kBAAkB,EAAE,WAAW;CAClC;;ACbD;;;;IAmBA;KACC;IADY,oBAAoB;QAThC,QAAQ,CAAC;YACN,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,eAAe;oBACxB,QAAQ,EAAE,qBAAqB;oBAC/B,IAAI,EAAE,CAAC,oBAAoB,EAAE,oCAAoC,CAAC;iBACrE;aACJ;SACJ,CAAC;OACW,oBAAoB,CAChC;IAAD,2BAAC;CADD,IACC;WAI0D,4BAA4B;AAEvF;IAAA;KACC;IADY,uBAAuB;QAJnC,QAAQ,CAAC;YACN,OAAO,EAAE,CAAC,oBAAoB,CAAC;YAC/B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,MAA8B,EAAC,CAAC;SACxF,CAAC;OACW,uBAAuB,CACnC;IAAD,8BAAC;CADD;;AC1BA;;GAEG;;ACFH;;GAEG;;;;"}